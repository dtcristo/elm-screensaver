{"version":3,"sources":["webpack:///app.a59f0879.js","webpack:///./src/Main.elm","webpack:///./src/index.js"],"names":["webpackJsonp","/xT0","module","exports","__webpack_require__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","F2","fun","wrapper","a","b","arity","func","F3","c","F4","d","F5","e","F6","f","F7","g","F8","h","F9","i","A2","A3","A4","A5","A6","_elm_lang$animation_frame$Native_AnimationFrame","create","_elm_lang$core$Native_Scheduler","nativeBinding","callback","id","requestAnimationFrame","succeed","Date","now","cancelAnimationFrame","_elm_lang$core$Native_Basics","div","rem","mod","Error","r","m","logBase","base","n","Math","log","negate","abs","min","_elm_lang$core$Native_Utils","cmp","max","clamp","lo","hi","compare","x","y","ctor","ord","xor","not","isInfinite","Infinity","truncate","degrees","PI","turns","t","fromPolar","point","_0","_1","Tuple2","cos","sin","toPolar","sqrt","atan2","pi","E","tan","acos","asin","atan","ceiling","ceil","floor","round","toFloat","isNaN","eq","pair","stack","isEqual","eqHelp","pop","depth","push","getTime","key","_elm_lang$core$Dict$toList","_elm_lang$core$Set$toList","xs","_elm_lang$core$Native_Array","toJSArray","ys","length","EQ","LT","GT","String","valueOf","slice","_2","_3","_4","_5","chr","guid","_","count","update","oldRecord","updatedFields","newRecord","Cons","hd","tl","append","root","Nil","curr","crash","moduleName","region","message","regionToString","crashCase","value","toString","start","line","end","v","type","addSlashes","ctorStarter","substring","output","k","join","_elm_lang$core$Array$toList","str","c0","parenless","indexOf","elm_web_socket","isChar","s","replace","Tuple0","_elm_lang$core$Basics$always","_p2","_p3","_p4","_elm_lang$core$Basics_ops","_elm_lang$core$Basics$toString","_elm_lang$core$Basics$toFloat","_elm_lang$core$Basics$floor","_elm_lang$core$Basics$round","or","and","_elm_lang$core$Basics$max","_elm_lang$core$Basics$min","_elm_lang$core$Basics$compare","ge","le","gt","lt","neq","_elm_lang$core$Basics$pi","_elm_lang$core$Basics$abs","exp","floatDiv","mul","sub","add","_elm_lang$core$Basics$turns","_elm_lang$core$Basics$degrees","fail","error","cancel","andThen","task","onError","receive","rawSpawn","process","mailbox","enqueue","spawn","rawSend","msg","send","kill","sleep","time","setTimeout","clearTimeout","step","numSteps","MAX_STEPS","newRoot","shift","rest","workQueue","working","work","_elm_lang$core$Native_Platform","program","impl","flagDecoder","object","flags","initialize","init","subscriptions","renderer","programWithFlags","result","_elm_lang$core$Native_Json","run","htmlToProgram","vnode","emptyBag","batch","_elm_lang$core$Native_List","noChange","_elm_lang$virtual_dom$VirtualDom$program","view","model","main","onMessage","results","updateView","cmds","subs","dispatchEffects","managers","mainProcess","initApp","spawnLoop","ports","setupEffects","effectManagers","manager","isForeign","tag","setupOutgoingPort","setupIncomingPort","makeManager","info","state","onSelfMsg","router","fx","onEffects","self","undefined","sendToApp","sendToSelf","loop","handleMsg","leaf","home","list","branches","map","tagger","bag","tree","cmdBag","subBag","effectsDict","gatherEffects","isCmd","taggers","effect","toEffect","insert","applyTaggers","temp","cmdMap","subMap","newEffect","effects","checkPortName","name","outgoingPort","converter","outgoingPortMap","cmdList","currentSubs","subscribe","unsubscribe","index","splice","incomingPort","incomingPortMap","preInitOnEffects","subList","postInitResult","postInitOnEffects","sentBeforeInit","postInitSend","currentSend","currentOnEffects","preInitSend","incomingValue","_elm_lang$core$Json_Decode$decodeValue","finalTagger","_elm_lang$core$Platform_Cmd$batch","_elm_lang$core$Platform_Cmd$none","_elm_lang$core$Platform_Cmd_ops","commands","_elm_lang$core$Platform_Sub$batch","_elm_lang$core$Platform_Sub$none","_elm_lang$core$Platform$sendToSelf","_elm_lang$core$Platform$sendToApp","_elm_lang$core$Maybe$Nothing","$default","maybe","_p0","_elm_lang$core$Maybe$Just","maybeValue","_p1","ma","mb","mc","md","_p5","me","_p6","fromArray","arr","out","toArray","foldr","acc","map2","map3","zs","map4","ws","map5","vs","sortBy","sort","sortWith","cons","_elm_lang$core$List$map2","_v1","_v2","_elm_lang$core$List$any","isOkay","_v4","_v5","_elm_lang$core$List$foldr","_elm_lang$core$List$foldl","_v7","_v8","_v9","_elm_lang$core$List$length","_elm_lang$core$List_ops","_elm_lang$core$List$map","_elm_lang$core$List$maybeCons","pred","conditionalCons","front","back","mx","_p10","_elm_lang$core$List$reverse","_elm_lang$core$List$append","scan1","accAcc","_p11","_elm_lang$core$List$concat","lists","_elm_lang$core$List$takeReverse","_p13","_p14","_p16","_p15","sep","_p21","spersed","taken","_p22","_v23","_v24","_v25","_elm_lang$core$List$takeTailRec","_elm_lang$core$List$takeFast","ctr","_p23","_v26_5","_v26_1","_p28","_p27","_p26","_p25","_p24","_elm_lang$core$List$repeatHelp","_v27","_v28","_v29","_elm_lang$core$List$rangeHelp","_v30","_v31","_v32","_elm_lang$core$List$range","_elm_lang$core$Result$Err","def","_elm_lang$core$Result$Ok","_elm_lang$core$Task$onError","ra","rb","rc","rd","re","_p7","_p8","err","_p9","_elm_lang$core$Task$andThen","_elm_lang$core$Task$spawnCmd","_elm_lang$core$Task$fail","_elm_lang$core$Task$succeed","convert","_elm_lang$core$Task$map","taskA","_elm_lang$core$Task$map2","taskB","_elm_lang$core$Task$sequence","taskC","taskD","taskE","tasks","_elm_lang$core$Task$onEffects","_elm_lang$core$Task$init","_elm_lang$core$Task$onSelfMsg","_elm_lang$core$Task$command","_elm_lang$core$Task$Perform","_elm_lang$core$Task$perform","toMessage","_elm_lang$core$Task$cmdMap","resultToMessage","pkg","_elm_lang$core$Native_Debug","stdout","write","console","_elm_lang$core$Native_String","isEmpty","uncons","concat","strs","split","filter","reverse","foldl","len","repeat","left","right","dropLeft","dropRight","pad","half","padRight","padLeft","trim","trimLeft","trimRight","words","lines","toUpper","toUpperCase","toLower","toLowerCase","any","all","contains","startsWith","endsWith","lastIndexOf","indexes","subLen","is","toInt","intErr","parseInt","test","floatErr","toList","fromList","chars","_elm_lang$core$Native_Char","fromCode","fromCharCode","toCode","charCodeAt","toLocaleUpper","toLocaleUpperCase","toLocaleLower","toLocaleLowerCase","_elm_lang$core$Char$toCode","_elm_lang$core$Char$isBetween","low","high","$char","code","_elm_lang$core$String$concat","_elm_lang$core$Dict$foldr","_v3","dict","_elm_lang$core$Dict$foldl","_v6","_elm_lang$core$Dict$merge","leftStep","bothStep","rightStep","leftDict","rightDict","initialResult","stepState","rKey","rValue","_v10","_v11","_v12","leftovers","intermediateResult","_p12","_elm_lang$core$Dict$reportRemBug","lgot","rgot","_elm_lang$core$Dict$isBBlack","_v14_2","_elm_lang$core$Dict$sizeHelp","_v16","_v17","_elm_lang$core$Dict$get","targetKey","get","_v20","_v21","_v22","_elm_lang$core$Dict$member","_elm_lang$core$Dict$maxWithDefault","_p18","_v26","_elm_lang$core$Dict$NBlack","_elm_lang$core$Dict$BBlack","_elm_lang$core$Dict$Black","_elm_lang$core$Dict$blackish","_p19","_p20","_elm_lang$core$Dict$Red","_elm_lang$core$Dict$moreBlack","color","_elm_lang$core$Dict$lessBlack","_elm_lang$core$Dict$LBBlack","_elm_lang$core$Dict$LBlack","_elm_lang$core$Dict$RBEmpty_elm_builtin","_elm_lang$core$Dict$empty","_elm_lang$core$Dict$RBNode_elm_builtin","_elm_lang$core$Dict$ensureBlackRoot","_elm_lang$core$Dict$lessBlackTree","_elm_lang$core$Dict$balancedTree","col","xk","xv","yk","yv","zk","zv","_elm_lang$core$Dict$blacken","_elm_lang$core$Dict$redden","_elm_lang$core$Dict$balanceHelp","_v36_6","_v36_5","_v36_4","_v36_3","_v36_2","_v36_1","_v36_0","_elm_lang$core$Dict$balance","l","_elm_lang$core$Dict$bubble","_elm_lang$core$Dict$removeMax","_elm_lang$core$Dict$rem","_p29","_p36","_p35","_p34","_p40","_p39","_p38","newLeft","_p37","_p33","_p32","_p31","_elm_lang$core$Dict$map","_p41","_p42","_elm_lang$core$Dict$Same","_elm_lang$core$Dict$Remove","_elm_lang$core$Dict$Insert","_elm_lang$core$Dict$update","alter","up","_p43","_p44","_p55","_p54","_p53","_p52","_p51","_p46","_p47","flag","_p49","newRight","_p56","updatedDict","_elm_lang$core$Dict$insert","_elm_lang$core$Dict$filter","t1","t2","predicate","dictionary","_elm_lang$core$Dict$remove","_p58","_p59","_p60","_p62","_p61","_elm_lang$core$Native_Time","setInterval_","interval","setInterval","clearInterval","_elm_lang$core$Time$setInterval","_elm_lang$core$Time$spawnHelp","intervals","processes","spawnRest","spawnTimer","_elm_lang$core$Time$addMySub","_elm_lang$core$Time$now","_elm_lang$core$Time$onSelfMsg","tellTaggers","_elm_lang$core$Time$subscription","_elm_lang$core$Time$State","_elm_lang$core$Time$init","_elm_lang$core$Time$onEffects","_p17","newTaggers","spawnList","existingDict","killTask","newProcesses","_elm_lang$core$Time$Every","_elm_lang$core$Time$subMap","_elm_lang$core$Process$kill","_elm_lang$core$Process$spawn","_elm_lang$core$Tuple$second","_elm_lang$animation_frame$AnimationFrame$rAF","_elm_lang$animation_frame$AnimationFrame$subscription","_elm_lang$animation_frame$AnimationFrame$State","request","oldTime","_elm_lang$animation_frame$AnimationFrame$init","_elm_lang$animation_frame$AnimationFrame$onEffects","pid","_elm_lang$animation_frame$AnimationFrame$onSelfMsg","newTime","diff","_elm_lang$animation_frame$AnimationFrame$Diff","_elm_lang$animation_frame$AnimationFrame$diffs","_elm_lang$animation_frame$AnimationFrame$Time","_elm_lang$animation_frame$AnimationFrame$subMap","_elm_lang$virtual_dom$VirtualDom_Debug$wrap","_elm_lang$core$Color$fmod","integer","_elm_lang$core$Color$hslToRgb","red","green","blue","cMax","cMin","lightness","saturation","hue","normHue","chroma","_elm_lang$core$Color$toRgb","alpha","_elm_lang$core$Color$HSLA","_elm_lang$core$Color$hsla","_elm_lang$core$Color$RGBA","_elm_lang$core$Color$red","_elm_lang$core$Color$orange","_elm_lang$core$Color$yellow","_elm_lang$core$Color$green","_elm_lang$core$Color$blue","_elm_lang$core$Color$purple","array","unsafeGet","height","slot","lengths","table","set","item","unsafeSet","nodeCopy","getSlot","empty","initialize_","M","from","to","Array","pow","nodes","fromListPush","head","toPush","node","pushed","push_","siblise","newA","botRight","newSlot","toList_","indexedMap","indexedMap_","sliceLeft","sliceRight","sliced","append_","toRemove","calcToRemove","shuffle","appended","botLeft","insertRight","insertLeft","parentise","parent","subLengths","get2","set2","saveSlot","createNode","newB","read","source","jsArray","toJSArray_","inc","fromJSArray","fromJSArray_","_elm_lang$core$Array$initialize","decodePrimitive","decodeContainer","decoder","decodeNull","decodeField","field","decodeIndex","decodeKeyValuePairs","mapMany","decoders","oneOf","map1","d1","d2","d3","d4","d5","map6","d6","map7","d7","map8","d8","ok","badPrimitive","badIndex","nestedProblems","badField","badOneOf","problems","bad","badToString","problem","context","jsToString","JSON","stringify","runOnString","string","json","parse","runHelp","isFinite","keyValuePairs","answer","errors","equality","listEquality","aDecoders","bDecoders","encode","indentLevel","identity","encodeObject","obj","encodeNull","encodeArray","encodeList","_elm_lang$core$Json_Encode$bool","_elm_lang$core$Json_Encode$string","_elm_lang$core$Json_Decode$succeed","_elm_lang$core$Json_Decode$map","_elm_lang$core$Json_Decode$field","_elm_lang$virtual_dom$Native_VirtualDom","fields","text","factList","kidList","nodeHelp","organized","organizeFacts","namespace","facts","children","descendantsCount","kid","keyedNode","custom","thunk","args","lazy","fn","lazy2","lazy3","entry","ATTR_KEY","ATTR_NS_KEY","EVENT_KEY","subFacts","realKey","STYLE_KEY","styles","styleList","style","classes","property","attribute","attributeNS","on","options","equalEvents","stopPropagation","preventDefault","mapProperty","render","vNode","eventNode","subNode","subEventRoot","domNode","elm_event_node_ref","localDoc","createTextNode","createElementNS","createElement","applyFacts","appendChild","applyStyles","applyEvents","applyAttrs","applyAttrsNS","domNodeStyle","events","allHandlers","elm_handlers","handler","removeEventListener","makeEventHandler","addEventListener","eventHandler","event","currentEventNode","attrs","removeAttribute","setAttribute","nsAttrs","removeAttributeNS","setAttributeNS","patches","diffHelp","makePatch","data","aType","bType","aArgs","bArgs","same","subPatches","aTaggers","bTaggers","nesting","aSubNode","bSubNode","pairwiseRefEqual","factsDiff","diffFacts","diffChildren","diffKeyedChildren","patch","as","bs","category","aKey","aValue","bValue","subDiff","bKey","aParent","bParent","rootIndex","aChildren","bChildren","aLen","bLen","minLen","aChild","localPatches","changes","inserts","aIndex","bIndex","aNode","bNode","aLookAhead","bLookAhead","aNext","aNextKey","aNextNode","oldMatch","bNext","bNextKey","bNextNode","newMatch","insertNode","removeNode","endInserts","POSTFIX","addDomNodes","addDomNodesHelp","patchType","vChildren","childNodes","j","vChild","nextLow","applyPatches","rootDomNode","oldVirtualNode","applyPatchesHelp","localDomNode","newNode","applyPatch","applyPatchRedraw","replaceData","removeChild","lastChild","newNodes","parentNode","applyPatchReorder","replaceChild","frag","applyPatchReorderEndInsertsHelp","insertBefore","createDocumentFragment","makeProgram","flagChecker","debugWrap","debugMetadata","checker","normalSetup","debugSetup","staticProgram","nothing","checkNoFlags","checkYesFlags","errorMessage","innerHTML","normalRenderer","document","body","initialModel","initialVirtualNode","makeStepper","updateIfNeeded","rAF","nextNode","nextModel","currNode","popoutRef","doc","scrollTask","debugRenderer","viewIn","viewOut","msgs","getElementsByClassName","scrollTop","scrollHeight","appEventNode","appVirtualNode","appNode","appStepper","overVirtualNode","overNode","wrappedViewIn","wrapViewIn","overStepper","debugStepper","makeDebugStepper","isDebuggerOpen","openDebugWindow","next","virtualNode","close","debugWindow","screen","width","window","open","title","margin","padding","metaKey","which","location","reload","overlayNode","overflow","ignorer","makeIgnorer","blocking","normalTagger","blockTagger","tuple","newBlocking","traverse","verbEventListener","traverseHelp","mostEvents","allEvents","eventNames","isScroll","target","className","_elm_lang$virtual_dom$VirtualDom$defaultOptions","_elm_lang$virtual_dom$VirtualDom$onWithOptions","_elm_lang$virtual_dom$VirtualDom$style","eventName","_elm_lang$virtual_dom$VirtualDom$attribute","_elm_lang$virtual_dom$VirtualDom$property","_elm_lang$virtual_dom$VirtualDom$node","_elm_lang$html$Html$program","_elm_lang$html$Html$node","_elm_lang$html$Html_Attributes$attribute","_elm_lang$html$Html_Attributes$height","_elm_lang$html$Html_Attributes$width","_elm_lang$html$Html_Attributes$property","_elm_lang$html$Html_Attributes$style","bool","_elm_community$linear_algebra$Native_MJS","MJS_FLOAT_ARRAY_TYPE","Float64Array","V3","_temp1","_temp2","_temp3","z","$","u","getX","getY","getZ","setX","setY","setZ","toTuple3","fromTuple3","toRecord3","fromRecord3","neg","direction","normalize","lengthSquared","distance","dx","dy","dz","distanceSquared","im","scale","dot","cross","mul4x4","w","tmp","M4x4","I","m00","m01","m02","m03","m04","m05","m06","m07","m08","m09","m10","m11","m12","m13","m14","m15","fromRecord","m21","m31","m41","m22","m32","m42","m23","m33","m43","m24","m34","m44","toRecord","topLeft3x3","inverse","det","inverseOrthonormal","transpose","inverseTo3x3","a11","a21","a31","a12","a22","a32","a13","a23","a33","idet","makeFrustum","bottom","top","znear","zfar","makePerspective","fovy","aspect","ymax","ymin","xmin","xmax","makeOrtho","makeOrtho2D","a41","a42","a43","a14","a24","a34","a44","b11","b21","b31","b41","b12","b22","b32","b42","b13","b23","b33","b43","b14","b24","b34","b44","mulAffine","makeRotate","angle","axis","c1","rotate","a0","a1","a2","xyc1","xzc1","yzc1","t11","t21","t31","t12","t22","t32","t13","t23","t33","makeScale3","makeScale1","makeScale","scale3","scale1","makeTranslate3","makeTranslate1","makeTranslate","translate3Self","translate3","translate1","translateSelf","translate","makeLookAt","eye","center","tm1","tm2","transposeSelf","transformPoint","v0","v1","v2","transformLine","transformPointAffine","transformLineAffine","makeBasis","vx","vy","vz","vec3","v3getX","v3getY","v3getZ","v3setX","v3setY","v3setZ","v3add","v3sub","v3neg","v3direction","v3length","v3lengthSquared","v3distance","v3distanceSquared","v3normalize","v3scale","v3dot","v3cross","v3mul4x4","m4x4fromList","m4x4fromRecord","m4x4toRecord","m4x4identity","m4x4topLeft3x3","m4x4inverse","m4x4inverseOrthonormal","m4x4inverseTo3x3","m4x4makeFrustum","m4x4makePerspective","m4x4makeOrtho","m4x4makeOrtho2D","m4x4mul","m4x4Affine","m4x4makeRotate","m4x4rotate","m4x4makeScale3","m4x4makeScale1","m4x4makeScale","m4x4scale3","m4x4scale","m4x4makeTranslate3","m4x4makeTranslate","m4x4translate3","m4x4translate","m4x4makeLookAt","m4x4transpose","m4x4transformPoint","m4x4makeBasis","_elm_community$linear_algebra$Math_Vector3$vec3","_elm_community$linear_algebra$Math_Matrix4$translate","_elm_community$linear_algebra$Math_Matrix4$scale","_elm_community$linear_algebra$Math_Matrix4$rotate","_elm_community$linear_algebra$Math_Matrix4$makeOrtho","m4x4mulAffine","_elm_community$linear_algebra$Native_Math_Vector4","Float32Array","V4","getW","setW","toTuple","fromTuple","dw","vec4","_elm_lang$core$Random$onSelfMsg","seed","_elm_lang$core$Random$range","_elm_lang$core$Random$step","_elm_lang$core$Random$onEffects","newSeed","_elm_lang$core$Random$listHelp","generate","_elm_lang$core$Random$iLogBase","_elm_lang$core$Random$command","_elm_lang$core$Random$Generator","_elm_lang$core$Random$map","seed0","seed1","_elm_lang$core$Random$map2","seed2","_elm_lang$core$Random$State","genA","genB","seed3","_p30","seed4","_p45","_p48","_p50","seed5","_p57","_elm_lang$core$Random$initState","q","s2","_elm_lang$core$Random$magicNum7","s1","_elm_lang$core$Random$magicNum6","_elm_lang$core$Random$next","_p63","k2","rawState2","newState2","k1","rawState1","newState1","_elm_lang$core$Random$split","_p64","_p65","_p68","_p67","_p66","new_s2","new_s1","_elm_lang$core$Random$Seed","_elm_lang$core$Random$int","_p69","_p70","_p75","_p72","nextState","_p73","_p74","_elm_lang$core$Random$initialSeed","_p76","number","negativeOneToOne","_elm_lang$core$Random$maxInt","_p77","range","_elm_lang$core$Random$init","_elm_lang$core$Random$Generate","_elm_lang$core$Random$cmdMap","generator","_p78","_elm_community$webgl$WebGL_Settings_Internal$DepthTest","_elm_community$webgl$WebGL_Settings$FaceMode","_elm_community$webgl$WebGL_Settings_DepthTest$default","near","far","_elm_community$webgl$Native_WebGL","LOG","listEach","listLength","unsafeCoerceGLSL","src","entity","settings","vert","buffer","uniforms","applySetting","gl","setting","enable","BLEND","blendEquationSeparate","blendFuncSeparate","blendColor","_6","_7","_8","_9","DEPTH_TEST","depthFunc","depthMask","depthRange","STENCIL_TEST","stencilFuncSeparate","FRONT","stencilOpSeparate","stencilMaskSeparate","BACK","_10","SCISSOR_TEST","scissor","colorMask","CULL_FACE","cullFace","POLYGON_OFFSET_FILL","polygonOffset","SAMPLE_COVERAGE","sampleCoverage","SAMPLE_ALPHA_TO_COVERAGE","revertSetting","disable","doCompile","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","doLink","vshader","fshader","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","getRenderInfo","renderType","mode","TRIANGLES","elemSize","indexSize","LINE_STRIP","LINE_LOOP","POINTS","LINES","TRIANGLE_STRIP","TRIANGLE_FAN","getAttributeInfo","FLOAT","size","baseType","FLOAT_VEC2","FLOAT_VEC3","FLOAT_VEC4","INT","Int32Array","INT_VEC2","INT_VEC3","INT_VEC4","doBindAttribute","bufferElems","dataFill","cnt","fillOffset","elem","idxKeys","forEach","idx","attributeInfo","dataIdx","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","doBindSetup","drawable","indexBuffer","indices","makeSequentialBuffer","makeIndexedBuffer","ELEMENT_ARRAY_BUFFER","numIndices","buffers","Uint16Array","indicesList","getProgID","vertID","fragID","drawGL","drawEntity","progid","cache","programs","shaders","VERTEX_SHADER","FRAGMENT_SHADER","useProgram","setters","uniformSetters","createUniformSetters","setUniforms","entityType","numAttributes","ACTIVE_ATTRIBUTES","getActiveAttrib","attribLocation","getAttribLocation","enableVertexAttribArray","attributeBuffer","vertexAttribPointer","drawElements","UNSIGNED_SHORT","viewport","drawingBufferWidth","drawingBufferHeight","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","entities","textureCounter","numUniforms","ACTIVE_UNIFORMS","uniform","getActiveUniform","uniformLocation","getUniformLocation","uniform1i","uniform1f","uniform2fv","uniform3fv","uniform4fv","FLOAT_MAT4","uniformMatrix4fv","SAMPLER_2D","currentTexture","texture","activeTexture","TEXTURE0","tex","textures","createTexture","bindTexture","TEXTURE_2D","BOOL","values","Object","keys","setter","toHtml","implementation","contextAttributes","stencil","antialias","premultipliedAlpha","sceneSettings","option","clearDepth","clearColor","clearStencil","canvas","getContext","sceneSetting","oldModel","newModel","cb","_elm_community$webgl$WebGL$toHtmlWith","attributes","_elm_community$webgl$WebGL$entityWith","_elm_community$webgl$WebGL$entity","_elm_community$webgl$WebGL$Triangles","_elm_community$webgl$WebGL$triangles","_elm_community$webgl$WebGL$ClearColor","_elm_community$webgl$WebGL$clearColor","_elm_community$webgl$WebGL$Antialias","_elm_community$webgl$WebGL$antialias","_elm_community$webgl$WebGL$Depth","_elm_community$webgl$WebGL$depth","_elm_community$webgl$WebGL$Alpha","_elm_community$webgl$WebGL$alpha","_elm_lang$dom$Native_Dom","toTask","performTask","withNode","doStuff","getElementById","focus","blur","getScrollTop","setScrollTop","desiredScrollTop","toBottom","getScrollLeft","scrollLeft","setScrollLeft","desiredScrollLeft","toRight","scrollWidth","clientWidth","offsetWidth","rect","getBoundingClientRect","clientHeight","offsetHeight","fakeNode","onDocument","onWindow","_elm_lang$dom$Dom_LowLevel$onWindow","_elm_lang$window$Native_Window","innerWidth","innerHeight","_elm_lang$window$Window_ops","task1","task2","_elm_lang$window$Window$onSelfMsg","dimensions","_elm_lang$window$Window$init","_elm_lang$window$Window$size","_elm_lang$window$Window$onEffects","newSubs","oldState","_elm_lang$window$Window$subscription","_elm_lang$window$Window$Size","_elm_lang$window$Window$MySub","_elm_lang$window$Window$resizes","_elm_lang$window$Window$subMap","_dtcristo$elm_screensaver$Main$fragmentShader","_dtcristo$elm_screensaver$Main$vertexShader","_dtcristo$elm_screensaver$Main$projection","_dtcristo$elm_screensaver$Main$transformation","theta","position","_dtcristo$elm_screensaver$Main$Position","_dtcristo$elm_screensaver$Main$Vertex","_dtcristo$elm_screensaver$Main$face","rawColor","vertex","_dtcristo$elm_screensaver$Main$mesh","lbb","lfb","rfb","rbb","rbt","lbt","lft","rft","_dtcristo$elm_screensaver$Main$view","transformation","_dtcristo$elm_screensaver$Main$Negative","_dtcristo$elm_screensaver$Main$Positive","_dtcristo$elm_screensaver$Main$stepDirection","initial","ds","$new","_dtcristo$elm_screensaver$Main$step","dt","xNew","xDirectionNew","yNew","yDirectionNew","cmd","_dtcristo$elm_screensaver$Main$update","_dtcristo$elm_screensaver$Main$Frame","_dtcristo$elm_screensaver$Main$Resize","_dtcristo$elm_screensaver$Main$init","_dtcristo$elm_screensaver$Main$subscriptions","_dtcristo$elm_screensaver$Main$main","Elm","apply","call","this","0","cilB","lVK7","Main","embed","querySelector"],"mappings":"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,EAAA,GAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,GAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,GAAAA,EAAA,IACAD,EAAA,GAAAC,EAAA,GAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,GAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,GAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,GAAAA,EAAA,IACAD,EAAA,IAAAC,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAAAA,EAAA,GAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,GAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,GAAAA,EAAA,GACAD,EAAA,IAAAC,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAAAA,EAAA,GAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,GAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,GAAAA,EAAA,GACAD,EAAA,GAAAC,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAAAA,EAAA,GAAAA,EAAA,GACAD,EAAA,IAAAC,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAAAA,EAAA,GAAAA,EAAA,GACAD,EAAA,IAAAC,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAAAA,EAAA,GAAAA,EAAA,GAAAA,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","file":"app.a59f0879.js","sourcesContent":["webpackJsonp([0],{\n\n/***/ \"/xT0\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n(function() {\n'use strict';\n\nfunction F2(fun)\n{\n  function wrapper(a) { return function(b) { return fun(a,b); }; }\n  wrapper.arity = 2;\n  wrapper.func = fun;\n  return wrapper;\n}\n\nfunction F3(fun)\n{\n  function wrapper(a) {\n    return function(b) { return function(c) { return fun(a, b, c); }; };\n  }\n  wrapper.arity = 3;\n  wrapper.func = fun;\n  return wrapper;\n}\n\nfunction F4(fun)\n{\n  function wrapper(a) { return function(b) { return function(c) {\n    return function(d) { return fun(a, b, c, d); }; }; };\n  }\n  wrapper.arity = 4;\n  wrapper.func = fun;\n  return wrapper;\n}\n\nfunction F5(fun)\n{\n  function wrapper(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return fun(a, b, c, d, e); }; }; }; };\n  }\n  wrapper.arity = 5;\n  wrapper.func = fun;\n  return wrapper;\n}\n\nfunction F6(fun)\n{\n  function wrapper(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return fun(a, b, c, d, e, f); }; }; }; }; };\n  }\n  wrapper.arity = 6;\n  wrapper.func = fun;\n  return wrapper;\n}\n\nfunction F7(fun)\n{\n  function wrapper(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return function(g) { return fun(a, b, c, d, e, f, g); }; }; }; }; }; };\n  }\n  wrapper.arity = 7;\n  wrapper.func = fun;\n  return wrapper;\n}\n\nfunction F8(fun)\n{\n  function wrapper(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return function(g) { return function(h) {\n    return fun(a, b, c, d, e, f, g, h); }; }; }; }; }; }; };\n  }\n  wrapper.arity = 8;\n  wrapper.func = fun;\n  return wrapper;\n}\n\nfunction F9(fun)\n{\n  function wrapper(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return function(g) { return function(h) { return function(i) {\n    return fun(a, b, c, d, e, f, g, h, i); }; }; }; }; }; }; }; };\n  }\n  wrapper.arity = 9;\n  wrapper.func = fun;\n  return wrapper;\n}\n\nfunction A2(fun, a, b)\n{\n  return fun.arity === 2\n    ? fun.func(a, b)\n    : fun(a)(b);\n}\nfunction A3(fun, a, b, c)\n{\n  return fun.arity === 3\n    ? fun.func(a, b, c)\n    : fun(a)(b)(c);\n}\nfunction A4(fun, a, b, c, d)\n{\n  return fun.arity === 4\n    ? fun.func(a, b, c, d)\n    : fun(a)(b)(c)(d);\n}\nfunction A5(fun, a, b, c, d, e)\n{\n  return fun.arity === 5\n    ? fun.func(a, b, c, d, e)\n    : fun(a)(b)(c)(d)(e);\n}\nfunction A6(fun, a, b, c, d, e, f)\n{\n  return fun.arity === 6\n    ? fun.func(a, b, c, d, e, f)\n    : fun(a)(b)(c)(d)(e)(f);\n}\nfunction A7(fun, a, b, c, d, e, f, g)\n{\n  return fun.arity === 7\n    ? fun.func(a, b, c, d, e, f, g)\n    : fun(a)(b)(c)(d)(e)(f)(g);\n}\nfunction A8(fun, a, b, c, d, e, f, g, h)\n{\n  return fun.arity === 8\n    ? fun.func(a, b, c, d, e, f, g, h)\n    : fun(a)(b)(c)(d)(e)(f)(g)(h);\n}\nfunction A9(fun, a, b, c, d, e, f, g, h, i)\n{\n  return fun.arity === 9\n    ? fun.func(a, b, c, d, e, f, g, h, i)\n    : fun(a)(b)(c)(d)(e)(f)(g)(h)(i);\n}\n\nvar _elm_lang$animation_frame$Native_AnimationFrame = function()\n{\n\nfunction create()\n{\n\treturn _elm_lang$core$Native_Scheduler.nativeBinding(function(callback)\n\t{\n\t\tvar id = requestAnimationFrame(function() {\n\t\t\tcallback(_elm_lang$core$Native_Scheduler.succeed(Date.now()));\n\t\t});\n\n\t\treturn function() {\n\t\t\tcancelAnimationFrame(id);\n\t\t};\n\t});\n}\n\nreturn {\n\tcreate: create\n};\n\n}();\n\n//import Native.Utils //\n\nvar _elm_lang$core$Native_Basics = function() {\n\nfunction div(a, b)\n{\n\treturn (a / b) | 0;\n}\nfunction rem(a, b)\n{\n\treturn a % b;\n}\nfunction mod(a, b)\n{\n\tif (b === 0)\n\t{\n\t\tthrow new Error('Cannot perform mod 0. Division by zero error.');\n\t}\n\tvar r = a % b;\n\tvar m = a === 0 ? 0 : (b > 0 ? (a >= 0 ? r : r + b) : -mod(-a, -b));\n\n\treturn m === b ? 0 : m;\n}\nfunction logBase(base, n)\n{\n\treturn Math.log(n) / Math.log(base);\n}\nfunction negate(n)\n{\n\treturn -n;\n}\nfunction abs(n)\n{\n\treturn n < 0 ? -n : n;\n}\n\nfunction min(a, b)\n{\n\treturn _elm_lang$core$Native_Utils.cmp(a, b) < 0 ? a : b;\n}\nfunction max(a, b)\n{\n\treturn _elm_lang$core$Native_Utils.cmp(a, b) > 0 ? a : b;\n}\nfunction clamp(lo, hi, n)\n{\n\treturn _elm_lang$core$Native_Utils.cmp(n, lo) < 0\n\t\t? lo\n\t\t: _elm_lang$core$Native_Utils.cmp(n, hi) > 0\n\t\t\t? hi\n\t\t\t: n;\n}\n\nvar ord = ['LT', 'EQ', 'GT'];\n\nfunction compare(x, y)\n{\n\treturn { ctor: ord[_elm_lang$core$Native_Utils.cmp(x, y) + 1] };\n}\n\nfunction xor(a, b)\n{\n\treturn a !== b;\n}\nfunction not(b)\n{\n\treturn !b;\n}\nfunction isInfinite(n)\n{\n\treturn n === Infinity || n === -Infinity;\n}\n\nfunction truncate(n)\n{\n\treturn n | 0;\n}\n\nfunction degrees(d)\n{\n\treturn d * Math.PI / 180;\n}\nfunction turns(t)\n{\n\treturn 2 * Math.PI * t;\n}\nfunction fromPolar(point)\n{\n\tvar r = point._0;\n\tvar t = point._1;\n\treturn _elm_lang$core$Native_Utils.Tuple2(r * Math.cos(t), r * Math.sin(t));\n}\nfunction toPolar(point)\n{\n\tvar x = point._0;\n\tvar y = point._1;\n\treturn _elm_lang$core$Native_Utils.Tuple2(Math.sqrt(x * x + y * y), Math.atan2(y, x));\n}\n\nreturn {\n\tdiv: F2(div),\n\trem: F2(rem),\n\tmod: F2(mod),\n\n\tpi: Math.PI,\n\te: Math.E,\n\tcos: Math.cos,\n\tsin: Math.sin,\n\ttan: Math.tan,\n\tacos: Math.acos,\n\tasin: Math.asin,\n\tatan: Math.atan,\n\tatan2: F2(Math.atan2),\n\n\tdegrees: degrees,\n\tturns: turns,\n\tfromPolar: fromPolar,\n\ttoPolar: toPolar,\n\n\tsqrt: Math.sqrt,\n\tlogBase: F2(logBase),\n\tnegate: negate,\n\tabs: abs,\n\tmin: F2(min),\n\tmax: F2(max),\n\tclamp: F3(clamp),\n\tcompare: F2(compare),\n\n\txor: F2(xor),\n\tnot: not,\n\n\ttruncate: truncate,\n\tceiling: Math.ceil,\n\tfloor: Math.floor,\n\tround: Math.round,\n\ttoFloat: function(x) { return x; },\n\tisNaN: isNaN,\n\tisInfinite: isInfinite\n};\n\n}();\n//import //\n\nvar _elm_lang$core$Native_Utils = function() {\n\n// COMPARISONS\n\nfunction eq(x, y)\n{\n\tvar stack = [];\n\tvar isEqual = eqHelp(x, y, 0, stack);\n\tvar pair;\n\twhile (isEqual && (pair = stack.pop()))\n\t{\n\t\tisEqual = eqHelp(pair.x, pair.y, 0, stack);\n\t}\n\treturn isEqual;\n}\n\n\nfunction eqHelp(x, y, depth, stack)\n{\n\tif (depth > 100)\n\t{\n\t\tstack.push({ x: x, y: y });\n\t\treturn true;\n\t}\n\n\tif (x === y)\n\t{\n\t\treturn true;\n\t}\n\n\tif (typeof x !== 'object')\n\t{\n\t\tif (typeof x === 'function')\n\t\t{\n\t\t\tthrow new Error(\n\t\t\t\t'Trying to use `(==)` on functions. There is no way to know if functions are \"the same\" in the Elm sense.'\n\t\t\t\t+ ' Read more about this at http://package.elm-lang.org/packages/elm-lang/core/latest/Basics#=='\n\t\t\t\t+ ' which describes why it is this way and what the better version will look like.'\n\t\t\t);\n\t\t}\n\t\treturn false;\n\t}\n\n\tif (x === null || y === null)\n\t{\n\t\treturn false\n\t}\n\n\tif (x instanceof Date)\n\t{\n\t\treturn x.getTime() === y.getTime();\n\t}\n\n\tif (!('ctor' in x))\n\t{\n\t\tfor (var key in x)\n\t\t{\n\t\t\tif (!eqHelp(x[key], y[key], depth + 1, stack))\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\t// convert Dicts and Sets to lists\n\tif (x.ctor === 'RBNode_elm_builtin' || x.ctor === 'RBEmpty_elm_builtin')\n\t{\n\t\tx = _elm_lang$core$Dict$toList(x);\n\t\ty = _elm_lang$core$Dict$toList(y);\n\t}\n\tif (x.ctor === 'Set_elm_builtin')\n\t{\n\t\tx = _elm_lang$core$Set$toList(x);\n\t\ty = _elm_lang$core$Set$toList(y);\n\t}\n\n\t// check if lists are equal without recursion\n\tif (x.ctor === '::')\n\t{\n\t\tvar a = x;\n\t\tvar b = y;\n\t\twhile (a.ctor === '::' && b.ctor === '::')\n\t\t{\n\t\t\tif (!eqHelp(a._0, b._0, depth + 1, stack))\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\ta = a._1;\n\t\t\tb = b._1;\n\t\t}\n\t\treturn a.ctor === b.ctor;\n\t}\n\n\t// check if Arrays are equal\n\tif (x.ctor === '_Array')\n\t{\n\t\tvar xs = _elm_lang$core$Native_Array.toJSArray(x);\n\t\tvar ys = _elm_lang$core$Native_Array.toJSArray(y);\n\t\tif (xs.length !== ys.length)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tfor (var i = 0; i < xs.length; i++)\n\t\t{\n\t\t\tif (!eqHelp(xs[i], ys[i], depth + 1, stack))\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tif (!eqHelp(x.ctor, y.ctor, depth + 1, stack))\n\t{\n\t\treturn false;\n\t}\n\n\tfor (var key in x)\n\t{\n\t\tif (!eqHelp(x[key], y[key], depth + 1, stack))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n// Code in Generate/JavaScript.hs, Basics.js, and List.js depends on\n// the particular integer values assigned to LT, EQ, and GT.\n\nvar LT = -1, EQ = 0, GT = 1;\n\nfunction cmp(x, y)\n{\n\tif (typeof x !== 'object')\n\t{\n\t\treturn x === y ? EQ : x < y ? LT : GT;\n\t}\n\n\tif (x instanceof String)\n\t{\n\t\tvar a = x.valueOf();\n\t\tvar b = y.valueOf();\n\t\treturn a === b ? EQ : a < b ? LT : GT;\n\t}\n\n\tif (x.ctor === '::' || x.ctor === '[]')\n\t{\n\t\twhile (x.ctor === '::' && y.ctor === '::')\n\t\t{\n\t\t\tvar ord = cmp(x._0, y._0);\n\t\t\tif (ord !== EQ)\n\t\t\t{\n\t\t\t\treturn ord;\n\t\t\t}\n\t\t\tx = x._1;\n\t\t\ty = y._1;\n\t\t}\n\t\treturn x.ctor === y.ctor ? EQ : x.ctor === '[]' ? LT : GT;\n\t}\n\n\tif (x.ctor.slice(0, 6) === '_Tuple')\n\t{\n\t\tvar ord;\n\t\tvar n = x.ctor.slice(6) - 0;\n\t\tvar err = 'cannot compare tuples with more than 6 elements.';\n\t\tif (n === 0) return EQ;\n\t\tif (n >= 1) { ord = cmp(x._0, y._0); if (ord !== EQ) return ord;\n\t\tif (n >= 2) { ord = cmp(x._1, y._1); if (ord !== EQ) return ord;\n\t\tif (n >= 3) { ord = cmp(x._2, y._2); if (ord !== EQ) return ord;\n\t\tif (n >= 4) { ord = cmp(x._3, y._3); if (ord !== EQ) return ord;\n\t\tif (n >= 5) { ord = cmp(x._4, y._4); if (ord !== EQ) return ord;\n\t\tif (n >= 6) { ord = cmp(x._5, y._5); if (ord !== EQ) return ord;\n\t\tif (n >= 7) throw new Error('Comparison error: ' + err); } } } } } }\n\t\treturn EQ;\n\t}\n\n\tthrow new Error(\n\t\t'Comparison error: comparison is only defined on ints, '\n\t\t+ 'floats, times, chars, strings, lists of comparable values, '\n\t\t+ 'and tuples of comparable values.'\n\t);\n}\n\n\n// COMMON VALUES\n\nvar Tuple0 = {\n\tctor: '_Tuple0'\n};\n\nfunction Tuple2(x, y)\n{\n\treturn {\n\t\tctor: '_Tuple2',\n\t\t_0: x,\n\t\t_1: y\n\t};\n}\n\nfunction chr(c)\n{\n\treturn new String(c);\n}\n\n\n// GUID\n\nvar count = 0;\nfunction guid(_)\n{\n\treturn count++;\n}\n\n\n// RECORDS\n\nfunction update(oldRecord, updatedFields)\n{\n\tvar newRecord = {};\n\n\tfor (var key in oldRecord)\n\t{\n\t\tnewRecord[key] = oldRecord[key];\n\t}\n\n\tfor (var key in updatedFields)\n\t{\n\t\tnewRecord[key] = updatedFields[key];\n\t}\n\n\treturn newRecord;\n}\n\n\n//// LIST STUFF ////\n\nvar Nil = { ctor: '[]' };\n\nfunction Cons(hd, tl)\n{\n\treturn {\n\t\tctor: '::',\n\t\t_0: hd,\n\t\t_1: tl\n\t};\n}\n\nfunction append(xs, ys)\n{\n\t// append Strings\n\tif (typeof xs === 'string')\n\t{\n\t\treturn xs + ys;\n\t}\n\n\t// append Lists\n\tif (xs.ctor === '[]')\n\t{\n\t\treturn ys;\n\t}\n\tvar root = Cons(xs._0, Nil);\n\tvar curr = root;\n\txs = xs._1;\n\twhile (xs.ctor !== '[]')\n\t{\n\t\tcurr._1 = Cons(xs._0, Nil);\n\t\txs = xs._1;\n\t\tcurr = curr._1;\n\t}\n\tcurr._1 = ys;\n\treturn root;\n}\n\n\n// CRASHES\n\nfunction crash(moduleName, region)\n{\n\treturn function(message) {\n\t\tthrow new Error(\n\t\t\t'Ran into a `Debug.crash` in module `' + moduleName + '` ' + regionToString(region) + '\\n'\n\t\t\t+ 'The message provided by the code author is:\\n\\n    '\n\t\t\t+ message\n\t\t);\n\t};\n}\n\nfunction crashCase(moduleName, region, value)\n{\n\treturn function(message) {\n\t\tthrow new Error(\n\t\t\t'Ran into a `Debug.crash` in module `' + moduleName + '`\\n\\n'\n\t\t\t+ 'This was caused by the `case` expression ' + regionToString(region) + '.\\n'\n\t\t\t+ 'One of the branches ended with a crash and the following value got through:\\n\\n    ' + toString(value) + '\\n\\n'\n\t\t\t+ 'The message provided by the code author is:\\n\\n    '\n\t\t\t+ message\n\t\t);\n\t};\n}\n\nfunction regionToString(region)\n{\n\tif (region.start.line == region.end.line)\n\t{\n\t\treturn 'on line ' + region.start.line;\n\t}\n\treturn 'between lines ' + region.start.line + ' and ' + region.end.line;\n}\n\n\n// TO STRING\n\nfunction toString(v)\n{\n\tvar type = typeof v;\n\tif (type === 'function')\n\t{\n\t\treturn '<function>';\n\t}\n\n\tif (type === 'boolean')\n\t{\n\t\treturn v ? 'True' : 'False';\n\t}\n\n\tif (type === 'number')\n\t{\n\t\treturn v + '';\n\t}\n\n\tif (v instanceof String)\n\t{\n\t\treturn '\\'' + addSlashes(v, true) + '\\'';\n\t}\n\n\tif (type === 'string')\n\t{\n\t\treturn '\"' + addSlashes(v, false) + '\"';\n\t}\n\n\tif (v === null)\n\t{\n\t\treturn 'null';\n\t}\n\n\tif (type === 'object' && 'ctor' in v)\n\t{\n\t\tvar ctorStarter = v.ctor.substring(0, 5);\n\n\t\tif (ctorStarter === '_Tupl')\n\t\t{\n\t\t\tvar output = [];\n\t\t\tfor (var k in v)\n\t\t\t{\n\t\t\t\tif (k === 'ctor') continue;\n\t\t\t\toutput.push(toString(v[k]));\n\t\t\t}\n\t\t\treturn '(' + output.join(',') + ')';\n\t\t}\n\n\t\tif (ctorStarter === '_Task')\n\t\t{\n\t\t\treturn '<task>'\n\t\t}\n\n\t\tif (v.ctor === '_Array')\n\t\t{\n\t\t\tvar list = _elm_lang$core$Array$toList(v);\n\t\t\treturn 'Array.fromList ' + toString(list);\n\t\t}\n\n\t\tif (v.ctor === '<decoder>')\n\t\t{\n\t\t\treturn '<decoder>';\n\t\t}\n\n\t\tif (v.ctor === '_Process')\n\t\t{\n\t\t\treturn '<process:' + v.id + '>';\n\t\t}\n\n\t\tif (v.ctor === '::')\n\t\t{\n\t\t\tvar output = '[' + toString(v._0);\n\t\t\tv = v._1;\n\t\t\twhile (v.ctor === '::')\n\t\t\t{\n\t\t\t\toutput += ',' + toString(v._0);\n\t\t\t\tv = v._1;\n\t\t\t}\n\t\t\treturn output + ']';\n\t\t}\n\n\t\tif (v.ctor === '[]')\n\t\t{\n\t\t\treturn '[]';\n\t\t}\n\n\t\tif (v.ctor === 'Set_elm_builtin')\n\t\t{\n\t\t\treturn 'Set.fromList ' + toString(_elm_lang$core$Set$toList(v));\n\t\t}\n\n\t\tif (v.ctor === 'RBNode_elm_builtin' || v.ctor === 'RBEmpty_elm_builtin')\n\t\t{\n\t\t\treturn 'Dict.fromList ' + toString(_elm_lang$core$Dict$toList(v));\n\t\t}\n\n\t\tvar output = '';\n\t\tfor (var i in v)\n\t\t{\n\t\t\tif (i === 'ctor') continue;\n\t\t\tvar str = toString(v[i]);\n\t\t\tvar c0 = str[0];\n\t\t\tvar parenless = c0 === '{' || c0 === '(' || c0 === '<' || c0 === '\"' || str.indexOf(' ') < 0;\n\t\t\toutput += ' ' + (parenless ? str : '(' + str + ')');\n\t\t}\n\t\treturn v.ctor + output;\n\t}\n\n\tif (type === 'object')\n\t{\n\t\tif (v instanceof Date)\n\t\t{\n\t\t\treturn '<' + v.toString() + '>';\n\t\t}\n\n\t\tif (v.elm_web_socket)\n\t\t{\n\t\t\treturn '<websocket>';\n\t\t}\n\n\t\tvar output = [];\n\t\tfor (var k in v)\n\t\t{\n\t\t\toutput.push(k + ' = ' + toString(v[k]));\n\t\t}\n\t\tif (output.length === 0)\n\t\t{\n\t\t\treturn '{}';\n\t\t}\n\t\treturn '{ ' + output.join(', ') + ' }';\n\t}\n\n\treturn '<internal structure>';\n}\n\nfunction addSlashes(str, isChar)\n{\n\tvar s = str.replace(/\\\\/g, '\\\\\\\\')\n\t\t\t  .replace(/\\n/g, '\\\\n')\n\t\t\t  .replace(/\\t/g, '\\\\t')\n\t\t\t  .replace(/\\r/g, '\\\\r')\n\t\t\t  .replace(/\\v/g, '\\\\v')\n\t\t\t  .replace(/\\0/g, '\\\\0');\n\tif (isChar)\n\t{\n\t\treturn s.replace(/\\'/g, '\\\\\\'');\n\t}\n\telse\n\t{\n\t\treturn s.replace(/\\\"/g, '\\\\\"');\n\t}\n}\n\n\nreturn {\n\teq: eq,\n\tcmp: cmp,\n\tTuple0: Tuple0,\n\tTuple2: Tuple2,\n\tchr: chr,\n\tupdate: update,\n\tguid: guid,\n\n\tappend: F2(append),\n\n\tcrash: crash,\n\tcrashCase: crashCase,\n\n\ttoString: toString\n};\n\n}();\nvar _elm_lang$core$Basics$never = function (_p0) {\n\tnever:\n\twhile (true) {\n\t\tvar _p1 = _p0;\n\t\tvar _v1 = _p1._0;\n\t\t_p0 = _v1;\n\t\tcontinue never;\n\t}\n};\nvar _elm_lang$core$Basics$uncurry = F2(\n\tfunction (f, _p2) {\n\t\tvar _p3 = _p2;\n\t\treturn A2(f, _p3._0, _p3._1);\n\t});\nvar _elm_lang$core$Basics$curry = F3(\n\tfunction (f, a, b) {\n\t\treturn f(\n\t\t\t{ctor: '_Tuple2', _0: a, _1: b});\n\t});\nvar _elm_lang$core$Basics$flip = F3(\n\tfunction (f, b, a) {\n\t\treturn A2(f, a, b);\n\t});\nvar _elm_lang$core$Basics$always = F2(\n\tfunction (a, _p4) {\n\t\treturn a;\n\t});\nvar _elm_lang$core$Basics$identity = function (x) {\n\treturn x;\n};\nvar _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};\n_elm_lang$core$Basics_ops['<|'] = F2(\n\tfunction (f, x) {\n\t\treturn f(x);\n\t});\nvar _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};\n_elm_lang$core$Basics_ops['|>'] = F2(\n\tfunction (x, f) {\n\t\treturn f(x);\n\t});\nvar _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};\n_elm_lang$core$Basics_ops['>>'] = F3(\n\tfunction (f, g, x) {\n\t\treturn g(\n\t\t\tf(x));\n\t});\nvar _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};\n_elm_lang$core$Basics_ops['<<'] = F3(\n\tfunction (g, f, x) {\n\t\treturn g(\n\t\t\tf(x));\n\t});\nvar _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};\n_elm_lang$core$Basics_ops['++'] = _elm_lang$core$Native_Utils.append;\nvar _elm_lang$core$Basics$toString = _elm_lang$core$Native_Utils.toString;\nvar _elm_lang$core$Basics$isInfinite = _elm_lang$core$Native_Basics.isInfinite;\nvar _elm_lang$core$Basics$isNaN = _elm_lang$core$Native_Basics.isNaN;\nvar _elm_lang$core$Basics$toFloat = _elm_lang$core$Native_Basics.toFloat;\nvar _elm_lang$core$Basics$ceiling = _elm_lang$core$Native_Basics.ceiling;\nvar _elm_lang$core$Basics$floor = _elm_lang$core$Native_Basics.floor;\nvar _elm_lang$core$Basics$truncate = _elm_lang$core$Native_Basics.truncate;\nvar _elm_lang$core$Basics$round = _elm_lang$core$Native_Basics.round;\nvar _elm_lang$core$Basics$not = _elm_lang$core$Native_Basics.not;\nvar _elm_lang$core$Basics$xor = _elm_lang$core$Native_Basics.xor;\nvar _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};\n_elm_lang$core$Basics_ops['||'] = _elm_lang$core$Native_Basics.or;\nvar _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};\n_elm_lang$core$Basics_ops['&&'] = _elm_lang$core$Native_Basics.and;\nvar _elm_lang$core$Basics$max = _elm_lang$core$Native_Basics.max;\nvar _elm_lang$core$Basics$min = _elm_lang$core$Native_Basics.min;\nvar _elm_lang$core$Basics$compare = _elm_lang$core$Native_Basics.compare;\nvar _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};\n_elm_lang$core$Basics_ops['>='] = _elm_lang$core$Native_Basics.ge;\nvar _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};\n_elm_lang$core$Basics_ops['<='] = _elm_lang$core$Native_Basics.le;\nvar _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};\n_elm_lang$core$Basics_ops['>'] = _elm_lang$core$Native_Basics.gt;\nvar _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};\n_elm_lang$core$Basics_ops['<'] = _elm_lang$core$Native_Basics.lt;\nvar _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};\n_elm_lang$core$Basics_ops['/='] = _elm_lang$core$Native_Basics.neq;\nvar _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};\n_elm_lang$core$Basics_ops['=='] = _elm_lang$core$Native_Basics.eq;\nvar _elm_lang$core$Basics$e = _elm_lang$core$Native_Basics.e;\nvar _elm_lang$core$Basics$pi = _elm_lang$core$Native_Basics.pi;\nvar _elm_lang$core$Basics$clamp = _elm_lang$core$Native_Basics.clamp;\nvar _elm_lang$core$Basics$logBase = _elm_lang$core$Native_Basics.logBase;\nvar _elm_lang$core$Basics$abs = _elm_lang$core$Native_Basics.abs;\nvar _elm_lang$core$Basics$negate = _elm_lang$core$Native_Basics.negate;\nvar _elm_lang$core$Basics$sqrt = _elm_lang$core$Native_Basics.sqrt;\nvar _elm_lang$core$Basics$atan2 = _elm_lang$core$Native_Basics.atan2;\nvar _elm_lang$core$Basics$atan = _elm_lang$core$Native_Basics.atan;\nvar _elm_lang$core$Basics$asin = _elm_lang$core$Native_Basics.asin;\nvar _elm_lang$core$Basics$acos = _elm_lang$core$Native_Basics.acos;\nvar _elm_lang$core$Basics$tan = _elm_lang$core$Native_Basics.tan;\nvar _elm_lang$core$Basics$sin = _elm_lang$core$Native_Basics.sin;\nvar _elm_lang$core$Basics$cos = _elm_lang$core$Native_Basics.cos;\nvar _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};\n_elm_lang$core$Basics_ops['^'] = _elm_lang$core$Native_Basics.exp;\nvar _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};\n_elm_lang$core$Basics_ops['%'] = _elm_lang$core$Native_Basics.mod;\nvar _elm_lang$core$Basics$rem = _elm_lang$core$Native_Basics.rem;\nvar _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};\n_elm_lang$core$Basics_ops['//'] = _elm_lang$core$Native_Basics.div;\nvar _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};\n_elm_lang$core$Basics_ops['/'] = _elm_lang$core$Native_Basics.floatDiv;\nvar _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};\n_elm_lang$core$Basics_ops['*'] = _elm_lang$core$Native_Basics.mul;\nvar _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};\n_elm_lang$core$Basics_ops['-'] = _elm_lang$core$Native_Basics.sub;\nvar _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};\n_elm_lang$core$Basics_ops['+'] = _elm_lang$core$Native_Basics.add;\nvar _elm_lang$core$Basics$toPolar = _elm_lang$core$Native_Basics.toPolar;\nvar _elm_lang$core$Basics$fromPolar = _elm_lang$core$Native_Basics.fromPolar;\nvar _elm_lang$core$Basics$turns = _elm_lang$core$Native_Basics.turns;\nvar _elm_lang$core$Basics$degrees = _elm_lang$core$Native_Basics.degrees;\nvar _elm_lang$core$Basics$radians = function (t) {\n\treturn t;\n};\nvar _elm_lang$core$Basics$GT = {ctor: 'GT'};\nvar _elm_lang$core$Basics$EQ = {ctor: 'EQ'};\nvar _elm_lang$core$Basics$LT = {ctor: 'LT'};\nvar _elm_lang$core$Basics$JustOneMore = function (a) {\n\treturn {ctor: 'JustOneMore', _0: a};\n};\n\n//import Native.Utils //\n\nvar _elm_lang$core$Native_Scheduler = function() {\n\nvar MAX_STEPS = 10000;\n\n\n// TASKS\n\nfunction succeed(value)\n{\n\treturn {\n\t\tctor: '_Task_succeed',\n\t\tvalue: value\n\t};\n}\n\nfunction fail(error)\n{\n\treturn {\n\t\tctor: '_Task_fail',\n\t\tvalue: error\n\t};\n}\n\nfunction nativeBinding(callback)\n{\n\treturn {\n\t\tctor: '_Task_nativeBinding',\n\t\tcallback: callback,\n\t\tcancel: null\n\t};\n}\n\nfunction andThen(callback, task)\n{\n\treturn {\n\t\tctor: '_Task_andThen',\n\t\tcallback: callback,\n\t\ttask: task\n\t};\n}\n\nfunction onError(callback, task)\n{\n\treturn {\n\t\tctor: '_Task_onError',\n\t\tcallback: callback,\n\t\ttask: task\n\t};\n}\n\nfunction receive(callback)\n{\n\treturn {\n\t\tctor: '_Task_receive',\n\t\tcallback: callback\n\t};\n}\n\n\n// PROCESSES\n\nfunction rawSpawn(task)\n{\n\tvar process = {\n\t\tctor: '_Process',\n\t\tid: _elm_lang$core$Native_Utils.guid(),\n\t\troot: task,\n\t\tstack: null,\n\t\tmailbox: []\n\t};\n\n\tenqueue(process);\n\n\treturn process;\n}\n\nfunction spawn(task)\n{\n\treturn nativeBinding(function(callback) {\n\t\tvar process = rawSpawn(task);\n\t\tcallback(succeed(process));\n\t});\n}\n\nfunction rawSend(process, msg)\n{\n\tprocess.mailbox.push(msg);\n\tenqueue(process);\n}\n\nfunction send(process, msg)\n{\n\treturn nativeBinding(function(callback) {\n\t\trawSend(process, msg);\n\t\tcallback(succeed(_elm_lang$core$Native_Utils.Tuple0));\n\t});\n}\n\nfunction kill(process)\n{\n\treturn nativeBinding(function(callback) {\n\t\tvar root = process.root;\n\t\tif (root.ctor === '_Task_nativeBinding' && root.cancel)\n\t\t{\n\t\t\troot.cancel();\n\t\t}\n\n\t\tprocess.root = null;\n\n\t\tcallback(succeed(_elm_lang$core$Native_Utils.Tuple0));\n\t});\n}\n\nfunction sleep(time)\n{\n\treturn nativeBinding(function(callback) {\n\t\tvar id = setTimeout(function() {\n\t\t\tcallback(succeed(_elm_lang$core$Native_Utils.Tuple0));\n\t\t}, time);\n\n\t\treturn function() { clearTimeout(id); };\n\t});\n}\n\n\n// STEP PROCESSES\n\nfunction step(numSteps, process)\n{\n\twhile (numSteps < MAX_STEPS)\n\t{\n\t\tvar ctor = process.root.ctor;\n\n\t\tif (ctor === '_Task_succeed')\n\t\t{\n\t\t\twhile (process.stack && process.stack.ctor === '_Task_onError')\n\t\t\t{\n\t\t\t\tprocess.stack = process.stack.rest;\n\t\t\t}\n\t\t\tif (process.stack === null)\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tprocess.root = process.stack.callback(process.root.value);\n\t\t\tprocess.stack = process.stack.rest;\n\t\t\t++numSteps;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (ctor === '_Task_fail')\n\t\t{\n\t\t\twhile (process.stack && process.stack.ctor === '_Task_andThen')\n\t\t\t{\n\t\t\t\tprocess.stack = process.stack.rest;\n\t\t\t}\n\t\t\tif (process.stack === null)\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tprocess.root = process.stack.callback(process.root.value);\n\t\t\tprocess.stack = process.stack.rest;\n\t\t\t++numSteps;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (ctor === '_Task_andThen')\n\t\t{\n\t\t\tprocess.stack = {\n\t\t\t\tctor: '_Task_andThen',\n\t\t\t\tcallback: process.root.callback,\n\t\t\t\trest: process.stack\n\t\t\t};\n\t\t\tprocess.root = process.root.task;\n\t\t\t++numSteps;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (ctor === '_Task_onError')\n\t\t{\n\t\t\tprocess.stack = {\n\t\t\t\tctor: '_Task_onError',\n\t\t\t\tcallback: process.root.callback,\n\t\t\t\trest: process.stack\n\t\t\t};\n\t\t\tprocess.root = process.root.task;\n\t\t\t++numSteps;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (ctor === '_Task_nativeBinding')\n\t\t{\n\t\t\tprocess.root.cancel = process.root.callback(function(newRoot) {\n\t\t\t\tprocess.root = newRoot;\n\t\t\t\tenqueue(process);\n\t\t\t});\n\n\t\t\tbreak;\n\t\t}\n\n\t\tif (ctor === '_Task_receive')\n\t\t{\n\t\t\tvar mailbox = process.mailbox;\n\t\t\tif (mailbox.length === 0)\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tprocess.root = process.root.callback(mailbox.shift());\n\t\t\t++numSteps;\n\t\t\tcontinue;\n\t\t}\n\n\t\tthrow new Error(ctor);\n\t}\n\n\tif (numSteps < MAX_STEPS)\n\t{\n\t\treturn numSteps + 1;\n\t}\n\tenqueue(process);\n\n\treturn numSteps;\n}\n\n\n// WORK QUEUE\n\nvar working = false;\nvar workQueue = [];\n\nfunction enqueue(process)\n{\n\tworkQueue.push(process);\n\n\tif (!working)\n\t{\n\t\tsetTimeout(work, 0);\n\t\tworking = true;\n\t}\n}\n\nfunction work()\n{\n\tvar numSteps = 0;\n\tvar process;\n\twhile (numSteps < MAX_STEPS && (process = workQueue.shift()))\n\t{\n\t\tif (process.root)\n\t\t{\n\t\t\tnumSteps = step(numSteps, process);\n\t\t}\n\t}\n\tif (!process)\n\t{\n\t\tworking = false;\n\t\treturn;\n\t}\n\tsetTimeout(work, 0);\n}\n\n\nreturn {\n\tsucceed: succeed,\n\tfail: fail,\n\tnativeBinding: nativeBinding,\n\tandThen: F2(andThen),\n\tonError: F2(onError),\n\treceive: receive,\n\n\tspawn: spawn,\n\tkill: kill,\n\tsleep: sleep,\n\tsend: F2(send),\n\n\trawSpawn: rawSpawn,\n\trawSend: rawSend\n};\n\n}();\n//import //\n\nvar _elm_lang$core$Native_Platform = function() {\n\n\n// PROGRAMS\n\nfunction program(impl)\n{\n\treturn function(flagDecoder)\n\t{\n\t\treturn function(object, moduleName)\n\t\t{\n\t\t\tobject['worker'] = function worker(flags)\n\t\t\t{\n\t\t\t\tif (typeof flags !== 'undefined')\n\t\t\t\t{\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t'The `' + moduleName + '` module does not need flags.\\n'\n\t\t\t\t\t\t+ 'Call ' + moduleName + '.worker() with no arguments and you should be all set!'\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\treturn initialize(\n\t\t\t\t\timpl.init,\n\t\t\t\t\timpl.update,\n\t\t\t\t\timpl.subscriptions,\n\t\t\t\t\trenderer\n\t\t\t\t);\n\t\t\t};\n\t\t};\n\t};\n}\n\nfunction programWithFlags(impl)\n{\n\treturn function(flagDecoder)\n\t{\n\t\treturn function(object, moduleName)\n\t\t{\n\t\t\tobject['worker'] = function worker(flags)\n\t\t\t{\n\t\t\t\tif (typeof flagDecoder === 'undefined')\n\t\t\t\t{\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t'Are you trying to sneak a Never value into Elm? Trickster!\\n'\n\t\t\t\t\t\t+ 'It looks like ' + moduleName + '.main is defined with `programWithFlags` but has type `Program Never`.\\n'\n\t\t\t\t\t\t+ 'Use `program` instead if you do not want flags.'\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tvar result = A2(_elm_lang$core$Native_Json.run, flagDecoder, flags);\n\t\t\t\tif (result.ctor === 'Err')\n\t\t\t\t{\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\tmoduleName + '.worker(...) was called with an unexpected argument.\\n'\n\t\t\t\t\t\t+ 'I tried to convert it to an Elm value, but ran into this problem:\\n\\n'\n\t\t\t\t\t\t+ result._0\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\treturn initialize(\n\t\t\t\t\timpl.init(result._0),\n\t\t\t\t\timpl.update,\n\t\t\t\t\timpl.subscriptions,\n\t\t\t\t\trenderer\n\t\t\t\t);\n\t\t\t};\n\t\t};\n\t};\n}\n\nfunction renderer(enqueue, _)\n{\n\treturn function(_) {};\n}\n\n\n// HTML TO PROGRAM\n\nfunction htmlToProgram(vnode)\n{\n\tvar emptyBag = batch(_elm_lang$core$Native_List.Nil);\n\tvar noChange = _elm_lang$core$Native_Utils.Tuple2(\n\t\t_elm_lang$core$Native_Utils.Tuple0,\n\t\temptyBag\n\t);\n\n\treturn _elm_lang$virtual_dom$VirtualDom$program({\n\t\tinit: noChange,\n\t\tview: function(model) { return main; },\n\t\tupdate: F2(function(msg, model) { return noChange; }),\n\t\tsubscriptions: function (model) { return emptyBag; }\n\t});\n}\n\n\n// INITIALIZE A PROGRAM\n\nfunction initialize(init, update, subscriptions, renderer)\n{\n\t// ambient state\n\tvar managers = {};\n\tvar updateView;\n\n\t// init and update state in main process\n\tvar initApp = _elm_lang$core$Native_Scheduler.nativeBinding(function(callback) {\n\t\tvar model = init._0;\n\t\tupdateView = renderer(enqueue, model);\n\t\tvar cmds = init._1;\n\t\tvar subs = subscriptions(model);\n\t\tdispatchEffects(managers, cmds, subs);\n\t\tcallback(_elm_lang$core$Native_Scheduler.succeed(model));\n\t});\n\n\tfunction onMessage(msg, model)\n\t{\n\t\treturn _elm_lang$core$Native_Scheduler.nativeBinding(function(callback) {\n\t\t\tvar results = A2(update, msg, model);\n\t\t\tmodel = results._0;\n\t\t\tupdateView(model);\n\t\t\tvar cmds = results._1;\n\t\t\tvar subs = subscriptions(model);\n\t\t\tdispatchEffects(managers, cmds, subs);\n\t\t\tcallback(_elm_lang$core$Native_Scheduler.succeed(model));\n\t\t});\n\t}\n\n\tvar mainProcess = spawnLoop(initApp, onMessage);\n\n\tfunction enqueue(msg)\n\t{\n\t\t_elm_lang$core$Native_Scheduler.rawSend(mainProcess, msg);\n\t}\n\n\tvar ports = setupEffects(managers, enqueue);\n\n\treturn ports ? { ports: ports } : {};\n}\n\n\n// EFFECT MANAGERS\n\nvar effectManagers = {};\n\nfunction setupEffects(managers, callback)\n{\n\tvar ports;\n\n\t// setup all necessary effect managers\n\tfor (var key in effectManagers)\n\t{\n\t\tvar manager = effectManagers[key];\n\n\t\tif (manager.isForeign)\n\t\t{\n\t\t\tports = ports || {};\n\t\t\tports[key] = manager.tag === 'cmd'\n\t\t\t\t? setupOutgoingPort(key)\n\t\t\t\t: setupIncomingPort(key, callback);\n\t\t}\n\n\t\tmanagers[key] = makeManager(manager, callback);\n\t}\n\n\treturn ports;\n}\n\nfunction makeManager(info, callback)\n{\n\tvar router = {\n\t\tmain: callback,\n\t\tself: undefined\n\t};\n\n\tvar tag = info.tag;\n\tvar onEffects = info.onEffects;\n\tvar onSelfMsg = info.onSelfMsg;\n\n\tfunction onMessage(msg, state)\n\t{\n\t\tif (msg.ctor === 'self')\n\t\t{\n\t\t\treturn A3(onSelfMsg, router, msg._0, state);\n\t\t}\n\n\t\tvar fx = msg._0;\n\t\tswitch (tag)\n\t\t{\n\t\t\tcase 'cmd':\n\t\t\t\treturn A3(onEffects, router, fx.cmds, state);\n\n\t\t\tcase 'sub':\n\t\t\t\treturn A3(onEffects, router, fx.subs, state);\n\n\t\t\tcase 'fx':\n\t\t\t\treturn A4(onEffects, router, fx.cmds, fx.subs, state);\n\t\t}\n\t}\n\n\tvar process = spawnLoop(info.init, onMessage);\n\trouter.self = process;\n\treturn process;\n}\n\nfunction sendToApp(router, msg)\n{\n\treturn _elm_lang$core$Native_Scheduler.nativeBinding(function(callback)\n\t{\n\t\trouter.main(msg);\n\t\tcallback(_elm_lang$core$Native_Scheduler.succeed(_elm_lang$core$Native_Utils.Tuple0));\n\t});\n}\n\nfunction sendToSelf(router, msg)\n{\n\treturn A2(_elm_lang$core$Native_Scheduler.send, router.self, {\n\t\tctor: 'self',\n\t\t_0: msg\n\t});\n}\n\n\n// HELPER for STATEFUL LOOPS\n\nfunction spawnLoop(init, onMessage)\n{\n\tvar andThen = _elm_lang$core$Native_Scheduler.andThen;\n\n\tfunction loop(state)\n\t{\n\t\tvar handleMsg = _elm_lang$core$Native_Scheduler.receive(function(msg) {\n\t\t\treturn onMessage(msg, state);\n\t\t});\n\t\treturn A2(andThen, loop, handleMsg);\n\t}\n\n\tvar task = A2(andThen, loop, init);\n\n\treturn _elm_lang$core$Native_Scheduler.rawSpawn(task);\n}\n\n\n// BAGS\n\nfunction leaf(home)\n{\n\treturn function(value)\n\t{\n\t\treturn {\n\t\t\ttype: 'leaf',\n\t\t\thome: home,\n\t\t\tvalue: value\n\t\t};\n\t};\n}\n\nfunction batch(list)\n{\n\treturn {\n\t\ttype: 'node',\n\t\tbranches: list\n\t};\n}\n\nfunction map(tagger, bag)\n{\n\treturn {\n\t\ttype: 'map',\n\t\ttagger: tagger,\n\t\ttree: bag\n\t}\n}\n\n\n// PIPE BAGS INTO EFFECT MANAGERS\n\nfunction dispatchEffects(managers, cmdBag, subBag)\n{\n\tvar effectsDict = {};\n\tgatherEffects(true, cmdBag, effectsDict, null);\n\tgatherEffects(false, subBag, effectsDict, null);\n\n\tfor (var home in managers)\n\t{\n\t\tvar fx = home in effectsDict\n\t\t\t? effectsDict[home]\n\t\t\t: {\n\t\t\t\tcmds: _elm_lang$core$Native_List.Nil,\n\t\t\t\tsubs: _elm_lang$core$Native_List.Nil\n\t\t\t};\n\n\t\t_elm_lang$core$Native_Scheduler.rawSend(managers[home], { ctor: 'fx', _0: fx });\n\t}\n}\n\nfunction gatherEffects(isCmd, bag, effectsDict, taggers)\n{\n\tswitch (bag.type)\n\t{\n\t\tcase 'leaf':\n\t\t\tvar home = bag.home;\n\t\t\tvar effect = toEffect(isCmd, home, taggers, bag.value);\n\t\t\teffectsDict[home] = insert(isCmd, effect, effectsDict[home]);\n\t\t\treturn;\n\n\t\tcase 'node':\n\t\t\tvar list = bag.branches;\n\t\t\twhile (list.ctor !== '[]')\n\t\t\t{\n\t\t\t\tgatherEffects(isCmd, list._0, effectsDict, taggers);\n\t\t\t\tlist = list._1;\n\t\t\t}\n\t\t\treturn;\n\n\t\tcase 'map':\n\t\t\tgatherEffects(isCmd, bag.tree, effectsDict, {\n\t\t\t\ttagger: bag.tagger,\n\t\t\t\trest: taggers\n\t\t\t});\n\t\t\treturn;\n\t}\n}\n\nfunction toEffect(isCmd, home, taggers, value)\n{\n\tfunction applyTaggers(x)\n\t{\n\t\tvar temp = taggers;\n\t\twhile (temp)\n\t\t{\n\t\t\tx = temp.tagger(x);\n\t\t\ttemp = temp.rest;\n\t\t}\n\t\treturn x;\n\t}\n\n\tvar map = isCmd\n\t\t? effectManagers[home].cmdMap\n\t\t: effectManagers[home].subMap;\n\n\treturn A2(map, applyTaggers, value)\n}\n\nfunction insert(isCmd, newEffect, effects)\n{\n\teffects = effects || {\n\t\tcmds: _elm_lang$core$Native_List.Nil,\n\t\tsubs: _elm_lang$core$Native_List.Nil\n\t};\n\tif (isCmd)\n\t{\n\t\teffects.cmds = _elm_lang$core$Native_List.Cons(newEffect, effects.cmds);\n\t\treturn effects;\n\t}\n\teffects.subs = _elm_lang$core$Native_List.Cons(newEffect, effects.subs);\n\treturn effects;\n}\n\n\n// PORTS\n\nfunction checkPortName(name)\n{\n\tif (name in effectManagers)\n\t{\n\t\tthrow new Error('There can only be one port named `' + name + '`, but your program has multiple.');\n\t}\n}\n\n\n// OUTGOING PORTS\n\nfunction outgoingPort(name, converter)\n{\n\tcheckPortName(name);\n\teffectManagers[name] = {\n\t\ttag: 'cmd',\n\t\tcmdMap: outgoingPortMap,\n\t\tconverter: converter,\n\t\tisForeign: true\n\t};\n\treturn leaf(name);\n}\n\nvar outgoingPortMap = F2(function cmdMap(tagger, value) {\n\treturn value;\n});\n\nfunction setupOutgoingPort(name)\n{\n\tvar subs = [];\n\tvar converter = effectManagers[name].converter;\n\n\t// CREATE MANAGER\n\n\tvar init = _elm_lang$core$Native_Scheduler.succeed(null);\n\n\tfunction onEffects(router, cmdList, state)\n\t{\n\t\twhile (cmdList.ctor !== '[]')\n\t\t{\n\t\t\t// grab a separate reference to subs in case unsubscribe is called\n\t\t\tvar currentSubs = subs;\n\t\t\tvar value = converter(cmdList._0);\n\t\t\tfor (var i = 0; i < currentSubs.length; i++)\n\t\t\t{\n\t\t\t\tcurrentSubs[i](value);\n\t\t\t}\n\t\t\tcmdList = cmdList._1;\n\t\t}\n\t\treturn init;\n\t}\n\n\teffectManagers[name].init = init;\n\teffectManagers[name].onEffects = F3(onEffects);\n\n\t// PUBLIC API\n\n\tfunction subscribe(callback)\n\t{\n\t\tsubs.push(callback);\n\t}\n\n\tfunction unsubscribe(callback)\n\t{\n\t\t// copy subs into a new array in case unsubscribe is called within a\n\t\t// subscribed callback\n\t\tsubs = subs.slice();\n\t\tvar index = subs.indexOf(callback);\n\t\tif (index >= 0)\n\t\t{\n\t\t\tsubs.splice(index, 1);\n\t\t}\n\t}\n\n\treturn {\n\t\tsubscribe: subscribe,\n\t\tunsubscribe: unsubscribe\n\t};\n}\n\n\n// INCOMING PORTS\n\nfunction incomingPort(name, converter)\n{\n\tcheckPortName(name);\n\teffectManagers[name] = {\n\t\ttag: 'sub',\n\t\tsubMap: incomingPortMap,\n\t\tconverter: converter,\n\t\tisForeign: true\n\t};\n\treturn leaf(name);\n}\n\nvar incomingPortMap = F2(function subMap(tagger, finalTagger)\n{\n\treturn function(value)\n\t{\n\t\treturn tagger(finalTagger(value));\n\t};\n});\n\nfunction setupIncomingPort(name, callback)\n{\n\tvar sentBeforeInit = [];\n\tvar subs = _elm_lang$core$Native_List.Nil;\n\tvar converter = effectManagers[name].converter;\n\tvar currentOnEffects = preInitOnEffects;\n\tvar currentSend = preInitSend;\n\n\t// CREATE MANAGER\n\n\tvar init = _elm_lang$core$Native_Scheduler.succeed(null);\n\n\tfunction preInitOnEffects(router, subList, state)\n\t{\n\t\tvar postInitResult = postInitOnEffects(router, subList, state);\n\n\t\tfor(var i = 0; i < sentBeforeInit.length; i++)\n\t\t{\n\t\t\tpostInitSend(sentBeforeInit[i]);\n\t\t}\n\n\t\tsentBeforeInit = null; // to release objects held in queue\n\t\tcurrentSend = postInitSend;\n\t\tcurrentOnEffects = postInitOnEffects;\n\t\treturn postInitResult;\n\t}\n\n\tfunction postInitOnEffects(router, subList, state)\n\t{\n\t\tsubs = subList;\n\t\treturn init;\n\t}\n\n\tfunction onEffects(router, subList, state)\n\t{\n\t\treturn currentOnEffects(router, subList, state);\n\t}\n\n\teffectManagers[name].init = init;\n\teffectManagers[name].onEffects = F3(onEffects);\n\n\t// PUBLIC API\n\n\tfunction preInitSend(value)\n\t{\n\t\tsentBeforeInit.push(value);\n\t}\n\n\tfunction postInitSend(value)\n\t{\n\t\tvar temp = subs;\n\t\twhile (temp.ctor !== '[]')\n\t\t{\n\t\t\tcallback(temp._0(value));\n\t\t\ttemp = temp._1;\n\t\t}\n\t}\n\n\tfunction send(incomingValue)\n\t{\n\t\tvar result = A2(_elm_lang$core$Json_Decode$decodeValue, converter, incomingValue);\n\t\tif (result.ctor === 'Err')\n\t\t{\n\t\t\tthrow new Error('Trying to send an unexpected type of value through port `' + name + '`:\\n' + result._0);\n\t\t}\n\n\t\tcurrentSend(result._0);\n\t}\n\n\treturn { send: send };\n}\n\nreturn {\n\t// routers\n\tsendToApp: F2(sendToApp),\n\tsendToSelf: F2(sendToSelf),\n\n\t// global setup\n\teffectManagers: effectManagers,\n\toutgoingPort: outgoingPort,\n\tincomingPort: incomingPort,\n\n\thtmlToProgram: htmlToProgram,\n\tprogram: program,\n\tprogramWithFlags: programWithFlags,\n\tinitialize: initialize,\n\n\t// effect bags\n\tleaf: leaf,\n\tbatch: batch,\n\tmap: F2(map)\n};\n\n}();\n\nvar _elm_lang$core$Platform_Cmd$batch = _elm_lang$core$Native_Platform.batch;\nvar _elm_lang$core$Platform_Cmd$none = _elm_lang$core$Platform_Cmd$batch(\n\t{ctor: '[]'});\nvar _elm_lang$core$Platform_Cmd_ops = _elm_lang$core$Platform_Cmd_ops || {};\n_elm_lang$core$Platform_Cmd_ops['!'] = F2(\n\tfunction (model, commands) {\n\t\treturn {\n\t\t\tctor: '_Tuple2',\n\t\t\t_0: model,\n\t\t\t_1: _elm_lang$core$Platform_Cmd$batch(commands)\n\t\t};\n\t});\nvar _elm_lang$core$Platform_Cmd$map = _elm_lang$core$Native_Platform.map;\nvar _elm_lang$core$Platform_Cmd$Cmd = {ctor: 'Cmd'};\n\nvar _elm_lang$core$Platform_Sub$batch = _elm_lang$core$Native_Platform.batch;\nvar _elm_lang$core$Platform_Sub$none = _elm_lang$core$Platform_Sub$batch(\n\t{ctor: '[]'});\nvar _elm_lang$core$Platform_Sub$map = _elm_lang$core$Native_Platform.map;\nvar _elm_lang$core$Platform_Sub$Sub = {ctor: 'Sub'};\n\nvar _elm_lang$core$Platform$hack = _elm_lang$core$Native_Scheduler.succeed;\nvar _elm_lang$core$Platform$sendToSelf = _elm_lang$core$Native_Platform.sendToSelf;\nvar _elm_lang$core$Platform$sendToApp = _elm_lang$core$Native_Platform.sendToApp;\nvar _elm_lang$core$Platform$programWithFlags = _elm_lang$core$Native_Platform.programWithFlags;\nvar _elm_lang$core$Platform$program = _elm_lang$core$Native_Platform.program;\nvar _elm_lang$core$Platform$Program = {ctor: 'Program'};\nvar _elm_lang$core$Platform$Task = {ctor: 'Task'};\nvar _elm_lang$core$Platform$ProcessId = {ctor: 'ProcessId'};\nvar _elm_lang$core$Platform$Router = {ctor: 'Router'};\n\nvar _elm_lang$core$Maybe$withDefault = F2(\n\tfunction ($default, maybe) {\n\t\tvar _p0 = maybe;\n\t\tif (_p0.ctor === 'Just') {\n\t\t\treturn _p0._0;\n\t\t} else {\n\t\t\treturn $default;\n\t\t}\n\t});\nvar _elm_lang$core$Maybe$Nothing = {ctor: 'Nothing'};\nvar _elm_lang$core$Maybe$andThen = F2(\n\tfunction (callback, maybeValue) {\n\t\tvar _p1 = maybeValue;\n\t\tif (_p1.ctor === 'Just') {\n\t\t\treturn callback(_p1._0);\n\t\t} else {\n\t\t\treturn _elm_lang$core$Maybe$Nothing;\n\t\t}\n\t});\nvar _elm_lang$core$Maybe$Just = function (a) {\n\treturn {ctor: 'Just', _0: a};\n};\nvar _elm_lang$core$Maybe$map = F2(\n\tfunction (f, maybe) {\n\t\tvar _p2 = maybe;\n\t\tif (_p2.ctor === 'Just') {\n\t\t\treturn _elm_lang$core$Maybe$Just(\n\t\t\t\tf(_p2._0));\n\t\t} else {\n\t\t\treturn _elm_lang$core$Maybe$Nothing;\n\t\t}\n\t});\nvar _elm_lang$core$Maybe$map2 = F3(\n\tfunction (func, ma, mb) {\n\t\tvar _p3 = {ctor: '_Tuple2', _0: ma, _1: mb};\n\t\tif (((_p3.ctor === '_Tuple2') && (_p3._0.ctor === 'Just')) && (_p3._1.ctor === 'Just')) {\n\t\t\treturn _elm_lang$core$Maybe$Just(\n\t\t\t\tA2(func, _p3._0._0, _p3._1._0));\n\t\t} else {\n\t\t\treturn _elm_lang$core$Maybe$Nothing;\n\t\t}\n\t});\nvar _elm_lang$core$Maybe$map3 = F4(\n\tfunction (func, ma, mb, mc) {\n\t\tvar _p4 = {ctor: '_Tuple3', _0: ma, _1: mb, _2: mc};\n\t\tif ((((_p4.ctor === '_Tuple3') && (_p4._0.ctor === 'Just')) && (_p4._1.ctor === 'Just')) && (_p4._2.ctor === 'Just')) {\n\t\t\treturn _elm_lang$core$Maybe$Just(\n\t\t\t\tA3(func, _p4._0._0, _p4._1._0, _p4._2._0));\n\t\t} else {\n\t\t\treturn _elm_lang$core$Maybe$Nothing;\n\t\t}\n\t});\nvar _elm_lang$core$Maybe$map4 = F5(\n\tfunction (func, ma, mb, mc, md) {\n\t\tvar _p5 = {ctor: '_Tuple4', _0: ma, _1: mb, _2: mc, _3: md};\n\t\tif (((((_p5.ctor === '_Tuple4') && (_p5._0.ctor === 'Just')) && (_p5._1.ctor === 'Just')) && (_p5._2.ctor === 'Just')) && (_p5._3.ctor === 'Just')) {\n\t\t\treturn _elm_lang$core$Maybe$Just(\n\t\t\t\tA4(func, _p5._0._0, _p5._1._0, _p5._2._0, _p5._3._0));\n\t\t} else {\n\t\t\treturn _elm_lang$core$Maybe$Nothing;\n\t\t}\n\t});\nvar _elm_lang$core$Maybe$map5 = F6(\n\tfunction (func, ma, mb, mc, md, me) {\n\t\tvar _p6 = {ctor: '_Tuple5', _0: ma, _1: mb, _2: mc, _3: md, _4: me};\n\t\tif ((((((_p6.ctor === '_Tuple5') && (_p6._0.ctor === 'Just')) && (_p6._1.ctor === 'Just')) && (_p6._2.ctor === 'Just')) && (_p6._3.ctor === 'Just')) && (_p6._4.ctor === 'Just')) {\n\t\t\treturn _elm_lang$core$Maybe$Just(\n\t\t\t\tA5(func, _p6._0._0, _p6._1._0, _p6._2._0, _p6._3._0, _p6._4._0));\n\t\t} else {\n\t\t\treturn _elm_lang$core$Maybe$Nothing;\n\t\t}\n\t});\n\n//import Native.Utils //\n\nvar _elm_lang$core$Native_List = function() {\n\nvar Nil = { ctor: '[]' };\n\nfunction Cons(hd, tl)\n{\n\treturn { ctor: '::', _0: hd, _1: tl };\n}\n\nfunction fromArray(arr)\n{\n\tvar out = Nil;\n\tfor (var i = arr.length; i--; )\n\t{\n\t\tout = Cons(arr[i], out);\n\t}\n\treturn out;\n}\n\nfunction toArray(xs)\n{\n\tvar out = [];\n\twhile (xs.ctor !== '[]')\n\t{\n\t\tout.push(xs._0);\n\t\txs = xs._1;\n\t}\n\treturn out;\n}\n\nfunction foldr(f, b, xs)\n{\n\tvar arr = toArray(xs);\n\tvar acc = b;\n\tfor (var i = arr.length; i--; )\n\t{\n\t\tacc = A2(f, arr[i], acc);\n\t}\n\treturn acc;\n}\n\nfunction map2(f, xs, ys)\n{\n\tvar arr = [];\n\twhile (xs.ctor !== '[]' && ys.ctor !== '[]')\n\t{\n\t\tarr.push(A2(f, xs._0, ys._0));\n\t\txs = xs._1;\n\t\tys = ys._1;\n\t}\n\treturn fromArray(arr);\n}\n\nfunction map3(f, xs, ys, zs)\n{\n\tvar arr = [];\n\twhile (xs.ctor !== '[]' && ys.ctor !== '[]' && zs.ctor !== '[]')\n\t{\n\t\tarr.push(A3(f, xs._0, ys._0, zs._0));\n\t\txs = xs._1;\n\t\tys = ys._1;\n\t\tzs = zs._1;\n\t}\n\treturn fromArray(arr);\n}\n\nfunction map4(f, ws, xs, ys, zs)\n{\n\tvar arr = [];\n\twhile (   ws.ctor !== '[]'\n\t\t   && xs.ctor !== '[]'\n\t\t   && ys.ctor !== '[]'\n\t\t   && zs.ctor !== '[]')\n\t{\n\t\tarr.push(A4(f, ws._0, xs._0, ys._0, zs._0));\n\t\tws = ws._1;\n\t\txs = xs._1;\n\t\tys = ys._1;\n\t\tzs = zs._1;\n\t}\n\treturn fromArray(arr);\n}\n\nfunction map5(f, vs, ws, xs, ys, zs)\n{\n\tvar arr = [];\n\twhile (   vs.ctor !== '[]'\n\t\t   && ws.ctor !== '[]'\n\t\t   && xs.ctor !== '[]'\n\t\t   && ys.ctor !== '[]'\n\t\t   && zs.ctor !== '[]')\n\t{\n\t\tarr.push(A5(f, vs._0, ws._0, xs._0, ys._0, zs._0));\n\t\tvs = vs._1;\n\t\tws = ws._1;\n\t\txs = xs._1;\n\t\tys = ys._1;\n\t\tzs = zs._1;\n\t}\n\treturn fromArray(arr);\n}\n\nfunction sortBy(f, xs)\n{\n\treturn fromArray(toArray(xs).sort(function(a, b) {\n\t\treturn _elm_lang$core$Native_Utils.cmp(f(a), f(b));\n\t}));\n}\n\nfunction sortWith(f, xs)\n{\n\treturn fromArray(toArray(xs).sort(function(a, b) {\n\t\tvar ord = f(a)(b).ctor;\n\t\treturn ord === 'EQ' ? 0 : ord === 'LT' ? -1 : 1;\n\t}));\n}\n\nreturn {\n\tNil: Nil,\n\tCons: Cons,\n\tcons: F2(Cons),\n\ttoArray: toArray,\n\tfromArray: fromArray,\n\n\tfoldr: F3(foldr),\n\n\tmap2: F3(map2),\n\tmap3: F4(map3),\n\tmap4: F5(map4),\n\tmap5: F6(map5),\n\tsortBy: F2(sortBy),\n\tsortWith: F2(sortWith)\n};\n\n}();\nvar _elm_lang$core$List$sortWith = _elm_lang$core$Native_List.sortWith;\nvar _elm_lang$core$List$sortBy = _elm_lang$core$Native_List.sortBy;\nvar _elm_lang$core$List$sort = function (xs) {\n\treturn A2(_elm_lang$core$List$sortBy, _elm_lang$core$Basics$identity, xs);\n};\nvar _elm_lang$core$List$singleton = function (value) {\n\treturn {\n\t\tctor: '::',\n\t\t_0: value,\n\t\t_1: {ctor: '[]'}\n\t};\n};\nvar _elm_lang$core$List$drop = F2(\n\tfunction (n, list) {\n\t\tdrop:\n\t\twhile (true) {\n\t\t\tif (_elm_lang$core$Native_Utils.cmp(n, 0) < 1) {\n\t\t\t\treturn list;\n\t\t\t} else {\n\t\t\t\tvar _p0 = list;\n\t\t\t\tif (_p0.ctor === '[]') {\n\t\t\t\t\treturn list;\n\t\t\t\t} else {\n\t\t\t\t\tvar _v1 = n - 1,\n\t\t\t\t\t\t_v2 = _p0._1;\n\t\t\t\t\tn = _v1;\n\t\t\t\t\tlist = _v2;\n\t\t\t\t\tcontinue drop;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar _elm_lang$core$List$map5 = _elm_lang$core$Native_List.map5;\nvar _elm_lang$core$List$map4 = _elm_lang$core$Native_List.map4;\nvar _elm_lang$core$List$map3 = _elm_lang$core$Native_List.map3;\nvar _elm_lang$core$List$map2 = _elm_lang$core$Native_List.map2;\nvar _elm_lang$core$List$any = F2(\n\tfunction (isOkay, list) {\n\t\tany:\n\t\twhile (true) {\n\t\t\tvar _p1 = list;\n\t\t\tif (_p1.ctor === '[]') {\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\tif (isOkay(_p1._0)) {\n\t\t\t\t\treturn true;\n\t\t\t\t} else {\n\t\t\t\t\tvar _v4 = isOkay,\n\t\t\t\t\t\t_v5 = _p1._1;\n\t\t\t\t\tisOkay = _v4;\n\t\t\t\t\tlist = _v5;\n\t\t\t\t\tcontinue any;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar _elm_lang$core$List$all = F2(\n\tfunction (isOkay, list) {\n\t\treturn !A2(\n\t\t\t_elm_lang$core$List$any,\n\t\t\tfunction (_p2) {\n\t\t\t\treturn !isOkay(_p2);\n\t\t\t},\n\t\t\tlist);\n\t});\nvar _elm_lang$core$List$foldr = _elm_lang$core$Native_List.foldr;\nvar _elm_lang$core$List$foldl = F3(\n\tfunction (func, acc, list) {\n\t\tfoldl:\n\t\twhile (true) {\n\t\t\tvar _p3 = list;\n\t\t\tif (_p3.ctor === '[]') {\n\t\t\t\treturn acc;\n\t\t\t} else {\n\t\t\t\tvar _v7 = func,\n\t\t\t\t\t_v8 = A2(func, _p3._0, acc),\n\t\t\t\t\t_v9 = _p3._1;\n\t\t\t\tfunc = _v7;\n\t\t\t\tacc = _v8;\n\t\t\t\tlist = _v9;\n\t\t\t\tcontinue foldl;\n\t\t\t}\n\t\t}\n\t});\nvar _elm_lang$core$List$length = function (xs) {\n\treturn A3(\n\t\t_elm_lang$core$List$foldl,\n\t\tF2(\n\t\t\tfunction (_p4, i) {\n\t\t\t\treturn i + 1;\n\t\t\t}),\n\t\t0,\n\t\txs);\n};\nvar _elm_lang$core$List$sum = function (numbers) {\n\treturn A3(\n\t\t_elm_lang$core$List$foldl,\n\t\tF2(\n\t\t\tfunction (x, y) {\n\t\t\t\treturn x + y;\n\t\t\t}),\n\t\t0,\n\t\tnumbers);\n};\nvar _elm_lang$core$List$product = function (numbers) {\n\treturn A3(\n\t\t_elm_lang$core$List$foldl,\n\t\tF2(\n\t\t\tfunction (x, y) {\n\t\t\t\treturn x * y;\n\t\t\t}),\n\t\t1,\n\t\tnumbers);\n};\nvar _elm_lang$core$List$maximum = function (list) {\n\tvar _p5 = list;\n\tif (_p5.ctor === '::') {\n\t\treturn _elm_lang$core$Maybe$Just(\n\t\t\tA3(_elm_lang$core$List$foldl, _elm_lang$core$Basics$max, _p5._0, _p5._1));\n\t} else {\n\t\treturn _elm_lang$core$Maybe$Nothing;\n\t}\n};\nvar _elm_lang$core$List$minimum = function (list) {\n\tvar _p6 = list;\n\tif (_p6.ctor === '::') {\n\t\treturn _elm_lang$core$Maybe$Just(\n\t\t\tA3(_elm_lang$core$List$foldl, _elm_lang$core$Basics$min, _p6._0, _p6._1));\n\t} else {\n\t\treturn _elm_lang$core$Maybe$Nothing;\n\t}\n};\nvar _elm_lang$core$List$member = F2(\n\tfunction (x, xs) {\n\t\treturn A2(\n\t\t\t_elm_lang$core$List$any,\n\t\t\tfunction (a) {\n\t\t\t\treturn _elm_lang$core$Native_Utils.eq(a, x);\n\t\t\t},\n\t\t\txs);\n\t});\nvar _elm_lang$core$List$isEmpty = function (xs) {\n\tvar _p7 = xs;\n\tif (_p7.ctor === '[]') {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n};\nvar _elm_lang$core$List$tail = function (list) {\n\tvar _p8 = list;\n\tif (_p8.ctor === '::') {\n\t\treturn _elm_lang$core$Maybe$Just(_p8._1);\n\t} else {\n\t\treturn _elm_lang$core$Maybe$Nothing;\n\t}\n};\nvar _elm_lang$core$List$head = function (list) {\n\tvar _p9 = list;\n\tif (_p9.ctor === '::') {\n\t\treturn _elm_lang$core$Maybe$Just(_p9._0);\n\t} else {\n\t\treturn _elm_lang$core$Maybe$Nothing;\n\t}\n};\nvar _elm_lang$core$List_ops = _elm_lang$core$List_ops || {};\n_elm_lang$core$List_ops['::'] = _elm_lang$core$Native_List.cons;\nvar _elm_lang$core$List$map = F2(\n\tfunction (f, xs) {\n\t\treturn A3(\n\t\t\t_elm_lang$core$List$foldr,\n\t\t\tF2(\n\t\t\t\tfunction (x, acc) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tctor: '::',\n\t\t\t\t\t\t_0: f(x),\n\t\t\t\t\t\t_1: acc\n\t\t\t\t\t};\n\t\t\t\t}),\n\t\t\t{ctor: '[]'},\n\t\t\txs);\n\t});\nvar _elm_lang$core$List$filter = F2(\n\tfunction (pred, xs) {\n\t\tvar conditionalCons = F2(\n\t\t\tfunction (front, back) {\n\t\t\t\treturn pred(front) ? {ctor: '::', _0: front, _1: back} : back;\n\t\t\t});\n\t\treturn A3(\n\t\t\t_elm_lang$core$List$foldr,\n\t\t\tconditionalCons,\n\t\t\t{ctor: '[]'},\n\t\t\txs);\n\t});\nvar _elm_lang$core$List$maybeCons = F3(\n\tfunction (f, mx, xs) {\n\t\tvar _p10 = f(mx);\n\t\tif (_p10.ctor === 'Just') {\n\t\t\treturn {ctor: '::', _0: _p10._0, _1: xs};\n\t\t} else {\n\t\t\treturn xs;\n\t\t}\n\t});\nvar _elm_lang$core$List$filterMap = F2(\n\tfunction (f, xs) {\n\t\treturn A3(\n\t\t\t_elm_lang$core$List$foldr,\n\t\t\t_elm_lang$core$List$maybeCons(f),\n\t\t\t{ctor: '[]'},\n\t\t\txs);\n\t});\nvar _elm_lang$core$List$reverse = function (list) {\n\treturn A3(\n\t\t_elm_lang$core$List$foldl,\n\t\tF2(\n\t\t\tfunction (x, y) {\n\t\t\t\treturn {ctor: '::', _0: x, _1: y};\n\t\t\t}),\n\t\t{ctor: '[]'},\n\t\tlist);\n};\nvar _elm_lang$core$List$scanl = F3(\n\tfunction (f, b, xs) {\n\t\tvar scan1 = F2(\n\t\t\tfunction (x, accAcc) {\n\t\t\t\tvar _p11 = accAcc;\n\t\t\t\tif (_p11.ctor === '::') {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tctor: '::',\n\t\t\t\t\t\t_0: A2(f, x, _p11._0),\n\t\t\t\t\t\t_1: accAcc\n\t\t\t\t\t};\n\t\t\t\t} else {\n\t\t\t\t\treturn {ctor: '[]'};\n\t\t\t\t}\n\t\t\t});\n\t\treturn _elm_lang$core$List$reverse(\n\t\t\tA3(\n\t\t\t\t_elm_lang$core$List$foldl,\n\t\t\t\tscan1,\n\t\t\t\t{\n\t\t\t\t\tctor: '::',\n\t\t\t\t\t_0: b,\n\t\t\t\t\t_1: {ctor: '[]'}\n\t\t\t\t},\n\t\t\t\txs));\n\t});\nvar _elm_lang$core$List$append = F2(\n\tfunction (xs, ys) {\n\t\tvar _p12 = ys;\n\t\tif (_p12.ctor === '[]') {\n\t\t\treturn xs;\n\t\t} else {\n\t\t\treturn A3(\n\t\t\t\t_elm_lang$core$List$foldr,\n\t\t\t\tF2(\n\t\t\t\t\tfunction (x, y) {\n\t\t\t\t\t\treturn {ctor: '::', _0: x, _1: y};\n\t\t\t\t\t}),\n\t\t\t\tys,\n\t\t\t\txs);\n\t\t}\n\t});\nvar _elm_lang$core$List$concat = function (lists) {\n\treturn A3(\n\t\t_elm_lang$core$List$foldr,\n\t\t_elm_lang$core$List$append,\n\t\t{ctor: '[]'},\n\t\tlists);\n};\nvar _elm_lang$core$List$concatMap = F2(\n\tfunction (f, list) {\n\t\treturn _elm_lang$core$List$concat(\n\t\t\tA2(_elm_lang$core$List$map, f, list));\n\t});\nvar _elm_lang$core$List$partition = F2(\n\tfunction (pred, list) {\n\t\tvar step = F2(\n\t\t\tfunction (x, _p13) {\n\t\t\t\tvar _p14 = _p13;\n\t\t\t\tvar _p16 = _p14._0;\n\t\t\t\tvar _p15 = _p14._1;\n\t\t\t\treturn pred(x) ? {\n\t\t\t\t\tctor: '_Tuple2',\n\t\t\t\t\t_0: {ctor: '::', _0: x, _1: _p16},\n\t\t\t\t\t_1: _p15\n\t\t\t\t} : {\n\t\t\t\t\tctor: '_Tuple2',\n\t\t\t\t\t_0: _p16,\n\t\t\t\t\t_1: {ctor: '::', _0: x, _1: _p15}\n\t\t\t\t};\n\t\t\t});\n\t\treturn A3(\n\t\t\t_elm_lang$core$List$foldr,\n\t\t\tstep,\n\t\t\t{\n\t\t\t\tctor: '_Tuple2',\n\t\t\t\t_0: {ctor: '[]'},\n\t\t\t\t_1: {ctor: '[]'}\n\t\t\t},\n\t\t\tlist);\n\t});\nvar _elm_lang$core$List$unzip = function (pairs) {\n\tvar step = F2(\n\t\tfunction (_p18, _p17) {\n\t\t\tvar _p19 = _p18;\n\t\t\tvar _p20 = _p17;\n\t\t\treturn {\n\t\t\t\tctor: '_Tuple2',\n\t\t\t\t_0: {ctor: '::', _0: _p19._0, _1: _p20._0},\n\t\t\t\t_1: {ctor: '::', _0: _p19._1, _1: _p20._1}\n\t\t\t};\n\t\t});\n\treturn A3(\n\t\t_elm_lang$core$List$foldr,\n\t\tstep,\n\t\t{\n\t\t\tctor: '_Tuple2',\n\t\t\t_0: {ctor: '[]'},\n\t\t\t_1: {ctor: '[]'}\n\t\t},\n\t\tpairs);\n};\nvar _elm_lang$core$List$intersperse = F2(\n\tfunction (sep, xs) {\n\t\tvar _p21 = xs;\n\t\tif (_p21.ctor === '[]') {\n\t\t\treturn {ctor: '[]'};\n\t\t} else {\n\t\t\tvar step = F2(\n\t\t\t\tfunction (x, rest) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tctor: '::',\n\t\t\t\t\t\t_0: sep,\n\t\t\t\t\t\t_1: {ctor: '::', _0: x, _1: rest}\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\tvar spersed = A3(\n\t\t\t\t_elm_lang$core$List$foldr,\n\t\t\t\tstep,\n\t\t\t\t{ctor: '[]'},\n\t\t\t\t_p21._1);\n\t\t\treturn {ctor: '::', _0: _p21._0, _1: spersed};\n\t\t}\n\t});\nvar _elm_lang$core$List$takeReverse = F3(\n\tfunction (n, list, taken) {\n\t\ttakeReverse:\n\t\twhile (true) {\n\t\t\tif (_elm_lang$core$Native_Utils.cmp(n, 0) < 1) {\n\t\t\t\treturn taken;\n\t\t\t} else {\n\t\t\t\tvar _p22 = list;\n\t\t\t\tif (_p22.ctor === '[]') {\n\t\t\t\t\treturn taken;\n\t\t\t\t} else {\n\t\t\t\t\tvar _v23 = n - 1,\n\t\t\t\t\t\t_v24 = _p22._1,\n\t\t\t\t\t\t_v25 = {ctor: '::', _0: _p22._0, _1: taken};\n\t\t\t\t\tn = _v23;\n\t\t\t\t\tlist = _v24;\n\t\t\t\t\ttaken = _v25;\n\t\t\t\t\tcontinue takeReverse;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar _elm_lang$core$List$takeTailRec = F2(\n\tfunction (n, list) {\n\t\treturn _elm_lang$core$List$reverse(\n\t\t\tA3(\n\t\t\t\t_elm_lang$core$List$takeReverse,\n\t\t\t\tn,\n\t\t\t\tlist,\n\t\t\t\t{ctor: '[]'}));\n\t});\nvar _elm_lang$core$List$takeFast = F3(\n\tfunction (ctr, n, list) {\n\t\tif (_elm_lang$core$Native_Utils.cmp(n, 0) < 1) {\n\t\t\treturn {ctor: '[]'};\n\t\t} else {\n\t\t\tvar _p23 = {ctor: '_Tuple2', _0: n, _1: list};\n\t\t\t_v26_5:\n\t\t\tdo {\n\t\t\t\t_v26_1:\n\t\t\t\tdo {\n\t\t\t\t\tif (_p23.ctor === '_Tuple2') {\n\t\t\t\t\t\tif (_p23._1.ctor === '[]') {\n\t\t\t\t\t\t\treturn list;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (_p23._1._1.ctor === '::') {\n\t\t\t\t\t\t\t\tswitch (_p23._0) {\n\t\t\t\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\t\t\t\tbreak _v26_1;\n\t\t\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\t\tctor: '::',\n\t\t\t\t\t\t\t\t\t\t\t_0: _p23._1._0,\n\t\t\t\t\t\t\t\t\t\t\t_1: {\n\t\t\t\t\t\t\t\t\t\t\t\tctor: '::',\n\t\t\t\t\t\t\t\t\t\t\t\t_0: _p23._1._1._0,\n\t\t\t\t\t\t\t\t\t\t\t\t_1: {ctor: '[]'}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\t\t\tif (_p23._1._1._1.ctor === '::') {\n\t\t\t\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\t\t\tctor: '::',\n\t\t\t\t\t\t\t\t\t\t\t\t_0: _p23._1._0,\n\t\t\t\t\t\t\t\t\t\t\t\t_1: {\n\t\t\t\t\t\t\t\t\t\t\t\t\tctor: '::',\n\t\t\t\t\t\t\t\t\t\t\t\t\t_0: _p23._1._1._0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t_1: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tctor: '::',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t_0: _p23._1._1._1._0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t_1: {ctor: '[]'}\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tbreak _v26_5;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\tif ((_p23._1._1._1.ctor === '::') && (_p23._1._1._1._1.ctor === '::')) {\n\t\t\t\t\t\t\t\t\t\t\tvar _p28 = _p23._1._1._1._0;\n\t\t\t\t\t\t\t\t\t\t\tvar _p27 = _p23._1._1._0;\n\t\t\t\t\t\t\t\t\t\t\tvar _p26 = _p23._1._0;\n\t\t\t\t\t\t\t\t\t\t\tvar _p25 = _p23._1._1._1._1._0;\n\t\t\t\t\t\t\t\t\t\t\tvar _p24 = _p23._1._1._1._1._1;\n\t\t\t\t\t\t\t\t\t\t\treturn (_elm_lang$core$Native_Utils.cmp(ctr, 1000) > 0) ? {\n\t\t\t\t\t\t\t\t\t\t\t\tctor: '::',\n\t\t\t\t\t\t\t\t\t\t\t\t_0: _p26,\n\t\t\t\t\t\t\t\t\t\t\t\t_1: {\n\t\t\t\t\t\t\t\t\t\t\t\t\tctor: '::',\n\t\t\t\t\t\t\t\t\t\t\t\t\t_0: _p27,\n\t\t\t\t\t\t\t\t\t\t\t\t\t_1: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tctor: '::',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t_0: _p28,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t_1: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tctor: '::',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_0: _p25,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_1: A2(_elm_lang$core$List$takeTailRec, n - 4, _p24)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t} : {\n\t\t\t\t\t\t\t\t\t\t\t\tctor: '::',\n\t\t\t\t\t\t\t\t\t\t\t\t_0: _p26,\n\t\t\t\t\t\t\t\t\t\t\t\t_1: {\n\t\t\t\t\t\t\t\t\t\t\t\t\tctor: '::',\n\t\t\t\t\t\t\t\t\t\t\t\t\t_0: _p27,\n\t\t\t\t\t\t\t\t\t\t\t\t\t_1: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tctor: '::',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t_0: _p28,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t_1: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tctor: '::',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_0: _p25,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_1: A3(_elm_lang$core$List$takeFast, ctr + 1, n - 4, _p24)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tbreak _v26_5;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tif (_p23._0 === 1) {\n\t\t\t\t\t\t\t\t\tbreak _v26_1;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tbreak _v26_5;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbreak _v26_5;\n\t\t\t\t\t}\n\t\t\t\t} while(false);\n\t\t\t\treturn {\n\t\t\t\t\tctor: '::',\n\t\t\t\t\t_0: _p23._1._0,\n\t\t\t\t\t_1: {ctor: '[]'}\n\t\t\t\t};\n\t\t\t} while(false);\n\t\t\treturn list;\n\t\t}\n\t});\nvar _elm_lang$core$List$take = F2(\n\tfunction (n, list) {\n\t\treturn A3(_elm_lang$core$List$takeFast, 0, n, list);\n\t});\nvar _elm_lang$core$List$repeatHelp = F3(\n\tfunction (result, n, value) {\n\t\trepeatHelp:\n\t\twhile (true) {\n\t\t\tif (_elm_lang$core$Native_Utils.cmp(n, 0) < 1) {\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\tvar _v27 = {ctor: '::', _0: value, _1: result},\n\t\t\t\t\t_v28 = n - 1,\n\t\t\t\t\t_v29 = value;\n\t\t\t\tresult = _v27;\n\t\t\t\tn = _v28;\n\t\t\t\tvalue = _v29;\n\t\t\t\tcontinue repeatHelp;\n\t\t\t}\n\t\t}\n\t});\nvar _elm_lang$core$List$repeat = F2(\n\tfunction (n, value) {\n\t\treturn A3(\n\t\t\t_elm_lang$core$List$repeatHelp,\n\t\t\t{ctor: '[]'},\n\t\t\tn,\n\t\t\tvalue);\n\t});\nvar _elm_lang$core$List$rangeHelp = F3(\n\tfunction (lo, hi, list) {\n\t\trangeHelp:\n\t\twhile (true) {\n\t\t\tif (_elm_lang$core$Native_Utils.cmp(lo, hi) < 1) {\n\t\t\t\tvar _v30 = lo,\n\t\t\t\t\t_v31 = hi - 1,\n\t\t\t\t\t_v32 = {ctor: '::', _0: hi, _1: list};\n\t\t\t\tlo = _v30;\n\t\t\t\thi = _v31;\n\t\t\t\tlist = _v32;\n\t\t\t\tcontinue rangeHelp;\n\t\t\t} else {\n\t\t\t\treturn list;\n\t\t\t}\n\t\t}\n\t});\nvar _elm_lang$core$List$range = F2(\n\tfunction (lo, hi) {\n\t\treturn A3(\n\t\t\t_elm_lang$core$List$rangeHelp,\n\t\t\tlo,\n\t\t\thi,\n\t\t\t{ctor: '[]'});\n\t});\nvar _elm_lang$core$List$indexedMap = F2(\n\tfunction (f, xs) {\n\t\treturn A3(\n\t\t\t_elm_lang$core$List$map2,\n\t\t\tf,\n\t\t\tA2(\n\t\t\t\t_elm_lang$core$List$range,\n\t\t\t\t0,\n\t\t\t\t_elm_lang$core$List$length(xs) - 1),\n\t\t\txs);\n\t});\n\nvar _elm_lang$core$Result$toMaybe = function (result) {\n\tvar _p0 = result;\n\tif (_p0.ctor === 'Ok') {\n\t\treturn _elm_lang$core$Maybe$Just(_p0._0);\n\t} else {\n\t\treturn _elm_lang$core$Maybe$Nothing;\n\t}\n};\nvar _elm_lang$core$Result$withDefault = F2(\n\tfunction (def, result) {\n\t\tvar _p1 = result;\n\t\tif (_p1.ctor === 'Ok') {\n\t\t\treturn _p1._0;\n\t\t} else {\n\t\t\treturn def;\n\t\t}\n\t});\nvar _elm_lang$core$Result$Err = function (a) {\n\treturn {ctor: 'Err', _0: a};\n};\nvar _elm_lang$core$Result$andThen = F2(\n\tfunction (callback, result) {\n\t\tvar _p2 = result;\n\t\tif (_p2.ctor === 'Ok') {\n\t\t\treturn callback(_p2._0);\n\t\t} else {\n\t\t\treturn _elm_lang$core$Result$Err(_p2._0);\n\t\t}\n\t});\nvar _elm_lang$core$Result$Ok = function (a) {\n\treturn {ctor: 'Ok', _0: a};\n};\nvar _elm_lang$core$Result$map = F2(\n\tfunction (func, ra) {\n\t\tvar _p3 = ra;\n\t\tif (_p3.ctor === 'Ok') {\n\t\t\treturn _elm_lang$core$Result$Ok(\n\t\t\t\tfunc(_p3._0));\n\t\t} else {\n\t\t\treturn _elm_lang$core$Result$Err(_p3._0);\n\t\t}\n\t});\nvar _elm_lang$core$Result$map2 = F3(\n\tfunction (func, ra, rb) {\n\t\tvar _p4 = {ctor: '_Tuple2', _0: ra, _1: rb};\n\t\tif (_p4._0.ctor === 'Ok') {\n\t\t\tif (_p4._1.ctor === 'Ok') {\n\t\t\t\treturn _elm_lang$core$Result$Ok(\n\t\t\t\t\tA2(func, _p4._0._0, _p4._1._0));\n\t\t\t} else {\n\t\t\t\treturn _elm_lang$core$Result$Err(_p4._1._0);\n\t\t\t}\n\t\t} else {\n\t\t\treturn _elm_lang$core$Result$Err(_p4._0._0);\n\t\t}\n\t});\nvar _elm_lang$core$Result$map3 = F4(\n\tfunction (func, ra, rb, rc) {\n\t\tvar _p5 = {ctor: '_Tuple3', _0: ra, _1: rb, _2: rc};\n\t\tif (_p5._0.ctor === 'Ok') {\n\t\t\tif (_p5._1.ctor === 'Ok') {\n\t\t\t\tif (_p5._2.ctor === 'Ok') {\n\t\t\t\t\treturn _elm_lang$core$Result$Ok(\n\t\t\t\t\t\tA3(func, _p5._0._0, _p5._1._0, _p5._2._0));\n\t\t\t\t} else {\n\t\t\t\t\treturn _elm_lang$core$Result$Err(_p5._2._0);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn _elm_lang$core$Result$Err(_p5._1._0);\n\t\t\t}\n\t\t} else {\n\t\t\treturn _elm_lang$core$Result$Err(_p5._0._0);\n\t\t}\n\t});\nvar _elm_lang$core$Result$map4 = F5(\n\tfunction (func, ra, rb, rc, rd) {\n\t\tvar _p6 = {ctor: '_Tuple4', _0: ra, _1: rb, _2: rc, _3: rd};\n\t\tif (_p6._0.ctor === 'Ok') {\n\t\t\tif (_p6._1.ctor === 'Ok') {\n\t\t\t\tif (_p6._2.ctor === 'Ok') {\n\t\t\t\t\tif (_p6._3.ctor === 'Ok') {\n\t\t\t\t\t\treturn _elm_lang$core$Result$Ok(\n\t\t\t\t\t\t\tA4(func, _p6._0._0, _p6._1._0, _p6._2._0, _p6._3._0));\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn _elm_lang$core$Result$Err(_p6._3._0);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn _elm_lang$core$Result$Err(_p6._2._0);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn _elm_lang$core$Result$Err(_p6._1._0);\n\t\t\t}\n\t\t} else {\n\t\t\treturn _elm_lang$core$Result$Err(_p6._0._0);\n\t\t}\n\t});\nvar _elm_lang$core$Result$map5 = F6(\n\tfunction (func, ra, rb, rc, rd, re) {\n\t\tvar _p7 = {ctor: '_Tuple5', _0: ra, _1: rb, _2: rc, _3: rd, _4: re};\n\t\tif (_p7._0.ctor === 'Ok') {\n\t\t\tif (_p7._1.ctor === 'Ok') {\n\t\t\t\tif (_p7._2.ctor === 'Ok') {\n\t\t\t\t\tif (_p7._3.ctor === 'Ok') {\n\t\t\t\t\t\tif (_p7._4.ctor === 'Ok') {\n\t\t\t\t\t\t\treturn _elm_lang$core$Result$Ok(\n\t\t\t\t\t\t\t\tA5(func, _p7._0._0, _p7._1._0, _p7._2._0, _p7._3._0, _p7._4._0));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn _elm_lang$core$Result$Err(_p7._4._0);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn _elm_lang$core$Result$Err(_p7._3._0);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn _elm_lang$core$Result$Err(_p7._2._0);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn _elm_lang$core$Result$Err(_p7._1._0);\n\t\t\t}\n\t\t} else {\n\t\t\treturn _elm_lang$core$Result$Err(_p7._0._0);\n\t\t}\n\t});\nvar _elm_lang$core$Result$mapError = F2(\n\tfunction (f, result) {\n\t\tvar _p8 = result;\n\t\tif (_p8.ctor === 'Ok') {\n\t\t\treturn _elm_lang$core$Result$Ok(_p8._0);\n\t\t} else {\n\t\t\treturn _elm_lang$core$Result$Err(\n\t\t\t\tf(_p8._0));\n\t\t}\n\t});\nvar _elm_lang$core$Result$fromMaybe = F2(\n\tfunction (err, maybe) {\n\t\tvar _p9 = maybe;\n\t\tif (_p9.ctor === 'Just') {\n\t\t\treturn _elm_lang$core$Result$Ok(_p9._0);\n\t\t} else {\n\t\t\treturn _elm_lang$core$Result$Err(err);\n\t\t}\n\t});\n\nvar _elm_lang$core$Task$onError = _elm_lang$core$Native_Scheduler.onError;\nvar _elm_lang$core$Task$andThen = _elm_lang$core$Native_Scheduler.andThen;\nvar _elm_lang$core$Task$spawnCmd = F2(\n\tfunction (router, _p0) {\n\t\tvar _p1 = _p0;\n\t\treturn _elm_lang$core$Native_Scheduler.spawn(\n\t\t\tA2(\n\t\t\t\t_elm_lang$core$Task$andThen,\n\t\t\t\t_elm_lang$core$Platform$sendToApp(router),\n\t\t\t\t_p1._0));\n\t});\nvar _elm_lang$core$Task$fail = _elm_lang$core$Native_Scheduler.fail;\nvar _elm_lang$core$Task$mapError = F2(\n\tfunction (convert, task) {\n\t\treturn A2(\n\t\t\t_elm_lang$core$Task$onError,\n\t\t\tfunction (_p2) {\n\t\t\t\treturn _elm_lang$core$Task$fail(\n\t\t\t\t\tconvert(_p2));\n\t\t\t},\n\t\t\ttask);\n\t});\nvar _elm_lang$core$Task$succeed = _elm_lang$core$Native_Scheduler.succeed;\nvar _elm_lang$core$Task$map = F2(\n\tfunction (func, taskA) {\n\t\treturn A2(\n\t\t\t_elm_lang$core$Task$andThen,\n\t\t\tfunction (a) {\n\t\t\t\treturn _elm_lang$core$Task$succeed(\n\t\t\t\t\tfunc(a));\n\t\t\t},\n\t\t\ttaskA);\n\t});\nvar _elm_lang$core$Task$map2 = F3(\n\tfunction (func, taskA, taskB) {\n\t\treturn A2(\n\t\t\t_elm_lang$core$Task$andThen,\n\t\t\tfunction (a) {\n\t\t\t\treturn A2(\n\t\t\t\t\t_elm_lang$core$Task$andThen,\n\t\t\t\t\tfunction (b) {\n\t\t\t\t\t\treturn _elm_lang$core$Task$succeed(\n\t\t\t\t\t\t\tA2(func, a, b));\n\t\t\t\t\t},\n\t\t\t\t\ttaskB);\n\t\t\t},\n\t\t\ttaskA);\n\t});\nvar _elm_lang$core$Task$map3 = F4(\n\tfunction (func, taskA, taskB, taskC) {\n\t\treturn A2(\n\t\t\t_elm_lang$core$Task$andThen,\n\t\t\tfunction (a) {\n\t\t\t\treturn A2(\n\t\t\t\t\t_elm_lang$core$Task$andThen,\n\t\t\t\t\tfunction (b) {\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t_elm_lang$core$Task$andThen,\n\t\t\t\t\t\t\tfunction (c) {\n\t\t\t\t\t\t\t\treturn _elm_lang$core$Task$succeed(\n\t\t\t\t\t\t\t\t\tA3(func, a, b, c));\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\ttaskC);\n\t\t\t\t\t},\n\t\t\t\t\ttaskB);\n\t\t\t},\n\t\t\ttaskA);\n\t});\nvar _elm_lang$core$Task$map4 = F5(\n\tfunction (func, taskA, taskB, taskC, taskD) {\n\t\treturn A2(\n\t\t\t_elm_lang$core$Task$andThen,\n\t\t\tfunction (a) {\n\t\t\t\treturn A2(\n\t\t\t\t\t_elm_lang$core$Task$andThen,\n\t\t\t\t\tfunction (b) {\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t_elm_lang$core$Task$andThen,\n\t\t\t\t\t\t\tfunction (c) {\n\t\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t\t_elm_lang$core$Task$andThen,\n\t\t\t\t\t\t\t\t\tfunction (d) {\n\t\t\t\t\t\t\t\t\t\treturn _elm_lang$core$Task$succeed(\n\t\t\t\t\t\t\t\t\t\t\tA4(func, a, b, c, d));\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\ttaskD);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\ttaskC);\n\t\t\t\t\t},\n\t\t\t\t\ttaskB);\n\t\t\t},\n\t\t\ttaskA);\n\t});\nvar _elm_lang$core$Task$map5 = F6(\n\tfunction (func, taskA, taskB, taskC, taskD, taskE) {\n\t\treturn A2(\n\t\t\t_elm_lang$core$Task$andThen,\n\t\t\tfunction (a) {\n\t\t\t\treturn A2(\n\t\t\t\t\t_elm_lang$core$Task$andThen,\n\t\t\t\t\tfunction (b) {\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t_elm_lang$core$Task$andThen,\n\t\t\t\t\t\t\tfunction (c) {\n\t\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t\t_elm_lang$core$Task$andThen,\n\t\t\t\t\t\t\t\t\tfunction (d) {\n\t\t\t\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t\t\t\t_elm_lang$core$Task$andThen,\n\t\t\t\t\t\t\t\t\t\t\tfunction (e) {\n\t\t\t\t\t\t\t\t\t\t\t\treturn _elm_lang$core$Task$succeed(\n\t\t\t\t\t\t\t\t\t\t\t\t\tA5(func, a, b, c, d, e));\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\ttaskE);\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\ttaskD);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\ttaskC);\n\t\t\t\t\t},\n\t\t\t\t\ttaskB);\n\t\t\t},\n\t\t\ttaskA);\n\t});\nvar _elm_lang$core$Task$sequence = function (tasks) {\n\tvar _p3 = tasks;\n\tif (_p3.ctor === '[]') {\n\t\treturn _elm_lang$core$Task$succeed(\n\t\t\t{ctor: '[]'});\n\t} else {\n\t\treturn A3(\n\t\t\t_elm_lang$core$Task$map2,\n\t\t\tF2(\n\t\t\t\tfunction (x, y) {\n\t\t\t\t\treturn {ctor: '::', _0: x, _1: y};\n\t\t\t\t}),\n\t\t\t_p3._0,\n\t\t\t_elm_lang$core$Task$sequence(_p3._1));\n\t}\n};\nvar _elm_lang$core$Task$onEffects = F3(\n\tfunction (router, commands, state) {\n\t\treturn A2(\n\t\t\t_elm_lang$core$Task$map,\n\t\t\tfunction (_p4) {\n\t\t\t\treturn {ctor: '_Tuple0'};\n\t\t\t},\n\t\t\t_elm_lang$core$Task$sequence(\n\t\t\t\tA2(\n\t\t\t\t\t_elm_lang$core$List$map,\n\t\t\t\t\t_elm_lang$core$Task$spawnCmd(router),\n\t\t\t\t\tcommands)));\n\t});\nvar _elm_lang$core$Task$init = _elm_lang$core$Task$succeed(\n\t{ctor: '_Tuple0'});\nvar _elm_lang$core$Task$onSelfMsg = F3(\n\tfunction (_p7, _p6, _p5) {\n\t\treturn _elm_lang$core$Task$succeed(\n\t\t\t{ctor: '_Tuple0'});\n\t});\nvar _elm_lang$core$Task$command = _elm_lang$core$Native_Platform.leaf('Task');\nvar _elm_lang$core$Task$Perform = function (a) {\n\treturn {ctor: 'Perform', _0: a};\n};\nvar _elm_lang$core$Task$perform = F2(\n\tfunction (toMessage, task) {\n\t\treturn _elm_lang$core$Task$command(\n\t\t\t_elm_lang$core$Task$Perform(\n\t\t\t\tA2(_elm_lang$core$Task$map, toMessage, task)));\n\t});\nvar _elm_lang$core$Task$attempt = F2(\n\tfunction (resultToMessage, task) {\n\t\treturn _elm_lang$core$Task$command(\n\t\t\t_elm_lang$core$Task$Perform(\n\t\t\t\tA2(\n\t\t\t\t\t_elm_lang$core$Task$onError,\n\t\t\t\t\tfunction (_p8) {\n\t\t\t\t\t\treturn _elm_lang$core$Task$succeed(\n\t\t\t\t\t\t\tresultToMessage(\n\t\t\t\t\t\t\t\t_elm_lang$core$Result$Err(_p8)));\n\t\t\t\t\t},\n\t\t\t\t\tA2(\n\t\t\t\t\t\t_elm_lang$core$Task$andThen,\n\t\t\t\t\t\tfunction (_p9) {\n\t\t\t\t\t\t\treturn _elm_lang$core$Task$succeed(\n\t\t\t\t\t\t\t\tresultToMessage(\n\t\t\t\t\t\t\t\t\t_elm_lang$core$Result$Ok(_p9)));\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttask))));\n\t});\nvar _elm_lang$core$Task$cmdMap = F2(\n\tfunction (tagger, _p10) {\n\t\tvar _p11 = _p10;\n\t\treturn _elm_lang$core$Task$Perform(\n\t\t\tA2(_elm_lang$core$Task$map, tagger, _p11._0));\n\t});\n_elm_lang$core$Native_Platform.effectManagers['Task'] = {pkg: 'elm-lang/core', init: _elm_lang$core$Task$init, onEffects: _elm_lang$core$Task$onEffects, onSelfMsg: _elm_lang$core$Task$onSelfMsg, tag: 'cmd', cmdMap: _elm_lang$core$Task$cmdMap};\n\n//import Native.Utils //\n\nvar _elm_lang$core$Native_Debug = function() {\n\nfunction log(tag, value)\n{\n\tvar msg = tag + ': ' + _elm_lang$core$Native_Utils.toString(value);\n\tvar process = process || {};\n\tif (process.stdout)\n\t{\n\t\tprocess.stdout.write(msg);\n\t}\n\telse\n\t{\n\t\tconsole.log(msg);\n\t}\n\treturn value;\n}\n\nfunction crash(message)\n{\n\tthrow new Error(message);\n}\n\nreturn {\n\tcrash: crash,\n\tlog: F2(log)\n};\n\n}();\n//import Maybe, Native.List, Native.Utils, Result //\n\nvar _elm_lang$core$Native_String = function() {\n\nfunction isEmpty(str)\n{\n\treturn str.length === 0;\n}\nfunction cons(chr, str)\n{\n\treturn chr + str;\n}\nfunction uncons(str)\n{\n\tvar hd = str[0];\n\tif (hd)\n\t{\n\t\treturn _elm_lang$core$Maybe$Just(_elm_lang$core$Native_Utils.Tuple2(_elm_lang$core$Native_Utils.chr(hd), str.slice(1)));\n\t}\n\treturn _elm_lang$core$Maybe$Nothing;\n}\nfunction append(a, b)\n{\n\treturn a + b;\n}\nfunction concat(strs)\n{\n\treturn _elm_lang$core$Native_List.toArray(strs).join('');\n}\nfunction length(str)\n{\n\treturn str.length;\n}\nfunction map(f, str)\n{\n\tvar out = str.split('');\n\tfor (var i = out.length; i--; )\n\t{\n\t\tout[i] = f(_elm_lang$core$Native_Utils.chr(out[i]));\n\t}\n\treturn out.join('');\n}\nfunction filter(pred, str)\n{\n\treturn str.split('').map(_elm_lang$core$Native_Utils.chr).filter(pred).join('');\n}\nfunction reverse(str)\n{\n\treturn str.split('').reverse().join('');\n}\nfunction foldl(f, b, str)\n{\n\tvar len = str.length;\n\tfor (var i = 0; i < len; ++i)\n\t{\n\t\tb = A2(f, _elm_lang$core$Native_Utils.chr(str[i]), b);\n\t}\n\treturn b;\n}\nfunction foldr(f, b, str)\n{\n\tfor (var i = str.length; i--; )\n\t{\n\t\tb = A2(f, _elm_lang$core$Native_Utils.chr(str[i]), b);\n\t}\n\treturn b;\n}\nfunction split(sep, str)\n{\n\treturn _elm_lang$core$Native_List.fromArray(str.split(sep));\n}\nfunction join(sep, strs)\n{\n\treturn _elm_lang$core$Native_List.toArray(strs).join(sep);\n}\nfunction repeat(n, str)\n{\n\tvar result = '';\n\twhile (n > 0)\n\t{\n\t\tif (n & 1)\n\t\t{\n\t\t\tresult += str;\n\t\t}\n\t\tn >>= 1, str += str;\n\t}\n\treturn result;\n}\nfunction slice(start, end, str)\n{\n\treturn str.slice(start, end);\n}\nfunction left(n, str)\n{\n\treturn n < 1 ? '' : str.slice(0, n);\n}\nfunction right(n, str)\n{\n\treturn n < 1 ? '' : str.slice(-n);\n}\nfunction dropLeft(n, str)\n{\n\treturn n < 1 ? str : str.slice(n);\n}\nfunction dropRight(n, str)\n{\n\treturn n < 1 ? str : str.slice(0, -n);\n}\nfunction pad(n, chr, str)\n{\n\tvar half = (n - str.length) / 2;\n\treturn repeat(Math.ceil(half), chr) + str + repeat(half | 0, chr);\n}\nfunction padRight(n, chr, str)\n{\n\treturn str + repeat(n - str.length, chr);\n}\nfunction padLeft(n, chr, str)\n{\n\treturn repeat(n - str.length, chr) + str;\n}\n\nfunction trim(str)\n{\n\treturn str.trim();\n}\nfunction trimLeft(str)\n{\n\treturn str.replace(/^\\s+/, '');\n}\nfunction trimRight(str)\n{\n\treturn str.replace(/\\s+$/, '');\n}\n\nfunction words(str)\n{\n\treturn _elm_lang$core$Native_List.fromArray(str.trim().split(/\\s+/g));\n}\nfunction lines(str)\n{\n\treturn _elm_lang$core$Native_List.fromArray(str.split(/\\r\\n|\\r|\\n/g));\n}\n\nfunction toUpper(str)\n{\n\treturn str.toUpperCase();\n}\nfunction toLower(str)\n{\n\treturn str.toLowerCase();\n}\n\nfunction any(pred, str)\n{\n\tfor (var i = str.length; i--; )\n\t{\n\t\tif (pred(_elm_lang$core$Native_Utils.chr(str[i])))\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\nfunction all(pred, str)\n{\n\tfor (var i = str.length; i--; )\n\t{\n\t\tif (!pred(_elm_lang$core$Native_Utils.chr(str[i])))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\nfunction contains(sub, str)\n{\n\treturn str.indexOf(sub) > -1;\n}\nfunction startsWith(sub, str)\n{\n\treturn str.indexOf(sub) === 0;\n}\nfunction endsWith(sub, str)\n{\n\treturn str.length >= sub.length &&\n\t\tstr.lastIndexOf(sub) === str.length - sub.length;\n}\nfunction indexes(sub, str)\n{\n\tvar subLen = sub.length;\n\n\tif (subLen < 1)\n\t{\n\t\treturn _elm_lang$core$Native_List.Nil;\n\t}\n\n\tvar i = 0;\n\tvar is = [];\n\n\twhile ((i = str.indexOf(sub, i)) > -1)\n\t{\n\t\tis.push(i);\n\t\ti = i + subLen;\n\t}\n\n\treturn _elm_lang$core$Native_List.fromArray(is);\n}\n\n\nfunction toInt(s)\n{\n\tvar len = s.length;\n\n\t// if empty\n\tif (len === 0)\n\t{\n\t\treturn intErr(s);\n\t}\n\n\t// if hex\n\tvar c = s[0];\n\tif (c === '0' && s[1] === 'x')\n\t{\n\t\tfor (var i = 2; i < len; ++i)\n\t\t{\n\t\t\tvar c = s[i];\n\t\t\tif (('0' <= c && c <= '9') || ('A' <= c && c <= 'F') || ('a' <= c && c <= 'f'))\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\treturn intErr(s);\n\t\t}\n\t\treturn _elm_lang$core$Result$Ok(parseInt(s, 16));\n\t}\n\n\t// is decimal\n\tif (c > '9' || (c < '0' && c !== '-' && c !== '+'))\n\t{\n\t\treturn intErr(s);\n\t}\n\tfor (var i = 1; i < len; ++i)\n\t{\n\t\tvar c = s[i];\n\t\tif (c < '0' || '9' < c)\n\t\t{\n\t\t\treturn intErr(s);\n\t\t}\n\t}\n\n\treturn _elm_lang$core$Result$Ok(parseInt(s, 10));\n}\n\nfunction intErr(s)\n{\n\treturn _elm_lang$core$Result$Err(\"could not convert string '\" + s + \"' to an Int\");\n}\n\n\nfunction toFloat(s)\n{\n\t// check if it is a hex, octal, or binary number\n\tif (s.length === 0 || /[\\sxbo]/.test(s))\n\t{\n\t\treturn floatErr(s);\n\t}\n\tvar n = +s;\n\t// faster isNaN check\n\treturn n === n ? _elm_lang$core$Result$Ok(n) : floatErr(s);\n}\n\nfunction floatErr(s)\n{\n\treturn _elm_lang$core$Result$Err(\"could not convert string '\" + s + \"' to a Float\");\n}\n\n\nfunction toList(str)\n{\n\treturn _elm_lang$core$Native_List.fromArray(str.split('').map(_elm_lang$core$Native_Utils.chr));\n}\nfunction fromList(chars)\n{\n\treturn _elm_lang$core$Native_List.toArray(chars).join('');\n}\n\nreturn {\n\tisEmpty: isEmpty,\n\tcons: F2(cons),\n\tuncons: uncons,\n\tappend: F2(append),\n\tconcat: concat,\n\tlength: length,\n\tmap: F2(map),\n\tfilter: F2(filter),\n\treverse: reverse,\n\tfoldl: F3(foldl),\n\tfoldr: F3(foldr),\n\n\tsplit: F2(split),\n\tjoin: F2(join),\n\trepeat: F2(repeat),\n\n\tslice: F3(slice),\n\tleft: F2(left),\n\tright: F2(right),\n\tdropLeft: F2(dropLeft),\n\tdropRight: F2(dropRight),\n\n\tpad: F3(pad),\n\tpadLeft: F3(padLeft),\n\tpadRight: F3(padRight),\n\n\ttrim: trim,\n\ttrimLeft: trimLeft,\n\ttrimRight: trimRight,\n\n\twords: words,\n\tlines: lines,\n\n\ttoUpper: toUpper,\n\ttoLower: toLower,\n\n\tany: F2(any),\n\tall: F2(all),\n\n\tcontains: F2(contains),\n\tstartsWith: F2(startsWith),\n\tendsWith: F2(endsWith),\n\tindexes: F2(indexes),\n\n\ttoInt: toInt,\n\ttoFloat: toFloat,\n\ttoList: toList,\n\tfromList: fromList\n};\n\n}();\n\n//import Native.Utils //\n\nvar _elm_lang$core$Native_Char = function() {\n\nreturn {\n\tfromCode: function(c) { return _elm_lang$core$Native_Utils.chr(String.fromCharCode(c)); },\n\ttoCode: function(c) { return c.charCodeAt(0); },\n\ttoUpper: function(c) { return _elm_lang$core$Native_Utils.chr(c.toUpperCase()); },\n\ttoLower: function(c) { return _elm_lang$core$Native_Utils.chr(c.toLowerCase()); },\n\ttoLocaleUpper: function(c) { return _elm_lang$core$Native_Utils.chr(c.toLocaleUpperCase()); },\n\ttoLocaleLower: function(c) { return _elm_lang$core$Native_Utils.chr(c.toLocaleLowerCase()); }\n};\n\n}();\nvar _elm_lang$core$Char$fromCode = _elm_lang$core$Native_Char.fromCode;\nvar _elm_lang$core$Char$toCode = _elm_lang$core$Native_Char.toCode;\nvar _elm_lang$core$Char$toLocaleLower = _elm_lang$core$Native_Char.toLocaleLower;\nvar _elm_lang$core$Char$toLocaleUpper = _elm_lang$core$Native_Char.toLocaleUpper;\nvar _elm_lang$core$Char$toLower = _elm_lang$core$Native_Char.toLower;\nvar _elm_lang$core$Char$toUpper = _elm_lang$core$Native_Char.toUpper;\nvar _elm_lang$core$Char$isBetween = F3(\n\tfunction (low, high, $char) {\n\t\tvar code = _elm_lang$core$Char$toCode($char);\n\t\treturn (_elm_lang$core$Native_Utils.cmp(\n\t\t\tcode,\n\t\t\t_elm_lang$core$Char$toCode(low)) > -1) && (_elm_lang$core$Native_Utils.cmp(\n\t\t\tcode,\n\t\t\t_elm_lang$core$Char$toCode(high)) < 1);\n\t});\nvar _elm_lang$core$Char$isUpper = A2(\n\t_elm_lang$core$Char$isBetween,\n\t_elm_lang$core$Native_Utils.chr('A'),\n\t_elm_lang$core$Native_Utils.chr('Z'));\nvar _elm_lang$core$Char$isLower = A2(\n\t_elm_lang$core$Char$isBetween,\n\t_elm_lang$core$Native_Utils.chr('a'),\n\t_elm_lang$core$Native_Utils.chr('z'));\nvar _elm_lang$core$Char$isDigit = A2(\n\t_elm_lang$core$Char$isBetween,\n\t_elm_lang$core$Native_Utils.chr('0'),\n\t_elm_lang$core$Native_Utils.chr('9'));\nvar _elm_lang$core$Char$isOctDigit = A2(\n\t_elm_lang$core$Char$isBetween,\n\t_elm_lang$core$Native_Utils.chr('0'),\n\t_elm_lang$core$Native_Utils.chr('7'));\nvar _elm_lang$core$Char$isHexDigit = function ($char) {\n\treturn _elm_lang$core$Char$isDigit($char) || (A3(\n\t\t_elm_lang$core$Char$isBetween,\n\t\t_elm_lang$core$Native_Utils.chr('a'),\n\t\t_elm_lang$core$Native_Utils.chr('f'),\n\t\t$char) || A3(\n\t\t_elm_lang$core$Char$isBetween,\n\t\t_elm_lang$core$Native_Utils.chr('A'),\n\t\t_elm_lang$core$Native_Utils.chr('F'),\n\t\t$char));\n};\n\nvar _elm_lang$core$String$fromList = _elm_lang$core$Native_String.fromList;\nvar _elm_lang$core$String$toList = _elm_lang$core$Native_String.toList;\nvar _elm_lang$core$String$toFloat = _elm_lang$core$Native_String.toFloat;\nvar _elm_lang$core$String$toInt = _elm_lang$core$Native_String.toInt;\nvar _elm_lang$core$String$indices = _elm_lang$core$Native_String.indexes;\nvar _elm_lang$core$String$indexes = _elm_lang$core$Native_String.indexes;\nvar _elm_lang$core$String$endsWith = _elm_lang$core$Native_String.endsWith;\nvar _elm_lang$core$String$startsWith = _elm_lang$core$Native_String.startsWith;\nvar _elm_lang$core$String$contains = _elm_lang$core$Native_String.contains;\nvar _elm_lang$core$String$all = _elm_lang$core$Native_String.all;\nvar _elm_lang$core$String$any = _elm_lang$core$Native_String.any;\nvar _elm_lang$core$String$toLower = _elm_lang$core$Native_String.toLower;\nvar _elm_lang$core$String$toUpper = _elm_lang$core$Native_String.toUpper;\nvar _elm_lang$core$String$lines = _elm_lang$core$Native_String.lines;\nvar _elm_lang$core$String$words = _elm_lang$core$Native_String.words;\nvar _elm_lang$core$String$trimRight = _elm_lang$core$Native_String.trimRight;\nvar _elm_lang$core$String$trimLeft = _elm_lang$core$Native_String.trimLeft;\nvar _elm_lang$core$String$trim = _elm_lang$core$Native_String.trim;\nvar _elm_lang$core$String$padRight = _elm_lang$core$Native_String.padRight;\nvar _elm_lang$core$String$padLeft = _elm_lang$core$Native_String.padLeft;\nvar _elm_lang$core$String$pad = _elm_lang$core$Native_String.pad;\nvar _elm_lang$core$String$dropRight = _elm_lang$core$Native_String.dropRight;\nvar _elm_lang$core$String$dropLeft = _elm_lang$core$Native_String.dropLeft;\nvar _elm_lang$core$String$right = _elm_lang$core$Native_String.right;\nvar _elm_lang$core$String$left = _elm_lang$core$Native_String.left;\nvar _elm_lang$core$String$slice = _elm_lang$core$Native_String.slice;\nvar _elm_lang$core$String$repeat = _elm_lang$core$Native_String.repeat;\nvar _elm_lang$core$String$join = _elm_lang$core$Native_String.join;\nvar _elm_lang$core$String$split = _elm_lang$core$Native_String.split;\nvar _elm_lang$core$String$foldr = _elm_lang$core$Native_String.foldr;\nvar _elm_lang$core$String$foldl = _elm_lang$core$Native_String.foldl;\nvar _elm_lang$core$String$reverse = _elm_lang$core$Native_String.reverse;\nvar _elm_lang$core$String$filter = _elm_lang$core$Native_String.filter;\nvar _elm_lang$core$String$map = _elm_lang$core$Native_String.map;\nvar _elm_lang$core$String$length = _elm_lang$core$Native_String.length;\nvar _elm_lang$core$String$concat = _elm_lang$core$Native_String.concat;\nvar _elm_lang$core$String$append = _elm_lang$core$Native_String.append;\nvar _elm_lang$core$String$uncons = _elm_lang$core$Native_String.uncons;\nvar _elm_lang$core$String$cons = _elm_lang$core$Native_String.cons;\nvar _elm_lang$core$String$fromChar = function ($char) {\n\treturn A2(_elm_lang$core$String$cons, $char, '');\n};\nvar _elm_lang$core$String$isEmpty = _elm_lang$core$Native_String.isEmpty;\n\nvar _elm_lang$core$Dict$foldr = F3(\n\tfunction (f, acc, t) {\n\t\tfoldr:\n\t\twhile (true) {\n\t\t\tvar _p0 = t;\n\t\t\tif (_p0.ctor === 'RBEmpty_elm_builtin') {\n\t\t\t\treturn acc;\n\t\t\t} else {\n\t\t\t\tvar _v1 = f,\n\t\t\t\t\t_v2 = A3(\n\t\t\t\t\tf,\n\t\t\t\t\t_p0._1,\n\t\t\t\t\t_p0._2,\n\t\t\t\t\tA3(_elm_lang$core$Dict$foldr, f, acc, _p0._4)),\n\t\t\t\t\t_v3 = _p0._3;\n\t\t\t\tf = _v1;\n\t\t\t\tacc = _v2;\n\t\t\t\tt = _v3;\n\t\t\t\tcontinue foldr;\n\t\t\t}\n\t\t}\n\t});\nvar _elm_lang$core$Dict$keys = function (dict) {\n\treturn A3(\n\t\t_elm_lang$core$Dict$foldr,\n\t\tF3(\n\t\t\tfunction (key, value, keyList) {\n\t\t\t\treturn {ctor: '::', _0: key, _1: keyList};\n\t\t\t}),\n\t\t{ctor: '[]'},\n\t\tdict);\n};\nvar _elm_lang$core$Dict$values = function (dict) {\n\treturn A3(\n\t\t_elm_lang$core$Dict$foldr,\n\t\tF3(\n\t\t\tfunction (key, value, valueList) {\n\t\t\t\treturn {ctor: '::', _0: value, _1: valueList};\n\t\t\t}),\n\t\t{ctor: '[]'},\n\t\tdict);\n};\nvar _elm_lang$core$Dict$toList = function (dict) {\n\treturn A3(\n\t\t_elm_lang$core$Dict$foldr,\n\t\tF3(\n\t\t\tfunction (key, value, list) {\n\t\t\t\treturn {\n\t\t\t\t\tctor: '::',\n\t\t\t\t\t_0: {ctor: '_Tuple2', _0: key, _1: value},\n\t\t\t\t\t_1: list\n\t\t\t\t};\n\t\t\t}),\n\t\t{ctor: '[]'},\n\t\tdict);\n};\nvar _elm_lang$core$Dict$foldl = F3(\n\tfunction (f, acc, dict) {\n\t\tfoldl:\n\t\twhile (true) {\n\t\t\tvar _p1 = dict;\n\t\t\tif (_p1.ctor === 'RBEmpty_elm_builtin') {\n\t\t\t\treturn acc;\n\t\t\t} else {\n\t\t\t\tvar _v5 = f,\n\t\t\t\t\t_v6 = A3(\n\t\t\t\t\tf,\n\t\t\t\t\t_p1._1,\n\t\t\t\t\t_p1._2,\n\t\t\t\t\tA3(_elm_lang$core$Dict$foldl, f, acc, _p1._3)),\n\t\t\t\t\t_v7 = _p1._4;\n\t\t\t\tf = _v5;\n\t\t\t\tacc = _v6;\n\t\t\t\tdict = _v7;\n\t\t\t\tcontinue foldl;\n\t\t\t}\n\t\t}\n\t});\nvar _elm_lang$core$Dict$merge = F6(\n\tfunction (leftStep, bothStep, rightStep, leftDict, rightDict, initialResult) {\n\t\tvar stepState = F3(\n\t\t\tfunction (rKey, rValue, _p2) {\n\t\t\t\tstepState:\n\t\t\t\twhile (true) {\n\t\t\t\t\tvar _p3 = _p2;\n\t\t\t\t\tvar _p9 = _p3._1;\n\t\t\t\t\tvar _p8 = _p3._0;\n\t\t\t\t\tvar _p4 = _p8;\n\t\t\t\t\tif (_p4.ctor === '[]') {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tctor: '_Tuple2',\n\t\t\t\t\t\t\t_0: _p8,\n\t\t\t\t\t\t\t_1: A3(rightStep, rKey, rValue, _p9)\n\t\t\t\t\t\t};\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar _p7 = _p4._1;\n\t\t\t\t\t\tvar _p6 = _p4._0._1;\n\t\t\t\t\t\tvar _p5 = _p4._0._0;\n\t\t\t\t\t\tif (_elm_lang$core$Native_Utils.cmp(_p5, rKey) < 0) {\n\t\t\t\t\t\t\tvar _v10 = rKey,\n\t\t\t\t\t\t\t\t_v11 = rValue,\n\t\t\t\t\t\t\t\t_v12 = {\n\t\t\t\t\t\t\t\tctor: '_Tuple2',\n\t\t\t\t\t\t\t\t_0: _p7,\n\t\t\t\t\t\t\t\t_1: A3(leftStep, _p5, _p6, _p9)\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\trKey = _v10;\n\t\t\t\t\t\t\trValue = _v11;\n\t\t\t\t\t\t\t_p2 = _v12;\n\t\t\t\t\t\t\tcontinue stepState;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (_elm_lang$core$Native_Utils.cmp(_p5, rKey) > 0) {\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\tctor: '_Tuple2',\n\t\t\t\t\t\t\t\t\t_0: _p8,\n\t\t\t\t\t\t\t\t\t_1: A3(rightStep, rKey, rValue, _p9)\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\tctor: '_Tuple2',\n\t\t\t\t\t\t\t\t\t_0: _p7,\n\t\t\t\t\t\t\t\t\t_1: A4(bothStep, _p5, _p6, rValue, _p9)\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\tvar _p10 = A3(\n\t\t\t_elm_lang$core$Dict$foldl,\n\t\t\tstepState,\n\t\t\t{\n\t\t\t\tctor: '_Tuple2',\n\t\t\t\t_0: _elm_lang$core$Dict$toList(leftDict),\n\t\t\t\t_1: initialResult\n\t\t\t},\n\t\t\trightDict);\n\t\tvar leftovers = _p10._0;\n\t\tvar intermediateResult = _p10._1;\n\t\treturn A3(\n\t\t\t_elm_lang$core$List$foldl,\n\t\t\tF2(\n\t\t\t\tfunction (_p11, result) {\n\t\t\t\t\tvar _p12 = _p11;\n\t\t\t\t\treturn A3(leftStep, _p12._0, _p12._1, result);\n\t\t\t\t}),\n\t\t\tintermediateResult,\n\t\t\tleftovers);\n\t});\nvar _elm_lang$core$Dict$reportRemBug = F4(\n\tfunction (msg, c, lgot, rgot) {\n\t\treturn _elm_lang$core$Native_Debug.crash(\n\t\t\t_elm_lang$core$String$concat(\n\t\t\t\t{\n\t\t\t\t\tctor: '::',\n\t\t\t\t\t_0: 'Internal red-black tree invariant violated, expected ',\n\t\t\t\t\t_1: {\n\t\t\t\t\t\tctor: '::',\n\t\t\t\t\t\t_0: msg,\n\t\t\t\t\t\t_1: {\n\t\t\t\t\t\t\tctor: '::',\n\t\t\t\t\t\t\t_0: ' and got ',\n\t\t\t\t\t\t\t_1: {\n\t\t\t\t\t\t\t\tctor: '::',\n\t\t\t\t\t\t\t\t_0: _elm_lang$core$Basics$toString(c),\n\t\t\t\t\t\t\t\t_1: {\n\t\t\t\t\t\t\t\t\tctor: '::',\n\t\t\t\t\t\t\t\t\t_0: '/',\n\t\t\t\t\t\t\t\t\t_1: {\n\t\t\t\t\t\t\t\t\t\tctor: '::',\n\t\t\t\t\t\t\t\t\t\t_0: lgot,\n\t\t\t\t\t\t\t\t\t\t_1: {\n\t\t\t\t\t\t\t\t\t\t\tctor: '::',\n\t\t\t\t\t\t\t\t\t\t\t_0: '/',\n\t\t\t\t\t\t\t\t\t\t\t_1: {\n\t\t\t\t\t\t\t\t\t\t\t\tctor: '::',\n\t\t\t\t\t\t\t\t\t\t\t\t_0: rgot,\n\t\t\t\t\t\t\t\t\t\t\t\t_1: {\n\t\t\t\t\t\t\t\t\t\t\t\t\tctor: '::',\n\t\t\t\t\t\t\t\t\t\t\t\t\t_0: '\\nPlease report this bug to <https://github.com/elm-lang/core/issues>',\n\t\t\t\t\t\t\t\t\t\t\t\t\t_1: {ctor: '[]'}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}));\n\t});\nvar _elm_lang$core$Dict$isBBlack = function (dict) {\n\tvar _p13 = dict;\n\t_v14_2:\n\tdo {\n\t\tif (_p13.ctor === 'RBNode_elm_builtin') {\n\t\t\tif (_p13._0.ctor === 'BBlack') {\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\tbreak _v14_2;\n\t\t\t}\n\t\t} else {\n\t\t\tif (_p13._0.ctor === 'LBBlack') {\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\tbreak _v14_2;\n\t\t\t}\n\t\t}\n\t} while(false);\n\treturn false;\n};\nvar _elm_lang$core$Dict$sizeHelp = F2(\n\tfunction (n, dict) {\n\t\tsizeHelp:\n\t\twhile (true) {\n\t\t\tvar _p14 = dict;\n\t\t\tif (_p14.ctor === 'RBEmpty_elm_builtin') {\n\t\t\t\treturn n;\n\t\t\t} else {\n\t\t\t\tvar _v16 = A2(_elm_lang$core$Dict$sizeHelp, n + 1, _p14._4),\n\t\t\t\t\t_v17 = _p14._3;\n\t\t\t\tn = _v16;\n\t\t\t\tdict = _v17;\n\t\t\t\tcontinue sizeHelp;\n\t\t\t}\n\t\t}\n\t});\nvar _elm_lang$core$Dict$size = function (dict) {\n\treturn A2(_elm_lang$core$Dict$sizeHelp, 0, dict);\n};\nvar _elm_lang$core$Dict$get = F2(\n\tfunction (targetKey, dict) {\n\t\tget:\n\t\twhile (true) {\n\t\t\tvar _p15 = dict;\n\t\t\tif (_p15.ctor === 'RBEmpty_elm_builtin') {\n\t\t\t\treturn _elm_lang$core$Maybe$Nothing;\n\t\t\t} else {\n\t\t\t\tvar _p16 = A2(_elm_lang$core$Basics$compare, targetKey, _p15._1);\n\t\t\t\tswitch (_p16.ctor) {\n\t\t\t\t\tcase 'LT':\n\t\t\t\t\t\tvar _v20 = targetKey,\n\t\t\t\t\t\t\t_v21 = _p15._3;\n\t\t\t\t\t\ttargetKey = _v20;\n\t\t\t\t\t\tdict = _v21;\n\t\t\t\t\t\tcontinue get;\n\t\t\t\t\tcase 'EQ':\n\t\t\t\t\t\treturn _elm_lang$core$Maybe$Just(_p15._2);\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tvar _v22 = targetKey,\n\t\t\t\t\t\t\t_v23 = _p15._4;\n\t\t\t\t\t\ttargetKey = _v22;\n\t\t\t\t\t\tdict = _v23;\n\t\t\t\t\t\tcontinue get;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar _elm_lang$core$Dict$member = F2(\n\tfunction (key, dict) {\n\t\tvar _p17 = A2(_elm_lang$core$Dict$get, key, dict);\n\t\tif (_p17.ctor === 'Just') {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t});\nvar _elm_lang$core$Dict$maxWithDefault = F3(\n\tfunction (k, v, r) {\n\t\tmaxWithDefault:\n\t\twhile (true) {\n\t\t\tvar _p18 = r;\n\t\t\tif (_p18.ctor === 'RBEmpty_elm_builtin') {\n\t\t\t\treturn {ctor: '_Tuple2', _0: k, _1: v};\n\t\t\t} else {\n\t\t\t\tvar _v26 = _p18._1,\n\t\t\t\t\t_v27 = _p18._2,\n\t\t\t\t\t_v28 = _p18._4;\n\t\t\t\tk = _v26;\n\t\t\t\tv = _v27;\n\t\t\t\tr = _v28;\n\t\t\t\tcontinue maxWithDefault;\n\t\t\t}\n\t\t}\n\t});\nvar _elm_lang$core$Dict$NBlack = {ctor: 'NBlack'};\nvar _elm_lang$core$Dict$BBlack = {ctor: 'BBlack'};\nvar _elm_lang$core$Dict$Black = {ctor: 'Black'};\nvar _elm_lang$core$Dict$blackish = function (t) {\n\tvar _p19 = t;\n\tif (_p19.ctor === 'RBNode_elm_builtin') {\n\t\tvar _p20 = _p19._0;\n\t\treturn _elm_lang$core$Native_Utils.eq(_p20, _elm_lang$core$Dict$Black) || _elm_lang$core$Native_Utils.eq(_p20, _elm_lang$core$Dict$BBlack);\n\t} else {\n\t\treturn true;\n\t}\n};\nvar _elm_lang$core$Dict$Red = {ctor: 'Red'};\nvar _elm_lang$core$Dict$moreBlack = function (color) {\n\tvar _p21 = color;\n\tswitch (_p21.ctor) {\n\t\tcase 'Black':\n\t\t\treturn _elm_lang$core$Dict$BBlack;\n\t\tcase 'Red':\n\t\t\treturn _elm_lang$core$Dict$Black;\n\t\tcase 'NBlack':\n\t\t\treturn _elm_lang$core$Dict$Red;\n\t\tdefault:\n\t\t\treturn _elm_lang$core$Native_Debug.crash('Can\\'t make a double black node more black!');\n\t}\n};\nvar _elm_lang$core$Dict$lessBlack = function (color) {\n\tvar _p22 = color;\n\tswitch (_p22.ctor) {\n\t\tcase 'BBlack':\n\t\t\treturn _elm_lang$core$Dict$Black;\n\t\tcase 'Black':\n\t\t\treturn _elm_lang$core$Dict$Red;\n\t\tcase 'Red':\n\t\t\treturn _elm_lang$core$Dict$NBlack;\n\t\tdefault:\n\t\t\treturn _elm_lang$core$Native_Debug.crash('Can\\'t make a negative black node less black!');\n\t}\n};\nvar _elm_lang$core$Dict$LBBlack = {ctor: 'LBBlack'};\nvar _elm_lang$core$Dict$LBlack = {ctor: 'LBlack'};\nvar _elm_lang$core$Dict$RBEmpty_elm_builtin = function (a) {\n\treturn {ctor: 'RBEmpty_elm_builtin', _0: a};\n};\nvar _elm_lang$core$Dict$empty = _elm_lang$core$Dict$RBEmpty_elm_builtin(_elm_lang$core$Dict$LBlack);\nvar _elm_lang$core$Dict$isEmpty = function (dict) {\n\treturn _elm_lang$core$Native_Utils.eq(dict, _elm_lang$core$Dict$empty);\n};\nvar _elm_lang$core$Dict$RBNode_elm_builtin = F5(\n\tfunction (a, b, c, d, e) {\n\t\treturn {ctor: 'RBNode_elm_builtin', _0: a, _1: b, _2: c, _3: d, _4: e};\n\t});\nvar _elm_lang$core$Dict$ensureBlackRoot = function (dict) {\n\tvar _p23 = dict;\n\tif ((_p23.ctor === 'RBNode_elm_builtin') && (_p23._0.ctor === 'Red')) {\n\t\treturn A5(_elm_lang$core$Dict$RBNode_elm_builtin, _elm_lang$core$Dict$Black, _p23._1, _p23._2, _p23._3, _p23._4);\n\t} else {\n\t\treturn dict;\n\t}\n};\nvar _elm_lang$core$Dict$lessBlackTree = function (dict) {\n\tvar _p24 = dict;\n\tif (_p24.ctor === 'RBNode_elm_builtin') {\n\t\treturn A5(\n\t\t\t_elm_lang$core$Dict$RBNode_elm_builtin,\n\t\t\t_elm_lang$core$Dict$lessBlack(_p24._0),\n\t\t\t_p24._1,\n\t\t\t_p24._2,\n\t\t\t_p24._3,\n\t\t\t_p24._4);\n\t} else {\n\t\treturn _elm_lang$core$Dict$RBEmpty_elm_builtin(_elm_lang$core$Dict$LBlack);\n\t}\n};\nvar _elm_lang$core$Dict$balancedTree = function (col) {\n\treturn function (xk) {\n\t\treturn function (xv) {\n\t\t\treturn function (yk) {\n\t\t\t\treturn function (yv) {\n\t\t\t\t\treturn function (zk) {\n\t\t\t\t\t\treturn function (zv) {\n\t\t\t\t\t\t\treturn function (a) {\n\t\t\t\t\t\t\t\treturn function (b) {\n\t\t\t\t\t\t\t\t\treturn function (c) {\n\t\t\t\t\t\t\t\t\t\treturn function (d) {\n\t\t\t\t\t\t\t\t\t\t\treturn A5(\n\t\t\t\t\t\t\t\t\t\t\t\t_elm_lang$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t\t\t\t\t\t\t\t_elm_lang$core$Dict$lessBlack(col),\n\t\t\t\t\t\t\t\t\t\t\t\tyk,\n\t\t\t\t\t\t\t\t\t\t\t\tyv,\n\t\t\t\t\t\t\t\t\t\t\t\tA5(_elm_lang$core$Dict$RBNode_elm_builtin, _elm_lang$core$Dict$Black, xk, xv, a, b),\n\t\t\t\t\t\t\t\t\t\t\t\tA5(_elm_lang$core$Dict$RBNode_elm_builtin, _elm_lang$core$Dict$Black, zk, zv, c, d));\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t};\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t};\n\t\t};\n\t};\n};\nvar _elm_lang$core$Dict$blacken = function (t) {\n\tvar _p25 = t;\n\tif (_p25.ctor === 'RBEmpty_elm_builtin') {\n\t\treturn _elm_lang$core$Dict$RBEmpty_elm_builtin(_elm_lang$core$Dict$LBlack);\n\t} else {\n\t\treturn A5(_elm_lang$core$Dict$RBNode_elm_builtin, _elm_lang$core$Dict$Black, _p25._1, _p25._2, _p25._3, _p25._4);\n\t}\n};\nvar _elm_lang$core$Dict$redden = function (t) {\n\tvar _p26 = t;\n\tif (_p26.ctor === 'RBEmpty_elm_builtin') {\n\t\treturn _elm_lang$core$Native_Debug.crash('can\\'t make a Leaf red');\n\t} else {\n\t\treturn A5(_elm_lang$core$Dict$RBNode_elm_builtin, _elm_lang$core$Dict$Red, _p26._1, _p26._2, _p26._3, _p26._4);\n\t}\n};\nvar _elm_lang$core$Dict$balanceHelp = function (tree) {\n\tvar _p27 = tree;\n\t_v36_6:\n\tdo {\n\t\t_v36_5:\n\t\tdo {\n\t\t\t_v36_4:\n\t\t\tdo {\n\t\t\t\t_v36_3:\n\t\t\t\tdo {\n\t\t\t\t\t_v36_2:\n\t\t\t\t\tdo {\n\t\t\t\t\t\t_v36_1:\n\t\t\t\t\t\tdo {\n\t\t\t\t\t\t\t_v36_0:\n\t\t\t\t\t\t\tdo {\n\t\t\t\t\t\t\t\tif (_p27.ctor === 'RBNode_elm_builtin') {\n\t\t\t\t\t\t\t\t\tif (_p27._3.ctor === 'RBNode_elm_builtin') {\n\t\t\t\t\t\t\t\t\t\tif (_p27._4.ctor === 'RBNode_elm_builtin') {\n\t\t\t\t\t\t\t\t\t\t\tswitch (_p27._3._0.ctor) {\n\t\t\t\t\t\t\t\t\t\t\t\tcase 'Red':\n\t\t\t\t\t\t\t\t\t\t\t\t\tswitch (_p27._4._0.ctor) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcase 'Red':\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ((_p27._3._3.ctor === 'RBNode_elm_builtin') && (_p27._3._3._0.ctor === 'Red')) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_0;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ((_p27._3._4.ctor === 'RBNode_elm_builtin') && (_p27._3._4._0.ctor === 'Red')) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_1;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ((_p27._4._3.ctor === 'RBNode_elm_builtin') && (_p27._4._3._0.ctor === 'Red')) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_2;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ((_p27._4._4.ctor === 'RBNode_elm_builtin') && (_p27._4._4._0.ctor === 'Red')) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_3;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_6;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcase 'NBlack':\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ((_p27._3._3.ctor === 'RBNode_elm_builtin') && (_p27._3._3._0.ctor === 'Red')) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_0;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ((_p27._3._4.ctor === 'RBNode_elm_builtin') && (_p27._3._4._0.ctor === 'Red')) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_1;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (((((_p27._0.ctor === 'BBlack') && (_p27._4._3.ctor === 'RBNode_elm_builtin')) && (_p27._4._3._0.ctor === 'Black')) && (_p27._4._4.ctor === 'RBNode_elm_builtin')) && (_p27._4._4._0.ctor === 'Black')) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_4;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_6;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ((_p27._3._3.ctor === 'RBNode_elm_builtin') && (_p27._3._3._0.ctor === 'Red')) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_0;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ((_p27._3._4.ctor === 'RBNode_elm_builtin') && (_p27._3._4._0.ctor === 'Red')) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_1;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_6;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tcase 'NBlack':\n\t\t\t\t\t\t\t\t\t\t\t\t\tswitch (_p27._4._0.ctor) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcase 'Red':\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ((_p27._4._3.ctor === 'RBNode_elm_builtin') && (_p27._4._3._0.ctor === 'Red')) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_2;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ((_p27._4._4.ctor === 'RBNode_elm_builtin') && (_p27._4._4._0.ctor === 'Red')) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_3;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (((((_p27._0.ctor === 'BBlack') && (_p27._3._3.ctor === 'RBNode_elm_builtin')) && (_p27._3._3._0.ctor === 'Black')) && (_p27._3._4.ctor === 'RBNode_elm_builtin')) && (_p27._3._4._0.ctor === 'Black')) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_5;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_6;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcase 'NBlack':\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (_p27._0.ctor === 'BBlack') {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ((((_p27._4._3.ctor === 'RBNode_elm_builtin') && (_p27._4._3._0.ctor === 'Black')) && (_p27._4._4.ctor === 'RBNode_elm_builtin')) && (_p27._4._4._0.ctor === 'Black')) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_4;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ((((_p27._3._3.ctor === 'RBNode_elm_builtin') && (_p27._3._3._0.ctor === 'Black')) && (_p27._3._4.ctor === 'RBNode_elm_builtin')) && (_p27._3._4._0.ctor === 'Black')) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_5;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_6;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_6;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (((((_p27._0.ctor === 'BBlack') && (_p27._3._3.ctor === 'RBNode_elm_builtin')) && (_p27._3._3._0.ctor === 'Black')) && (_p27._3._4.ctor === 'RBNode_elm_builtin')) && (_p27._3._4._0.ctor === 'Black')) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_5;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_6;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\t\t\t\tswitch (_p27._4._0.ctor) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcase 'Red':\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ((_p27._4._3.ctor === 'RBNode_elm_builtin') && (_p27._4._3._0.ctor === 'Red')) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_2;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ((_p27._4._4.ctor === 'RBNode_elm_builtin') && (_p27._4._4._0.ctor === 'Red')) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_3;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_6;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcase 'NBlack':\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (((((_p27._0.ctor === 'BBlack') && (_p27._4._3.ctor === 'RBNode_elm_builtin')) && (_p27._4._3._0.ctor === 'Black')) && (_p27._4._4.ctor === 'RBNode_elm_builtin')) && (_p27._4._4._0.ctor === 'Black')) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_4;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_6;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_6;\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tswitch (_p27._3._0.ctor) {\n\t\t\t\t\t\t\t\t\t\t\t\tcase 'Red':\n\t\t\t\t\t\t\t\t\t\t\t\t\tif ((_p27._3._3.ctor === 'RBNode_elm_builtin') && (_p27._3._3._0.ctor === 'Red')) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_0;\n\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ((_p27._3._4.ctor === 'RBNode_elm_builtin') && (_p27._3._4._0.ctor === 'Red')) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_1;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_6;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tcase 'NBlack':\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (((((_p27._0.ctor === 'BBlack') && (_p27._3._3.ctor === 'RBNode_elm_builtin')) && (_p27._3._3._0.ctor === 'Black')) && (_p27._3._4.ctor === 'RBNode_elm_builtin')) && (_p27._3._4._0.ctor === 'Black')) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_5;\n\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_6;\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_6;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tif (_p27._4.ctor === 'RBNode_elm_builtin') {\n\t\t\t\t\t\t\t\t\t\t\tswitch (_p27._4._0.ctor) {\n\t\t\t\t\t\t\t\t\t\t\t\tcase 'Red':\n\t\t\t\t\t\t\t\t\t\t\t\t\tif ((_p27._4._3.ctor === 'RBNode_elm_builtin') && (_p27._4._3._0.ctor === 'Red')) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_2;\n\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ((_p27._4._4.ctor === 'RBNode_elm_builtin') && (_p27._4._4._0.ctor === 'Red')) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_3;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_6;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tcase 'NBlack':\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (((((_p27._0.ctor === 'BBlack') && (_p27._4._3.ctor === 'RBNode_elm_builtin')) && (_p27._4._3._0.ctor === 'Black')) && (_p27._4._4.ctor === 'RBNode_elm_builtin')) && (_p27._4._4._0.ctor === 'Black')) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_4;\n\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_6;\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_6;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tbreak _v36_6;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tbreak _v36_6;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} while(false);\n\t\t\t\t\t\t\treturn _elm_lang$core$Dict$balancedTree(_p27._0)(_p27._3._3._1)(_p27._3._3._2)(_p27._3._1)(_p27._3._2)(_p27._1)(_p27._2)(_p27._3._3._3)(_p27._3._3._4)(_p27._3._4)(_p27._4);\n\t\t\t\t\t\t} while(false);\n\t\t\t\t\t\treturn _elm_lang$core$Dict$balancedTree(_p27._0)(_p27._3._1)(_p27._3._2)(_p27._3._4._1)(_p27._3._4._2)(_p27._1)(_p27._2)(_p27._3._3)(_p27._3._4._3)(_p27._3._4._4)(_p27._4);\n\t\t\t\t\t} while(false);\n\t\t\t\t\treturn _elm_lang$core$Dict$balancedTree(_p27._0)(_p27._1)(_p27._2)(_p27._4._3._1)(_p27._4._3._2)(_p27._4._1)(_p27._4._2)(_p27._3)(_p27._4._3._3)(_p27._4._3._4)(_p27._4._4);\n\t\t\t\t} while(false);\n\t\t\t\treturn _elm_lang$core$Dict$balancedTree(_p27._0)(_p27._1)(_p27._2)(_p27._4._1)(_p27._4._2)(_p27._4._4._1)(_p27._4._4._2)(_p27._3)(_p27._4._3)(_p27._4._4._3)(_p27._4._4._4);\n\t\t\t} while(false);\n\t\t\treturn A5(\n\t\t\t\t_elm_lang$core$Dict$RBNode_elm_builtin,\n\t\t\t\t_elm_lang$core$Dict$Black,\n\t\t\t\t_p27._4._3._1,\n\t\t\t\t_p27._4._3._2,\n\t\t\t\tA5(_elm_lang$core$Dict$RBNode_elm_builtin, _elm_lang$core$Dict$Black, _p27._1, _p27._2, _p27._3, _p27._4._3._3),\n\t\t\t\tA5(\n\t\t\t\t\t_elm_lang$core$Dict$balance,\n\t\t\t\t\t_elm_lang$core$Dict$Black,\n\t\t\t\t\t_p27._4._1,\n\t\t\t\t\t_p27._4._2,\n\t\t\t\t\t_p27._4._3._4,\n\t\t\t\t\t_elm_lang$core$Dict$redden(_p27._4._4)));\n\t\t} while(false);\n\t\treturn A5(\n\t\t\t_elm_lang$core$Dict$RBNode_elm_builtin,\n\t\t\t_elm_lang$core$Dict$Black,\n\t\t\t_p27._3._4._1,\n\t\t\t_p27._3._4._2,\n\t\t\tA5(\n\t\t\t\t_elm_lang$core$Dict$balance,\n\t\t\t\t_elm_lang$core$Dict$Black,\n\t\t\t\t_p27._3._1,\n\t\t\t\t_p27._3._2,\n\t\t\t\t_elm_lang$core$Dict$redden(_p27._3._3),\n\t\t\t\t_p27._3._4._3),\n\t\t\tA5(_elm_lang$core$Dict$RBNode_elm_builtin, _elm_lang$core$Dict$Black, _p27._1, _p27._2, _p27._3._4._4, _p27._4));\n\t} while(false);\n\treturn tree;\n};\nvar _elm_lang$core$Dict$balance = F5(\n\tfunction (c, k, v, l, r) {\n\t\tvar tree = A5(_elm_lang$core$Dict$RBNode_elm_builtin, c, k, v, l, r);\n\t\treturn _elm_lang$core$Dict$blackish(tree) ? _elm_lang$core$Dict$balanceHelp(tree) : tree;\n\t});\nvar _elm_lang$core$Dict$bubble = F5(\n\tfunction (c, k, v, l, r) {\n\t\treturn (_elm_lang$core$Dict$isBBlack(l) || _elm_lang$core$Dict$isBBlack(r)) ? A5(\n\t\t\t_elm_lang$core$Dict$balance,\n\t\t\t_elm_lang$core$Dict$moreBlack(c),\n\t\t\tk,\n\t\t\tv,\n\t\t\t_elm_lang$core$Dict$lessBlackTree(l),\n\t\t\t_elm_lang$core$Dict$lessBlackTree(r)) : A5(_elm_lang$core$Dict$RBNode_elm_builtin, c, k, v, l, r);\n\t});\nvar _elm_lang$core$Dict$removeMax = F5(\n\tfunction (c, k, v, l, r) {\n\t\tvar _p28 = r;\n\t\tif (_p28.ctor === 'RBEmpty_elm_builtin') {\n\t\t\treturn A3(_elm_lang$core$Dict$rem, c, l, r);\n\t\t} else {\n\t\t\treturn A5(\n\t\t\t\t_elm_lang$core$Dict$bubble,\n\t\t\t\tc,\n\t\t\t\tk,\n\t\t\t\tv,\n\t\t\t\tl,\n\t\t\t\tA5(_elm_lang$core$Dict$removeMax, _p28._0, _p28._1, _p28._2, _p28._3, _p28._4));\n\t\t}\n\t});\nvar _elm_lang$core$Dict$rem = F3(\n\tfunction (color, left, right) {\n\t\tvar _p29 = {ctor: '_Tuple2', _0: left, _1: right};\n\t\tif (_p29._0.ctor === 'RBEmpty_elm_builtin') {\n\t\t\tif (_p29._1.ctor === 'RBEmpty_elm_builtin') {\n\t\t\t\tvar _p30 = color;\n\t\t\t\tswitch (_p30.ctor) {\n\t\t\t\t\tcase 'Red':\n\t\t\t\t\t\treturn _elm_lang$core$Dict$RBEmpty_elm_builtin(_elm_lang$core$Dict$LBlack);\n\t\t\t\t\tcase 'Black':\n\t\t\t\t\t\treturn _elm_lang$core$Dict$RBEmpty_elm_builtin(_elm_lang$core$Dict$LBBlack);\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn _elm_lang$core$Native_Debug.crash('cannot have bblack or nblack nodes at this point');\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar _p33 = _p29._1._0;\n\t\t\t\tvar _p32 = _p29._0._0;\n\t\t\t\tvar _p31 = {ctor: '_Tuple3', _0: color, _1: _p32, _2: _p33};\n\t\t\t\tif ((((_p31.ctor === '_Tuple3') && (_p31._0.ctor === 'Black')) && (_p31._1.ctor === 'LBlack')) && (_p31._2.ctor === 'Red')) {\n\t\t\t\t\treturn A5(_elm_lang$core$Dict$RBNode_elm_builtin, _elm_lang$core$Dict$Black, _p29._1._1, _p29._1._2, _p29._1._3, _p29._1._4);\n\t\t\t\t} else {\n\t\t\t\t\treturn A4(\n\t\t\t\t\t\t_elm_lang$core$Dict$reportRemBug,\n\t\t\t\t\t\t'Black/LBlack/Red',\n\t\t\t\t\t\tcolor,\n\t\t\t\t\t\t_elm_lang$core$Basics$toString(_p32),\n\t\t\t\t\t\t_elm_lang$core$Basics$toString(_p33));\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (_p29._1.ctor === 'RBEmpty_elm_builtin') {\n\t\t\t\tvar _p36 = _p29._1._0;\n\t\t\t\tvar _p35 = _p29._0._0;\n\t\t\t\tvar _p34 = {ctor: '_Tuple3', _0: color, _1: _p35, _2: _p36};\n\t\t\t\tif ((((_p34.ctor === '_Tuple3') && (_p34._0.ctor === 'Black')) && (_p34._1.ctor === 'Red')) && (_p34._2.ctor === 'LBlack')) {\n\t\t\t\t\treturn A5(_elm_lang$core$Dict$RBNode_elm_builtin, _elm_lang$core$Dict$Black, _p29._0._1, _p29._0._2, _p29._0._3, _p29._0._4);\n\t\t\t\t} else {\n\t\t\t\t\treturn A4(\n\t\t\t\t\t\t_elm_lang$core$Dict$reportRemBug,\n\t\t\t\t\t\t'Black/Red/LBlack',\n\t\t\t\t\t\tcolor,\n\t\t\t\t\t\t_elm_lang$core$Basics$toString(_p35),\n\t\t\t\t\t\t_elm_lang$core$Basics$toString(_p36));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar _p40 = _p29._0._2;\n\t\t\t\tvar _p39 = _p29._0._4;\n\t\t\t\tvar _p38 = _p29._0._1;\n\t\t\t\tvar newLeft = A5(_elm_lang$core$Dict$removeMax, _p29._0._0, _p38, _p40, _p29._0._3, _p39);\n\t\t\t\tvar _p37 = A3(_elm_lang$core$Dict$maxWithDefault, _p38, _p40, _p39);\n\t\t\t\tvar k = _p37._0;\n\t\t\t\tvar v = _p37._1;\n\t\t\t\treturn A5(_elm_lang$core$Dict$bubble, color, k, v, newLeft, right);\n\t\t\t}\n\t\t}\n\t});\nvar _elm_lang$core$Dict$map = F2(\n\tfunction (f, dict) {\n\t\tvar _p41 = dict;\n\t\tif (_p41.ctor === 'RBEmpty_elm_builtin') {\n\t\t\treturn _elm_lang$core$Dict$RBEmpty_elm_builtin(_elm_lang$core$Dict$LBlack);\n\t\t} else {\n\t\t\tvar _p42 = _p41._1;\n\t\t\treturn A5(\n\t\t\t\t_elm_lang$core$Dict$RBNode_elm_builtin,\n\t\t\t\t_p41._0,\n\t\t\t\t_p42,\n\t\t\t\tA2(f, _p42, _p41._2),\n\t\t\t\tA2(_elm_lang$core$Dict$map, f, _p41._3),\n\t\t\t\tA2(_elm_lang$core$Dict$map, f, _p41._4));\n\t\t}\n\t});\nvar _elm_lang$core$Dict$Same = {ctor: 'Same'};\nvar _elm_lang$core$Dict$Remove = {ctor: 'Remove'};\nvar _elm_lang$core$Dict$Insert = {ctor: 'Insert'};\nvar _elm_lang$core$Dict$update = F3(\n\tfunction (k, alter, dict) {\n\t\tvar up = function (dict) {\n\t\t\tvar _p43 = dict;\n\t\t\tif (_p43.ctor === 'RBEmpty_elm_builtin') {\n\t\t\t\tvar _p44 = alter(_elm_lang$core$Maybe$Nothing);\n\t\t\t\tif (_p44.ctor === 'Nothing') {\n\t\t\t\t\treturn {ctor: '_Tuple2', _0: _elm_lang$core$Dict$Same, _1: _elm_lang$core$Dict$empty};\n\t\t\t\t} else {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tctor: '_Tuple2',\n\t\t\t\t\t\t_0: _elm_lang$core$Dict$Insert,\n\t\t\t\t\t\t_1: A5(_elm_lang$core$Dict$RBNode_elm_builtin, _elm_lang$core$Dict$Red, k, _p44._0, _elm_lang$core$Dict$empty, _elm_lang$core$Dict$empty)\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar _p55 = _p43._2;\n\t\t\t\tvar _p54 = _p43._4;\n\t\t\t\tvar _p53 = _p43._3;\n\t\t\t\tvar _p52 = _p43._1;\n\t\t\t\tvar _p51 = _p43._0;\n\t\t\t\tvar _p45 = A2(_elm_lang$core$Basics$compare, k, _p52);\n\t\t\t\tswitch (_p45.ctor) {\n\t\t\t\t\tcase 'EQ':\n\t\t\t\t\t\tvar _p46 = alter(\n\t\t\t\t\t\t\t_elm_lang$core$Maybe$Just(_p55));\n\t\t\t\t\t\tif (_p46.ctor === 'Nothing') {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tctor: '_Tuple2',\n\t\t\t\t\t\t\t\t_0: _elm_lang$core$Dict$Remove,\n\t\t\t\t\t\t\t\t_1: A3(_elm_lang$core$Dict$rem, _p51, _p53, _p54)\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tctor: '_Tuple2',\n\t\t\t\t\t\t\t\t_0: _elm_lang$core$Dict$Same,\n\t\t\t\t\t\t\t\t_1: A5(_elm_lang$core$Dict$RBNode_elm_builtin, _p51, _p52, _p46._0, _p53, _p54)\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\tcase 'LT':\n\t\t\t\t\t\tvar _p47 = up(_p53);\n\t\t\t\t\t\tvar flag = _p47._0;\n\t\t\t\t\t\tvar newLeft = _p47._1;\n\t\t\t\t\t\tvar _p48 = flag;\n\t\t\t\t\t\tswitch (_p48.ctor) {\n\t\t\t\t\t\t\tcase 'Same':\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\tctor: '_Tuple2',\n\t\t\t\t\t\t\t\t\t_0: _elm_lang$core$Dict$Same,\n\t\t\t\t\t\t\t\t\t_1: A5(_elm_lang$core$Dict$RBNode_elm_builtin, _p51, _p52, _p55, newLeft, _p54)\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tcase 'Insert':\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\tctor: '_Tuple2',\n\t\t\t\t\t\t\t\t\t_0: _elm_lang$core$Dict$Insert,\n\t\t\t\t\t\t\t\t\t_1: A5(_elm_lang$core$Dict$balance, _p51, _p52, _p55, newLeft, _p54)\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\tctor: '_Tuple2',\n\t\t\t\t\t\t\t\t\t_0: _elm_lang$core$Dict$Remove,\n\t\t\t\t\t\t\t\t\t_1: A5(_elm_lang$core$Dict$bubble, _p51, _p52, _p55, newLeft, _p54)\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tvar _p49 = up(_p54);\n\t\t\t\t\t\tvar flag = _p49._0;\n\t\t\t\t\t\tvar newRight = _p49._1;\n\t\t\t\t\t\tvar _p50 = flag;\n\t\t\t\t\t\tswitch (_p50.ctor) {\n\t\t\t\t\t\t\tcase 'Same':\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\tctor: '_Tuple2',\n\t\t\t\t\t\t\t\t\t_0: _elm_lang$core$Dict$Same,\n\t\t\t\t\t\t\t\t\t_1: A5(_elm_lang$core$Dict$RBNode_elm_builtin, _p51, _p52, _p55, _p53, newRight)\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tcase 'Insert':\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\tctor: '_Tuple2',\n\t\t\t\t\t\t\t\t\t_0: _elm_lang$core$Dict$Insert,\n\t\t\t\t\t\t\t\t\t_1: A5(_elm_lang$core$Dict$balance, _p51, _p52, _p55, _p53, newRight)\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\tctor: '_Tuple2',\n\t\t\t\t\t\t\t\t\t_0: _elm_lang$core$Dict$Remove,\n\t\t\t\t\t\t\t\t\t_1: A5(_elm_lang$core$Dict$bubble, _p51, _p52, _p55, _p53, newRight)\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tvar _p56 = up(dict);\n\t\tvar flag = _p56._0;\n\t\tvar updatedDict = _p56._1;\n\t\tvar _p57 = flag;\n\t\tswitch (_p57.ctor) {\n\t\t\tcase 'Same':\n\t\t\t\treturn updatedDict;\n\t\t\tcase 'Insert':\n\t\t\t\treturn _elm_lang$core$Dict$ensureBlackRoot(updatedDict);\n\t\t\tdefault:\n\t\t\t\treturn _elm_lang$core$Dict$blacken(updatedDict);\n\t\t}\n\t});\nvar _elm_lang$core$Dict$insert = F3(\n\tfunction (key, value, dict) {\n\t\treturn A3(\n\t\t\t_elm_lang$core$Dict$update,\n\t\t\tkey,\n\t\t\t_elm_lang$core$Basics$always(\n\t\t\t\t_elm_lang$core$Maybe$Just(value)),\n\t\t\tdict);\n\t});\nvar _elm_lang$core$Dict$singleton = F2(\n\tfunction (key, value) {\n\t\treturn A3(_elm_lang$core$Dict$insert, key, value, _elm_lang$core$Dict$empty);\n\t});\nvar _elm_lang$core$Dict$union = F2(\n\tfunction (t1, t2) {\n\t\treturn A3(_elm_lang$core$Dict$foldl, _elm_lang$core$Dict$insert, t2, t1);\n\t});\nvar _elm_lang$core$Dict$filter = F2(\n\tfunction (predicate, dictionary) {\n\t\tvar add = F3(\n\t\t\tfunction (key, value, dict) {\n\t\t\t\treturn A2(predicate, key, value) ? A3(_elm_lang$core$Dict$insert, key, value, dict) : dict;\n\t\t\t});\n\t\treturn A3(_elm_lang$core$Dict$foldl, add, _elm_lang$core$Dict$empty, dictionary);\n\t});\nvar _elm_lang$core$Dict$intersect = F2(\n\tfunction (t1, t2) {\n\t\treturn A2(\n\t\t\t_elm_lang$core$Dict$filter,\n\t\t\tF2(\n\t\t\t\tfunction (k, _p58) {\n\t\t\t\t\treturn A2(_elm_lang$core$Dict$member, k, t2);\n\t\t\t\t}),\n\t\t\tt1);\n\t});\nvar _elm_lang$core$Dict$partition = F2(\n\tfunction (predicate, dict) {\n\t\tvar add = F3(\n\t\t\tfunction (key, value, _p59) {\n\t\t\t\tvar _p60 = _p59;\n\t\t\t\tvar _p62 = _p60._1;\n\t\t\t\tvar _p61 = _p60._0;\n\t\t\t\treturn A2(predicate, key, value) ? {\n\t\t\t\t\tctor: '_Tuple2',\n\t\t\t\t\t_0: A3(_elm_lang$core$Dict$insert, key, value, _p61),\n\t\t\t\t\t_1: _p62\n\t\t\t\t} : {\n\t\t\t\t\tctor: '_Tuple2',\n\t\t\t\t\t_0: _p61,\n\t\t\t\t\t_1: A3(_elm_lang$core$Dict$insert, key, value, _p62)\n\t\t\t\t};\n\t\t\t});\n\t\treturn A3(\n\t\t\t_elm_lang$core$Dict$foldl,\n\t\t\tadd,\n\t\t\t{ctor: '_Tuple2', _0: _elm_lang$core$Dict$empty, _1: _elm_lang$core$Dict$empty},\n\t\t\tdict);\n\t});\nvar _elm_lang$core$Dict$fromList = function (assocs) {\n\treturn A3(\n\t\t_elm_lang$core$List$foldl,\n\t\tF2(\n\t\t\tfunction (_p63, dict) {\n\t\t\t\tvar _p64 = _p63;\n\t\t\t\treturn A3(_elm_lang$core$Dict$insert, _p64._0, _p64._1, dict);\n\t\t\t}),\n\t\t_elm_lang$core$Dict$empty,\n\t\tassocs);\n};\nvar _elm_lang$core$Dict$remove = F2(\n\tfunction (key, dict) {\n\t\treturn A3(\n\t\t\t_elm_lang$core$Dict$update,\n\t\t\tkey,\n\t\t\t_elm_lang$core$Basics$always(_elm_lang$core$Maybe$Nothing),\n\t\t\tdict);\n\t});\nvar _elm_lang$core$Dict$diff = F2(\n\tfunction (t1, t2) {\n\t\treturn A3(\n\t\t\t_elm_lang$core$Dict$foldl,\n\t\t\tF3(\n\t\t\t\tfunction (k, v, t) {\n\t\t\t\t\treturn A2(_elm_lang$core$Dict$remove, k, t);\n\t\t\t\t}),\n\t\t\tt1,\n\t\t\tt2);\n\t});\n\n//import Native.Scheduler //\n\nvar _elm_lang$core$Native_Time = function() {\n\nvar now = _elm_lang$core$Native_Scheduler.nativeBinding(function(callback)\n{\n\tcallback(_elm_lang$core$Native_Scheduler.succeed(Date.now()));\n});\n\nfunction setInterval_(interval, task)\n{\n\treturn _elm_lang$core$Native_Scheduler.nativeBinding(function(callback)\n\t{\n\t\tvar id = setInterval(function() {\n\t\t\t_elm_lang$core$Native_Scheduler.rawSpawn(task);\n\t\t}, interval);\n\n\t\treturn function() { clearInterval(id); };\n\t});\n}\n\nreturn {\n\tnow: now,\n\tsetInterval_: F2(setInterval_)\n};\n\n}();\nvar _elm_lang$core$Time$setInterval = _elm_lang$core$Native_Time.setInterval_;\nvar _elm_lang$core$Time$spawnHelp = F3(\n\tfunction (router, intervals, processes) {\n\t\tvar _p0 = intervals;\n\t\tif (_p0.ctor === '[]') {\n\t\t\treturn _elm_lang$core$Task$succeed(processes);\n\t\t} else {\n\t\t\tvar _p1 = _p0._0;\n\t\t\tvar spawnRest = function (id) {\n\t\t\t\treturn A3(\n\t\t\t\t\t_elm_lang$core$Time$spawnHelp,\n\t\t\t\t\trouter,\n\t\t\t\t\t_p0._1,\n\t\t\t\t\tA3(_elm_lang$core$Dict$insert, _p1, id, processes));\n\t\t\t};\n\t\t\tvar spawnTimer = _elm_lang$core$Native_Scheduler.spawn(\n\t\t\t\tA2(\n\t\t\t\t\t_elm_lang$core$Time$setInterval,\n\t\t\t\t\t_p1,\n\t\t\t\t\tA2(_elm_lang$core$Platform$sendToSelf, router, _p1)));\n\t\t\treturn A2(_elm_lang$core$Task$andThen, spawnRest, spawnTimer);\n\t\t}\n\t});\nvar _elm_lang$core$Time$addMySub = F2(\n\tfunction (_p2, state) {\n\t\tvar _p3 = _p2;\n\t\tvar _p6 = _p3._1;\n\t\tvar _p5 = _p3._0;\n\t\tvar _p4 = A2(_elm_lang$core$Dict$get, _p5, state);\n\t\tif (_p4.ctor === 'Nothing') {\n\t\t\treturn A3(\n\t\t\t\t_elm_lang$core$Dict$insert,\n\t\t\t\t_p5,\n\t\t\t\t{\n\t\t\t\t\tctor: '::',\n\t\t\t\t\t_0: _p6,\n\t\t\t\t\t_1: {ctor: '[]'}\n\t\t\t\t},\n\t\t\t\tstate);\n\t\t} else {\n\t\t\treturn A3(\n\t\t\t\t_elm_lang$core$Dict$insert,\n\t\t\t\t_p5,\n\t\t\t\t{ctor: '::', _0: _p6, _1: _p4._0},\n\t\t\t\tstate);\n\t\t}\n\t});\nvar _elm_lang$core$Time$inMilliseconds = function (t) {\n\treturn t;\n};\nvar _elm_lang$core$Time$millisecond = 1;\nvar _elm_lang$core$Time$second = 1000 * _elm_lang$core$Time$millisecond;\nvar _elm_lang$core$Time$minute = 60 * _elm_lang$core$Time$second;\nvar _elm_lang$core$Time$hour = 60 * _elm_lang$core$Time$minute;\nvar _elm_lang$core$Time$inHours = function (t) {\n\treturn t / _elm_lang$core$Time$hour;\n};\nvar _elm_lang$core$Time$inMinutes = function (t) {\n\treturn t / _elm_lang$core$Time$minute;\n};\nvar _elm_lang$core$Time$inSeconds = function (t) {\n\treturn t / _elm_lang$core$Time$second;\n};\nvar _elm_lang$core$Time$now = _elm_lang$core$Native_Time.now;\nvar _elm_lang$core$Time$onSelfMsg = F3(\n\tfunction (router, interval, state) {\n\t\tvar _p7 = A2(_elm_lang$core$Dict$get, interval, state.taggers);\n\t\tif (_p7.ctor === 'Nothing') {\n\t\t\treturn _elm_lang$core$Task$succeed(state);\n\t\t} else {\n\t\t\tvar tellTaggers = function (time) {\n\t\t\t\treturn _elm_lang$core$Task$sequence(\n\t\t\t\t\tA2(\n\t\t\t\t\t\t_elm_lang$core$List$map,\n\t\t\t\t\t\tfunction (tagger) {\n\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t_elm_lang$core$Platform$sendToApp,\n\t\t\t\t\t\t\t\trouter,\n\t\t\t\t\t\t\t\ttagger(time));\n\t\t\t\t\t\t},\n\t\t\t\t\t\t_p7._0));\n\t\t\t};\n\t\t\treturn A2(\n\t\t\t\t_elm_lang$core$Task$andThen,\n\t\t\t\tfunction (_p8) {\n\t\t\t\t\treturn _elm_lang$core$Task$succeed(state);\n\t\t\t\t},\n\t\t\t\tA2(_elm_lang$core$Task$andThen, tellTaggers, _elm_lang$core$Time$now));\n\t\t}\n\t});\nvar _elm_lang$core$Time$subscription = _elm_lang$core$Native_Platform.leaf('Time');\nvar _elm_lang$core$Time$State = F2(\n\tfunction (a, b) {\n\t\treturn {taggers: a, processes: b};\n\t});\nvar _elm_lang$core$Time$init = _elm_lang$core$Task$succeed(\n\tA2(_elm_lang$core$Time$State, _elm_lang$core$Dict$empty, _elm_lang$core$Dict$empty));\nvar _elm_lang$core$Time$onEffects = F3(\n\tfunction (router, subs, _p9) {\n\t\tvar _p10 = _p9;\n\t\tvar rightStep = F3(\n\t\t\tfunction (_p12, id, _p11) {\n\t\t\t\tvar _p13 = _p11;\n\t\t\t\treturn {\n\t\t\t\t\tctor: '_Tuple3',\n\t\t\t\t\t_0: _p13._0,\n\t\t\t\t\t_1: _p13._1,\n\t\t\t\t\t_2: A2(\n\t\t\t\t\t\t_elm_lang$core$Task$andThen,\n\t\t\t\t\t\tfunction (_p14) {\n\t\t\t\t\t\t\treturn _p13._2;\n\t\t\t\t\t\t},\n\t\t\t\t\t\t_elm_lang$core$Native_Scheduler.kill(id))\n\t\t\t\t};\n\t\t\t});\n\t\tvar bothStep = F4(\n\t\t\tfunction (interval, taggers, id, _p15) {\n\t\t\t\tvar _p16 = _p15;\n\t\t\t\treturn {\n\t\t\t\t\tctor: '_Tuple3',\n\t\t\t\t\t_0: _p16._0,\n\t\t\t\t\t_1: A3(_elm_lang$core$Dict$insert, interval, id, _p16._1),\n\t\t\t\t\t_2: _p16._2\n\t\t\t\t};\n\t\t\t});\n\t\tvar leftStep = F3(\n\t\t\tfunction (interval, taggers, _p17) {\n\t\t\t\tvar _p18 = _p17;\n\t\t\t\treturn {\n\t\t\t\t\tctor: '_Tuple3',\n\t\t\t\t\t_0: {ctor: '::', _0: interval, _1: _p18._0},\n\t\t\t\t\t_1: _p18._1,\n\t\t\t\t\t_2: _p18._2\n\t\t\t\t};\n\t\t\t});\n\t\tvar newTaggers = A3(_elm_lang$core$List$foldl, _elm_lang$core$Time$addMySub, _elm_lang$core$Dict$empty, subs);\n\t\tvar _p19 = A6(\n\t\t\t_elm_lang$core$Dict$merge,\n\t\t\tleftStep,\n\t\t\tbothStep,\n\t\t\trightStep,\n\t\t\tnewTaggers,\n\t\t\t_p10.processes,\n\t\t\t{\n\t\t\t\tctor: '_Tuple3',\n\t\t\t\t_0: {ctor: '[]'},\n\t\t\t\t_1: _elm_lang$core$Dict$empty,\n\t\t\t\t_2: _elm_lang$core$Task$succeed(\n\t\t\t\t\t{ctor: '_Tuple0'})\n\t\t\t});\n\t\tvar spawnList = _p19._0;\n\t\tvar existingDict = _p19._1;\n\t\tvar killTask = _p19._2;\n\t\treturn A2(\n\t\t\t_elm_lang$core$Task$andThen,\n\t\t\tfunction (newProcesses) {\n\t\t\t\treturn _elm_lang$core$Task$succeed(\n\t\t\t\t\tA2(_elm_lang$core$Time$State, newTaggers, newProcesses));\n\t\t\t},\n\t\t\tA2(\n\t\t\t\t_elm_lang$core$Task$andThen,\n\t\t\t\tfunction (_p20) {\n\t\t\t\t\treturn A3(_elm_lang$core$Time$spawnHelp, router, spawnList, existingDict);\n\t\t\t\t},\n\t\t\t\tkillTask));\n\t});\nvar _elm_lang$core$Time$Every = F2(\n\tfunction (a, b) {\n\t\treturn {ctor: 'Every', _0: a, _1: b};\n\t});\nvar _elm_lang$core$Time$every = F2(\n\tfunction (interval, tagger) {\n\t\treturn _elm_lang$core$Time$subscription(\n\t\t\tA2(_elm_lang$core$Time$Every, interval, tagger));\n\t});\nvar _elm_lang$core$Time$subMap = F2(\n\tfunction (f, _p21) {\n\t\tvar _p22 = _p21;\n\t\treturn A2(\n\t\t\t_elm_lang$core$Time$Every,\n\t\t\t_p22._0,\n\t\t\tfunction (_p23) {\n\t\t\t\treturn f(\n\t\t\t\t\t_p22._1(_p23));\n\t\t\t});\n\t});\n_elm_lang$core$Native_Platform.effectManagers['Time'] = {pkg: 'elm-lang/core', init: _elm_lang$core$Time$init, onEffects: _elm_lang$core$Time$onEffects, onSelfMsg: _elm_lang$core$Time$onSelfMsg, tag: 'sub', subMap: _elm_lang$core$Time$subMap};\n\nvar _elm_lang$core$Process$kill = _elm_lang$core$Native_Scheduler.kill;\nvar _elm_lang$core$Process$sleep = _elm_lang$core$Native_Scheduler.sleep;\nvar _elm_lang$core$Process$spawn = _elm_lang$core$Native_Scheduler.spawn;\n\nvar _elm_lang$core$Debug$crash = _elm_lang$core$Native_Debug.crash;\nvar _elm_lang$core$Debug$log = _elm_lang$core$Native_Debug.log;\n\nvar _elm_lang$core$Tuple$mapSecond = F2(\n\tfunction (func, _p0) {\n\t\tvar _p1 = _p0;\n\t\treturn {\n\t\t\tctor: '_Tuple2',\n\t\t\t_0: _p1._0,\n\t\t\t_1: func(_p1._1)\n\t\t};\n\t});\nvar _elm_lang$core$Tuple$mapFirst = F2(\n\tfunction (func, _p2) {\n\t\tvar _p3 = _p2;\n\t\treturn {\n\t\t\tctor: '_Tuple2',\n\t\t\t_0: func(_p3._0),\n\t\t\t_1: _p3._1\n\t\t};\n\t});\nvar _elm_lang$core$Tuple$second = function (_p4) {\n\tvar _p5 = _p4;\n\treturn _p5._1;\n};\nvar _elm_lang$core$Tuple$first = function (_p6) {\n\tvar _p7 = _p6;\n\treturn _p7._0;\n};\n\nvar _elm_lang$animation_frame$AnimationFrame$rAF = _elm_lang$animation_frame$Native_AnimationFrame.create(\n\t{ctor: '_Tuple0'});\nvar _elm_lang$animation_frame$AnimationFrame$subscription = _elm_lang$core$Native_Platform.leaf('AnimationFrame');\nvar _elm_lang$animation_frame$AnimationFrame$State = F3(\n\tfunction (a, b, c) {\n\t\treturn {subs: a, request: b, oldTime: c};\n\t});\nvar _elm_lang$animation_frame$AnimationFrame$init = _elm_lang$core$Task$succeed(\n\tA3(\n\t\t_elm_lang$animation_frame$AnimationFrame$State,\n\t\t{ctor: '[]'},\n\t\t_elm_lang$core$Maybe$Nothing,\n\t\t0));\nvar _elm_lang$animation_frame$AnimationFrame$onEffects = F3(\n\tfunction (router, subs, _p0) {\n\t\tvar _p1 = _p0;\n\t\tvar _p5 = _p1.request;\n\t\tvar _p4 = _p1.oldTime;\n\t\tvar _p2 = {ctor: '_Tuple2', _0: _p5, _1: subs};\n\t\tif (_p2._0.ctor === 'Nothing') {\n\t\t\tif (_p2._1.ctor === '[]') {\n\t\t\t\treturn _elm_lang$core$Task$succeed(\n\t\t\t\t\tA3(\n\t\t\t\t\t\t_elm_lang$animation_frame$AnimationFrame$State,\n\t\t\t\t\t\t{ctor: '[]'},\n\t\t\t\t\t\t_elm_lang$core$Maybe$Nothing,\n\t\t\t\t\t\t_p4));\n\t\t\t} else {\n\t\t\t\treturn A2(\n\t\t\t\t\t_elm_lang$core$Task$andThen,\n\t\t\t\t\tfunction (pid) {\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t_elm_lang$core$Task$andThen,\n\t\t\t\t\t\t\tfunction (time) {\n\t\t\t\t\t\t\t\treturn _elm_lang$core$Task$succeed(\n\t\t\t\t\t\t\t\t\tA3(\n\t\t\t\t\t\t\t\t\t\t_elm_lang$animation_frame$AnimationFrame$State,\n\t\t\t\t\t\t\t\t\t\tsubs,\n\t\t\t\t\t\t\t\t\t\t_elm_lang$core$Maybe$Just(pid),\n\t\t\t\t\t\t\t\t\t\ttime));\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t_elm_lang$core$Time$now);\n\t\t\t\t\t},\n\t\t\t\t\t_elm_lang$core$Process$spawn(\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t_elm_lang$core$Task$andThen,\n\t\t\t\t\t\t\t_elm_lang$core$Platform$sendToSelf(router),\n\t\t\t\t\t\t\t_elm_lang$animation_frame$AnimationFrame$rAF)));\n\t\t\t}\n\t\t} else {\n\t\t\tif (_p2._1.ctor === '[]') {\n\t\t\t\treturn A2(\n\t\t\t\t\t_elm_lang$core$Task$andThen,\n\t\t\t\t\tfunction (_p3) {\n\t\t\t\t\t\treturn _elm_lang$core$Task$succeed(\n\t\t\t\t\t\t\tA3(\n\t\t\t\t\t\t\t\t_elm_lang$animation_frame$AnimationFrame$State,\n\t\t\t\t\t\t\t\t{ctor: '[]'},\n\t\t\t\t\t\t\t\t_elm_lang$core$Maybe$Nothing,\n\t\t\t\t\t\t\t\t_p4));\n\t\t\t\t\t},\n\t\t\t\t\t_elm_lang$core$Process$kill(_p2._0._0));\n\t\t\t} else {\n\t\t\t\treturn _elm_lang$core$Task$succeed(\n\t\t\t\t\tA3(_elm_lang$animation_frame$AnimationFrame$State, subs, _p5, _p4));\n\t\t\t}\n\t\t}\n\t});\nvar _elm_lang$animation_frame$AnimationFrame$onSelfMsg = F3(\n\tfunction (router, newTime, _p6) {\n\t\tvar _p7 = _p6;\n\t\tvar _p10 = _p7.subs;\n\t\tvar diff = newTime - _p7.oldTime;\n\t\tvar send = function (sub) {\n\t\t\tvar _p8 = sub;\n\t\t\tif (_p8.ctor === 'Time') {\n\t\t\t\treturn A2(\n\t\t\t\t\t_elm_lang$core$Platform$sendToApp,\n\t\t\t\t\trouter,\n\t\t\t\t\t_p8._0(newTime));\n\t\t\t} else {\n\t\t\t\treturn A2(\n\t\t\t\t\t_elm_lang$core$Platform$sendToApp,\n\t\t\t\t\trouter,\n\t\t\t\t\t_p8._0(diff));\n\t\t\t}\n\t\t};\n\t\treturn A2(\n\t\t\t_elm_lang$core$Task$andThen,\n\t\t\tfunction (pid) {\n\t\t\t\treturn A2(\n\t\t\t\t\t_elm_lang$core$Task$andThen,\n\t\t\t\t\tfunction (_p9) {\n\t\t\t\t\t\treturn _elm_lang$core$Task$succeed(\n\t\t\t\t\t\t\tA3(\n\t\t\t\t\t\t\t\t_elm_lang$animation_frame$AnimationFrame$State,\n\t\t\t\t\t\t\t\t_p10,\n\t\t\t\t\t\t\t\t_elm_lang$core$Maybe$Just(pid),\n\t\t\t\t\t\t\t\tnewTime));\n\t\t\t\t\t},\n\t\t\t\t\t_elm_lang$core$Task$sequence(\n\t\t\t\t\t\tA2(_elm_lang$core$List$map, send, _p10)));\n\t\t\t},\n\t\t\t_elm_lang$core$Process$spawn(\n\t\t\t\tA2(\n\t\t\t\t\t_elm_lang$core$Task$andThen,\n\t\t\t\t\t_elm_lang$core$Platform$sendToSelf(router),\n\t\t\t\t\t_elm_lang$animation_frame$AnimationFrame$rAF)));\n\t});\nvar _elm_lang$animation_frame$AnimationFrame$Diff = function (a) {\n\treturn {ctor: 'Diff', _0: a};\n};\nvar _elm_lang$animation_frame$AnimationFrame$diffs = function (tagger) {\n\treturn _elm_lang$animation_frame$AnimationFrame$subscription(\n\t\t_elm_lang$animation_frame$AnimationFrame$Diff(tagger));\n};\nvar _elm_lang$animation_frame$AnimationFrame$Time = function (a) {\n\treturn {ctor: 'Time', _0: a};\n};\nvar _elm_lang$animation_frame$AnimationFrame$times = function (tagger) {\n\treturn _elm_lang$animation_frame$AnimationFrame$subscription(\n\t\t_elm_lang$animation_frame$AnimationFrame$Time(tagger));\n};\nvar _elm_lang$animation_frame$AnimationFrame$subMap = F2(\n\tfunction (func, sub) {\n\t\tvar _p11 = sub;\n\t\tif (_p11.ctor === 'Time') {\n\t\t\treturn _elm_lang$animation_frame$AnimationFrame$Time(\n\t\t\t\tfunction (_p12) {\n\t\t\t\t\treturn func(\n\t\t\t\t\t\t_p11._0(_p12));\n\t\t\t\t});\n\t\t} else {\n\t\t\treturn _elm_lang$animation_frame$AnimationFrame$Diff(\n\t\t\t\tfunction (_p13) {\n\t\t\t\t\treturn func(\n\t\t\t\t\t\t_p11._0(_p13));\n\t\t\t\t});\n\t\t}\n\t});\n_elm_lang$core$Native_Platform.effectManagers['AnimationFrame'] = {pkg: 'elm-lang/animation-frame', init: _elm_lang$animation_frame$AnimationFrame$init, onEffects: _elm_lang$animation_frame$AnimationFrame$onEffects, onSelfMsg: _elm_lang$animation_frame$AnimationFrame$onSelfMsg, tag: 'sub', subMap: _elm_lang$animation_frame$AnimationFrame$subMap};\n\nvar _elm_lang$core$Color$fmod = F2(\n\tfunction (f, n) {\n\t\tvar integer = _elm_lang$core$Basics$floor(f);\n\t\treturn (_elm_lang$core$Basics$toFloat(\n\t\t\tA2(_elm_lang$core$Basics_ops['%'], integer, n)) + f) - _elm_lang$core$Basics$toFloat(integer);\n\t});\nvar _elm_lang$core$Color$rgbToHsl = F3(\n\tfunction (red, green, blue) {\n\t\tvar b = _elm_lang$core$Basics$toFloat(blue) / 255;\n\t\tvar g = _elm_lang$core$Basics$toFloat(green) / 255;\n\t\tvar r = _elm_lang$core$Basics$toFloat(red) / 255;\n\t\tvar cMax = A2(\n\t\t\t_elm_lang$core$Basics$max,\n\t\t\tA2(_elm_lang$core$Basics$max, r, g),\n\t\t\tb);\n\t\tvar cMin = A2(\n\t\t\t_elm_lang$core$Basics$min,\n\t\t\tA2(_elm_lang$core$Basics$min, r, g),\n\t\t\tb);\n\t\tvar c = cMax - cMin;\n\t\tvar lightness = (cMax + cMin) / 2;\n\t\tvar saturation = _elm_lang$core$Native_Utils.eq(lightness, 0) ? 0 : (c / (1 - _elm_lang$core$Basics$abs((2 * lightness) - 1)));\n\t\tvar hue = _elm_lang$core$Basics$degrees(60) * (_elm_lang$core$Native_Utils.eq(cMax, r) ? A2(_elm_lang$core$Color$fmod, (g - b) / c, 6) : (_elm_lang$core$Native_Utils.eq(cMax, g) ? (((b - r) / c) + 2) : (((r - g) / c) + 4)));\n\t\treturn {ctor: '_Tuple3', _0: hue, _1: saturation, _2: lightness};\n\t});\nvar _elm_lang$core$Color$hslToRgb = F3(\n\tfunction (hue, saturation, lightness) {\n\t\tvar normHue = hue / _elm_lang$core$Basics$degrees(60);\n\t\tvar chroma = (1 - _elm_lang$core$Basics$abs((2 * lightness) - 1)) * saturation;\n\t\tvar x = chroma * (1 - _elm_lang$core$Basics$abs(\n\t\t\tA2(_elm_lang$core$Color$fmod, normHue, 2) - 1));\n\t\tvar _p0 = (_elm_lang$core$Native_Utils.cmp(normHue, 0) < 0) ? {ctor: '_Tuple3', _0: 0, _1: 0, _2: 0} : ((_elm_lang$core$Native_Utils.cmp(normHue, 1) < 0) ? {ctor: '_Tuple3', _0: chroma, _1: x, _2: 0} : ((_elm_lang$core$Native_Utils.cmp(normHue, 2) < 0) ? {ctor: '_Tuple3', _0: x, _1: chroma, _2: 0} : ((_elm_lang$core$Native_Utils.cmp(normHue, 3) < 0) ? {ctor: '_Tuple3', _0: 0, _1: chroma, _2: x} : ((_elm_lang$core$Native_Utils.cmp(normHue, 4) < 0) ? {ctor: '_Tuple3', _0: 0, _1: x, _2: chroma} : ((_elm_lang$core$Native_Utils.cmp(normHue, 5) < 0) ? {ctor: '_Tuple3', _0: x, _1: 0, _2: chroma} : ((_elm_lang$core$Native_Utils.cmp(normHue, 6) < 0) ? {ctor: '_Tuple3', _0: chroma, _1: 0, _2: x} : {ctor: '_Tuple3', _0: 0, _1: 0, _2: 0}))))));\n\t\tvar r = _p0._0;\n\t\tvar g = _p0._1;\n\t\tvar b = _p0._2;\n\t\tvar m = lightness - (chroma / 2);\n\t\treturn {ctor: '_Tuple3', _0: r + m, _1: g + m, _2: b + m};\n\t});\nvar _elm_lang$core$Color$toRgb = function (color) {\n\tvar _p1 = color;\n\tif (_p1.ctor === 'RGBA') {\n\t\treturn {red: _p1._0, green: _p1._1, blue: _p1._2, alpha: _p1._3};\n\t} else {\n\t\tvar _p2 = A3(_elm_lang$core$Color$hslToRgb, _p1._0, _p1._1, _p1._2);\n\t\tvar r = _p2._0;\n\t\tvar g = _p2._1;\n\t\tvar b = _p2._2;\n\t\treturn {\n\t\t\tred: _elm_lang$core$Basics$round(255 * r),\n\t\t\tgreen: _elm_lang$core$Basics$round(255 * g),\n\t\t\tblue: _elm_lang$core$Basics$round(255 * b),\n\t\t\talpha: _p1._3\n\t\t};\n\t}\n};\nvar _elm_lang$core$Color$toHsl = function (color) {\n\tvar _p3 = color;\n\tif (_p3.ctor === 'HSLA') {\n\t\treturn {hue: _p3._0, saturation: _p3._1, lightness: _p3._2, alpha: _p3._3};\n\t} else {\n\t\tvar _p4 = A3(_elm_lang$core$Color$rgbToHsl, _p3._0, _p3._1, _p3._2);\n\t\tvar h = _p4._0;\n\t\tvar s = _p4._1;\n\t\tvar l = _p4._2;\n\t\treturn {hue: h, saturation: s, lightness: l, alpha: _p3._3};\n\t}\n};\nvar _elm_lang$core$Color$HSLA = F4(\n\tfunction (a, b, c, d) {\n\t\treturn {ctor: 'HSLA', _0: a, _1: b, _2: c, _3: d};\n\t});\nvar _elm_lang$core$Color$hsla = F4(\n\tfunction (hue, saturation, lightness, alpha) {\n\t\treturn A4(\n\t\t\t_elm_lang$core$Color$HSLA,\n\t\t\thue - _elm_lang$core$Basics$turns(\n\t\t\t\t_elm_lang$core$Basics$toFloat(\n\t\t\t\t\t_elm_lang$core$Basics$floor(hue / (2 * _elm_lang$core$Basics$pi)))),\n\t\t\tsaturation,\n\t\t\tlightness,\n\t\t\talpha);\n\t});\nvar _elm_lang$core$Color$hsl = F3(\n\tfunction (hue, saturation, lightness) {\n\t\treturn A4(_elm_lang$core$Color$hsla, hue, saturation, lightness, 1);\n\t});\nvar _elm_lang$core$Color$complement = function (color) {\n\tvar _p5 = color;\n\tif (_p5.ctor === 'HSLA') {\n\t\treturn A4(\n\t\t\t_elm_lang$core$Color$hsla,\n\t\t\t_p5._0 + _elm_lang$core$Basics$degrees(180),\n\t\t\t_p5._1,\n\t\t\t_p5._2,\n\t\t\t_p5._3);\n\t} else {\n\t\tvar _p6 = A3(_elm_lang$core$Color$rgbToHsl, _p5._0, _p5._1, _p5._2);\n\t\tvar h = _p6._0;\n\t\tvar s = _p6._1;\n\t\tvar l = _p6._2;\n\t\treturn A4(\n\t\t\t_elm_lang$core$Color$hsla,\n\t\t\th + _elm_lang$core$Basics$degrees(180),\n\t\t\ts,\n\t\t\tl,\n\t\t\t_p5._3);\n\t}\n};\nvar _elm_lang$core$Color$grayscale = function (p) {\n\treturn A4(_elm_lang$core$Color$HSLA, 0, 0, 1 - p, 1);\n};\nvar _elm_lang$core$Color$greyscale = function (p) {\n\treturn A4(_elm_lang$core$Color$HSLA, 0, 0, 1 - p, 1);\n};\nvar _elm_lang$core$Color$RGBA = F4(\n\tfunction (a, b, c, d) {\n\t\treturn {ctor: 'RGBA', _0: a, _1: b, _2: c, _3: d};\n\t});\nvar _elm_lang$core$Color$rgba = _elm_lang$core$Color$RGBA;\nvar _elm_lang$core$Color$rgb = F3(\n\tfunction (r, g, b) {\n\t\treturn A4(_elm_lang$core$Color$RGBA, r, g, b, 1);\n\t});\nvar _elm_lang$core$Color$lightRed = A4(_elm_lang$core$Color$RGBA, 239, 41, 41, 1);\nvar _elm_lang$core$Color$red = A4(_elm_lang$core$Color$RGBA, 204, 0, 0, 1);\nvar _elm_lang$core$Color$darkRed = A4(_elm_lang$core$Color$RGBA, 164, 0, 0, 1);\nvar _elm_lang$core$Color$lightOrange = A4(_elm_lang$core$Color$RGBA, 252, 175, 62, 1);\nvar _elm_lang$core$Color$orange = A4(_elm_lang$core$Color$RGBA, 245, 121, 0, 1);\nvar _elm_lang$core$Color$darkOrange = A4(_elm_lang$core$Color$RGBA, 206, 92, 0, 1);\nvar _elm_lang$core$Color$lightYellow = A4(_elm_lang$core$Color$RGBA, 255, 233, 79, 1);\nvar _elm_lang$core$Color$yellow = A4(_elm_lang$core$Color$RGBA, 237, 212, 0, 1);\nvar _elm_lang$core$Color$darkYellow = A4(_elm_lang$core$Color$RGBA, 196, 160, 0, 1);\nvar _elm_lang$core$Color$lightGreen = A4(_elm_lang$core$Color$RGBA, 138, 226, 52, 1);\nvar _elm_lang$core$Color$green = A4(_elm_lang$core$Color$RGBA, 115, 210, 22, 1);\nvar _elm_lang$core$Color$darkGreen = A4(_elm_lang$core$Color$RGBA, 78, 154, 6, 1);\nvar _elm_lang$core$Color$lightBlue = A4(_elm_lang$core$Color$RGBA, 114, 159, 207, 1);\nvar _elm_lang$core$Color$blue = A4(_elm_lang$core$Color$RGBA, 52, 101, 164, 1);\nvar _elm_lang$core$Color$darkBlue = A4(_elm_lang$core$Color$RGBA, 32, 74, 135, 1);\nvar _elm_lang$core$Color$lightPurple = A4(_elm_lang$core$Color$RGBA, 173, 127, 168, 1);\nvar _elm_lang$core$Color$purple = A4(_elm_lang$core$Color$RGBA, 117, 80, 123, 1);\nvar _elm_lang$core$Color$darkPurple = A4(_elm_lang$core$Color$RGBA, 92, 53, 102, 1);\nvar _elm_lang$core$Color$lightBrown = A4(_elm_lang$core$Color$RGBA, 233, 185, 110, 1);\nvar _elm_lang$core$Color$brown = A4(_elm_lang$core$Color$RGBA, 193, 125, 17, 1);\nvar _elm_lang$core$Color$darkBrown = A4(_elm_lang$core$Color$RGBA, 143, 89, 2, 1);\nvar _elm_lang$core$Color$black = A4(_elm_lang$core$Color$RGBA, 0, 0, 0, 1);\nvar _elm_lang$core$Color$white = A4(_elm_lang$core$Color$RGBA, 255, 255, 255, 1);\nvar _elm_lang$core$Color$lightGrey = A4(_elm_lang$core$Color$RGBA, 238, 238, 236, 1);\nvar _elm_lang$core$Color$grey = A4(_elm_lang$core$Color$RGBA, 211, 215, 207, 1);\nvar _elm_lang$core$Color$darkGrey = A4(_elm_lang$core$Color$RGBA, 186, 189, 182, 1);\nvar _elm_lang$core$Color$lightGray = A4(_elm_lang$core$Color$RGBA, 238, 238, 236, 1);\nvar _elm_lang$core$Color$gray = A4(_elm_lang$core$Color$RGBA, 211, 215, 207, 1);\nvar _elm_lang$core$Color$darkGray = A4(_elm_lang$core$Color$RGBA, 186, 189, 182, 1);\nvar _elm_lang$core$Color$lightCharcoal = A4(_elm_lang$core$Color$RGBA, 136, 138, 133, 1);\nvar _elm_lang$core$Color$charcoal = A4(_elm_lang$core$Color$RGBA, 85, 87, 83, 1);\nvar _elm_lang$core$Color$darkCharcoal = A4(_elm_lang$core$Color$RGBA, 46, 52, 54, 1);\nvar _elm_lang$core$Color$Radial = F5(\n\tfunction (a, b, c, d, e) {\n\t\treturn {ctor: 'Radial', _0: a, _1: b, _2: c, _3: d, _4: e};\n\t});\nvar _elm_lang$core$Color$radial = _elm_lang$core$Color$Radial;\nvar _elm_lang$core$Color$Linear = F3(\n\tfunction (a, b, c) {\n\t\treturn {ctor: 'Linear', _0: a, _1: b, _2: c};\n\t});\nvar _elm_lang$core$Color$linear = _elm_lang$core$Color$Linear;\n\n//import Native.List //\n\nvar _elm_lang$core$Native_Array = function() {\n\n// A RRB-Tree has two distinct data types.\n// Leaf -> \"height\"  is always 0\n//         \"table\"   is an array of elements\n// Node -> \"height\"  is always greater than 0\n//         \"table\"   is an array of child nodes\n//         \"lengths\" is an array of accumulated lengths of the child nodes\n\n// M is the maximal table size. 32 seems fast. E is the allowed increase\n// of search steps when concatting to find an index. Lower values will\n// decrease balancing, but will increase search steps.\nvar M = 32;\nvar E = 2;\n\n// An empty array.\nvar empty = {\n\tctor: '_Array',\n\theight: 0,\n\ttable: []\n};\n\n\nfunction get(i, array)\n{\n\tif (i < 0 || i >= length(array))\n\t{\n\t\tthrow new Error(\n\t\t\t'Index ' + i + ' is out of range. Check the length of ' +\n\t\t\t'your array first or use getMaybe or getWithDefault.');\n\t}\n\treturn unsafeGet(i, array);\n}\n\n\nfunction unsafeGet(i, array)\n{\n\tfor (var x = array.height; x > 0; x--)\n\t{\n\t\tvar slot = i >> (x * 5);\n\t\twhile (array.lengths[slot] <= i)\n\t\t{\n\t\t\tslot++;\n\t\t}\n\t\tif (slot > 0)\n\t\t{\n\t\t\ti -= array.lengths[slot - 1];\n\t\t}\n\t\tarray = array.table[slot];\n\t}\n\treturn array.table[i];\n}\n\n\n// Sets the value at the index i. Only the nodes leading to i will get\n// copied and updated.\nfunction set(i, item, array)\n{\n\tif (i < 0 || length(array) <= i)\n\t{\n\t\treturn array;\n\t}\n\treturn unsafeSet(i, item, array);\n}\n\n\nfunction unsafeSet(i, item, array)\n{\n\tarray = nodeCopy(array);\n\n\tif (array.height === 0)\n\t{\n\t\tarray.table[i] = item;\n\t}\n\telse\n\t{\n\t\tvar slot = getSlot(i, array);\n\t\tif (slot > 0)\n\t\t{\n\t\t\ti -= array.lengths[slot - 1];\n\t\t}\n\t\tarray.table[slot] = unsafeSet(i, item, array.table[slot]);\n\t}\n\treturn array;\n}\n\n\nfunction initialize(len, f)\n{\n\tif (len <= 0)\n\t{\n\t\treturn empty;\n\t}\n\tvar h = Math.floor( Math.log(len) / Math.log(M) );\n\treturn initialize_(f, h, 0, len);\n}\n\nfunction initialize_(f, h, from, to)\n{\n\tif (h === 0)\n\t{\n\t\tvar table = new Array((to - from) % (M + 1));\n\t\tfor (var i = 0; i < table.length; i++)\n\t\t{\n\t\t  table[i] = f(from + i);\n\t\t}\n\t\treturn {\n\t\t\tctor: '_Array',\n\t\t\theight: 0,\n\t\t\ttable: table\n\t\t};\n\t}\n\n\tvar step = Math.pow(M, h);\n\tvar table = new Array(Math.ceil((to - from) / step));\n\tvar lengths = new Array(table.length);\n\tfor (var i = 0; i < table.length; i++)\n\t{\n\t\ttable[i] = initialize_(f, h - 1, from + (i * step), Math.min(from + ((i + 1) * step), to));\n\t\tlengths[i] = length(table[i]) + (i > 0 ? lengths[i-1] : 0);\n\t}\n\treturn {\n\t\tctor: '_Array',\n\t\theight: h,\n\t\ttable: table,\n\t\tlengths: lengths\n\t};\n}\n\nfunction fromList(list)\n{\n\tif (list.ctor === '[]')\n\t{\n\t\treturn empty;\n\t}\n\n\t// Allocate M sized blocks (table) and write list elements to it.\n\tvar table = new Array(M);\n\tvar nodes = [];\n\tvar i = 0;\n\n\twhile (list.ctor !== '[]')\n\t{\n\t\ttable[i] = list._0;\n\t\tlist = list._1;\n\t\ti++;\n\n\t\t// table is full, so we can push a leaf containing it into the\n\t\t// next node.\n\t\tif (i === M)\n\t\t{\n\t\t\tvar leaf = {\n\t\t\t\tctor: '_Array',\n\t\t\t\theight: 0,\n\t\t\t\ttable: table\n\t\t\t};\n\t\t\tfromListPush(leaf, nodes);\n\t\t\ttable = new Array(M);\n\t\t\ti = 0;\n\t\t}\n\t}\n\n\t// Maybe there is something left on the table.\n\tif (i > 0)\n\t{\n\t\tvar leaf = {\n\t\t\tctor: '_Array',\n\t\t\theight: 0,\n\t\t\ttable: table.splice(0, i)\n\t\t};\n\t\tfromListPush(leaf, nodes);\n\t}\n\n\t// Go through all of the nodes and eventually push them into higher nodes.\n\tfor (var h = 0; h < nodes.length - 1; h++)\n\t{\n\t\tif (nodes[h].table.length > 0)\n\t\t{\n\t\t\tfromListPush(nodes[h], nodes);\n\t\t}\n\t}\n\n\tvar head = nodes[nodes.length - 1];\n\tif (head.height > 0 && head.table.length === 1)\n\t{\n\t\treturn head.table[0];\n\t}\n\telse\n\t{\n\t\treturn head;\n\t}\n}\n\n// Push a node into a higher node as a child.\nfunction fromListPush(toPush, nodes)\n{\n\tvar h = toPush.height;\n\n\t// Maybe the node on this height does not exist.\n\tif (nodes.length === h)\n\t{\n\t\tvar node = {\n\t\t\tctor: '_Array',\n\t\t\theight: h + 1,\n\t\t\ttable: [],\n\t\t\tlengths: []\n\t\t};\n\t\tnodes.push(node);\n\t}\n\n\tnodes[h].table.push(toPush);\n\tvar len = length(toPush);\n\tif (nodes[h].lengths.length > 0)\n\t{\n\t\tlen += nodes[h].lengths[nodes[h].lengths.length - 1];\n\t}\n\tnodes[h].lengths.push(len);\n\n\tif (nodes[h].table.length === M)\n\t{\n\t\tfromListPush(nodes[h], nodes);\n\t\tnodes[h] = {\n\t\t\tctor: '_Array',\n\t\t\theight: h + 1,\n\t\t\ttable: [],\n\t\t\tlengths: []\n\t\t};\n\t}\n}\n\n// Pushes an item via push_ to the bottom right of a tree.\nfunction push(item, a)\n{\n\tvar pushed = push_(item, a);\n\tif (pushed !== null)\n\t{\n\t\treturn pushed;\n\t}\n\n\tvar newTree = create(item, a.height);\n\treturn siblise(a, newTree);\n}\n\n// Recursively tries to push an item to the bottom-right most\n// tree possible. If there is no space left for the item,\n// null will be returned.\nfunction push_(item, a)\n{\n\t// Handle resursion stop at leaf level.\n\tif (a.height === 0)\n\t{\n\t\tif (a.table.length < M)\n\t\t{\n\t\t\tvar newA = {\n\t\t\t\tctor: '_Array',\n\t\t\t\theight: 0,\n\t\t\t\ttable: a.table.slice()\n\t\t\t};\n\t\t\tnewA.table.push(item);\n\t\t\treturn newA;\n\t\t}\n\t\telse\n\t\t{\n\t\t  return null;\n\t\t}\n\t}\n\n\t// Recursively push\n\tvar pushed = push_(item, botRight(a));\n\n\t// There was space in the bottom right tree, so the slot will\n\t// be updated.\n\tif (pushed !== null)\n\t{\n\t\tvar newA = nodeCopy(a);\n\t\tnewA.table[newA.table.length - 1] = pushed;\n\t\tnewA.lengths[newA.lengths.length - 1]++;\n\t\treturn newA;\n\t}\n\n\t// When there was no space left, check if there is space left\n\t// for a new slot with a tree which contains only the item\n\t// at the bottom.\n\tif (a.table.length < M)\n\t{\n\t\tvar newSlot = create(item, a.height - 1);\n\t\tvar newA = nodeCopy(a);\n\t\tnewA.table.push(newSlot);\n\t\tnewA.lengths.push(newA.lengths[newA.lengths.length - 1] + length(newSlot));\n\t\treturn newA;\n\t}\n\telse\n\t{\n\t\treturn null;\n\t}\n}\n\n// Converts an array into a list of elements.\nfunction toList(a)\n{\n\treturn toList_(_elm_lang$core$Native_List.Nil, a);\n}\n\nfunction toList_(list, a)\n{\n\tfor (var i = a.table.length - 1; i >= 0; i--)\n\t{\n\t\tlist =\n\t\t\ta.height === 0\n\t\t\t\t? _elm_lang$core$Native_List.Cons(a.table[i], list)\n\t\t\t\t: toList_(list, a.table[i]);\n\t}\n\treturn list;\n}\n\n// Maps a function over the elements of an array.\nfunction map(f, a)\n{\n\tvar newA = {\n\t\tctor: '_Array',\n\t\theight: a.height,\n\t\ttable: new Array(a.table.length)\n\t};\n\tif (a.height > 0)\n\t{\n\t\tnewA.lengths = a.lengths;\n\t}\n\tfor (var i = 0; i < a.table.length; i++)\n\t{\n\t\tnewA.table[i] =\n\t\t\ta.height === 0\n\t\t\t\t? f(a.table[i])\n\t\t\t\t: map(f, a.table[i]);\n\t}\n\treturn newA;\n}\n\n// Maps a function over the elements with their index as first argument.\nfunction indexedMap(f, a)\n{\n\treturn indexedMap_(f, a, 0);\n}\n\nfunction indexedMap_(f, a, from)\n{\n\tvar newA = {\n\t\tctor: '_Array',\n\t\theight: a.height,\n\t\ttable: new Array(a.table.length)\n\t};\n\tif (a.height > 0)\n\t{\n\t\tnewA.lengths = a.lengths;\n\t}\n\tfor (var i = 0; i < a.table.length; i++)\n\t{\n\t\tnewA.table[i] =\n\t\t\ta.height === 0\n\t\t\t\t? A2(f, from + i, a.table[i])\n\t\t\t\t: indexedMap_(f, a.table[i], i == 0 ? from : from + a.lengths[i - 1]);\n\t}\n\treturn newA;\n}\n\nfunction foldl(f, b, a)\n{\n\tif (a.height === 0)\n\t{\n\t\tfor (var i = 0; i < a.table.length; i++)\n\t\t{\n\t\t\tb = A2(f, a.table[i], b);\n\t\t}\n\t}\n\telse\n\t{\n\t\tfor (var i = 0; i < a.table.length; i++)\n\t\t{\n\t\t\tb = foldl(f, b, a.table[i]);\n\t\t}\n\t}\n\treturn b;\n}\n\nfunction foldr(f, b, a)\n{\n\tif (a.height === 0)\n\t{\n\t\tfor (var i = a.table.length; i--; )\n\t\t{\n\t\t\tb = A2(f, a.table[i], b);\n\t\t}\n\t}\n\telse\n\t{\n\t\tfor (var i = a.table.length; i--; )\n\t\t{\n\t\t\tb = foldr(f, b, a.table[i]);\n\t\t}\n\t}\n\treturn b;\n}\n\n// TODO: currently, it slices the right, then the left. This can be\n// optimized.\nfunction slice(from, to, a)\n{\n\tif (from < 0)\n\t{\n\t\tfrom += length(a);\n\t}\n\tif (to < 0)\n\t{\n\t\tto += length(a);\n\t}\n\treturn sliceLeft(from, sliceRight(to, a));\n}\n\nfunction sliceRight(to, a)\n{\n\tif (to === length(a))\n\t{\n\t\treturn a;\n\t}\n\n\t// Handle leaf level.\n\tif (a.height === 0)\n\t{\n\t\tvar newA = { ctor:'_Array', height:0 };\n\t\tnewA.table = a.table.slice(0, to);\n\t\treturn newA;\n\t}\n\n\t// Slice the right recursively.\n\tvar right = getSlot(to, a);\n\tvar sliced = sliceRight(to - (right > 0 ? a.lengths[right - 1] : 0), a.table[right]);\n\n\t// Maybe the a node is not even needed, as sliced contains the whole slice.\n\tif (right === 0)\n\t{\n\t\treturn sliced;\n\t}\n\n\t// Create new node.\n\tvar newA = {\n\t\tctor: '_Array',\n\t\theight: a.height,\n\t\ttable: a.table.slice(0, right),\n\t\tlengths: a.lengths.slice(0, right)\n\t};\n\tif (sliced.table.length > 0)\n\t{\n\t\tnewA.table[right] = sliced;\n\t\tnewA.lengths[right] = length(sliced) + (right > 0 ? newA.lengths[right - 1] : 0);\n\t}\n\treturn newA;\n}\n\nfunction sliceLeft(from, a)\n{\n\tif (from === 0)\n\t{\n\t\treturn a;\n\t}\n\n\t// Handle leaf level.\n\tif (a.height === 0)\n\t{\n\t\tvar newA = { ctor:'_Array', height:0 };\n\t\tnewA.table = a.table.slice(from, a.table.length + 1);\n\t\treturn newA;\n\t}\n\n\t// Slice the left recursively.\n\tvar left = getSlot(from, a);\n\tvar sliced = sliceLeft(from - (left > 0 ? a.lengths[left - 1] : 0), a.table[left]);\n\n\t// Maybe the a node is not even needed, as sliced contains the whole slice.\n\tif (left === a.table.length - 1)\n\t{\n\t\treturn sliced;\n\t}\n\n\t// Create new node.\n\tvar newA = {\n\t\tctor: '_Array',\n\t\theight: a.height,\n\t\ttable: a.table.slice(left, a.table.length + 1),\n\t\tlengths: new Array(a.table.length - left)\n\t};\n\tnewA.table[0] = sliced;\n\tvar len = 0;\n\tfor (var i = 0; i < newA.table.length; i++)\n\t{\n\t\tlen += length(newA.table[i]);\n\t\tnewA.lengths[i] = len;\n\t}\n\n\treturn newA;\n}\n\n// Appends two trees.\nfunction append(a,b)\n{\n\tif (a.table.length === 0)\n\t{\n\t\treturn b;\n\t}\n\tif (b.table.length === 0)\n\t{\n\t\treturn a;\n\t}\n\n\tvar c = append_(a, b);\n\n\t// Check if both nodes can be crunshed together.\n\tif (c[0].table.length + c[1].table.length <= M)\n\t{\n\t\tif (c[0].table.length === 0)\n\t\t{\n\t\t\treturn c[1];\n\t\t}\n\t\tif (c[1].table.length === 0)\n\t\t{\n\t\t\treturn c[0];\n\t\t}\n\n\t\t// Adjust .table and .lengths\n\t\tc[0].table = c[0].table.concat(c[1].table);\n\t\tif (c[0].height > 0)\n\t\t{\n\t\t\tvar len = length(c[0]);\n\t\t\tfor (var i = 0; i < c[1].lengths.length; i++)\n\t\t\t{\n\t\t\t\tc[1].lengths[i] += len;\n\t\t\t}\n\t\t\tc[0].lengths = c[0].lengths.concat(c[1].lengths);\n\t\t}\n\n\t\treturn c[0];\n\t}\n\n\tif (c[0].height > 0)\n\t{\n\t\tvar toRemove = calcToRemove(a, b);\n\t\tif (toRemove > E)\n\t\t{\n\t\t\tc = shuffle(c[0], c[1], toRemove);\n\t\t}\n\t}\n\n\treturn siblise(c[0], c[1]);\n}\n\n// Returns an array of two nodes; right and left. One node _may_ be empty.\nfunction append_(a, b)\n{\n\tif (a.height === 0 && b.height === 0)\n\t{\n\t\treturn [a, b];\n\t}\n\n\tif (a.height !== 1 || b.height !== 1)\n\t{\n\t\tif (a.height === b.height)\n\t\t{\n\t\t\ta = nodeCopy(a);\n\t\t\tb = nodeCopy(b);\n\t\t\tvar appended = append_(botRight(a), botLeft(b));\n\n\t\t\tinsertRight(a, appended[1]);\n\t\t\tinsertLeft(b, appended[0]);\n\t\t}\n\t\telse if (a.height > b.height)\n\t\t{\n\t\t\ta = nodeCopy(a);\n\t\t\tvar appended = append_(botRight(a), b);\n\n\t\t\tinsertRight(a, appended[0]);\n\t\t\tb = parentise(appended[1], appended[1].height + 1);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tb = nodeCopy(b);\n\t\t\tvar appended = append_(a, botLeft(b));\n\n\t\t\tvar left = appended[0].table.length === 0 ? 0 : 1;\n\t\t\tvar right = left === 0 ? 1 : 0;\n\t\t\tinsertLeft(b, appended[left]);\n\t\t\ta = parentise(appended[right], appended[right].height + 1);\n\t\t}\n\t}\n\n\t// Check if balancing is needed and return based on that.\n\tif (a.table.length === 0 || b.table.length === 0)\n\t{\n\t\treturn [a, b];\n\t}\n\n\tvar toRemove = calcToRemove(a, b);\n\tif (toRemove <= E)\n\t{\n\t\treturn [a, b];\n\t}\n\treturn shuffle(a, b, toRemove);\n}\n\n// Helperfunctions for append_. Replaces a child node at the side of the parent.\nfunction insertRight(parent, node)\n{\n\tvar index = parent.table.length - 1;\n\tparent.table[index] = node;\n\tparent.lengths[index] = length(node);\n\tparent.lengths[index] += index > 0 ? parent.lengths[index - 1] : 0;\n}\n\nfunction insertLeft(parent, node)\n{\n\tif (node.table.length > 0)\n\t{\n\t\tparent.table[0] = node;\n\t\tparent.lengths[0] = length(node);\n\n\t\tvar len = length(parent.table[0]);\n\t\tfor (var i = 1; i < parent.lengths.length; i++)\n\t\t{\n\t\t\tlen += length(parent.table[i]);\n\t\t\tparent.lengths[i] = len;\n\t\t}\n\t}\n\telse\n\t{\n\t\tparent.table.shift();\n\t\tfor (var i = 1; i < parent.lengths.length; i++)\n\t\t{\n\t\t\tparent.lengths[i] = parent.lengths[i] - parent.lengths[0];\n\t\t}\n\t\tparent.lengths.shift();\n\t}\n}\n\n// Returns the extra search steps for E. Refer to the paper.\nfunction calcToRemove(a, b)\n{\n\tvar subLengths = 0;\n\tfor (var i = 0; i < a.table.length; i++)\n\t{\n\t\tsubLengths += a.table[i].table.length;\n\t}\n\tfor (var i = 0; i < b.table.length; i++)\n\t{\n\t\tsubLengths += b.table[i].table.length;\n\t}\n\n\tvar toRemove = a.table.length + b.table.length;\n\treturn toRemove - (Math.floor((subLengths - 1) / M) + 1);\n}\n\n// get2, set2 and saveSlot are helpers for accessing elements over two arrays.\nfunction get2(a, b, index)\n{\n\treturn index < a.length\n\t\t? a[index]\n\t\t: b[index - a.length];\n}\n\nfunction set2(a, b, index, value)\n{\n\tif (index < a.length)\n\t{\n\t\ta[index] = value;\n\t}\n\telse\n\t{\n\t\tb[index - a.length] = value;\n\t}\n}\n\nfunction saveSlot(a, b, index, slot)\n{\n\tset2(a.table, b.table, index, slot);\n\n\tvar l = (index === 0 || index === a.lengths.length)\n\t\t? 0\n\t\t: get2(a.lengths, a.lengths, index - 1);\n\n\tset2(a.lengths, b.lengths, index, l + length(slot));\n}\n\n// Creates a node or leaf with a given length at their arrays for perfomance.\n// Is only used by shuffle.\nfunction createNode(h, length)\n{\n\tif (length < 0)\n\t{\n\t\tlength = 0;\n\t}\n\tvar a = {\n\t\tctor: '_Array',\n\t\theight: h,\n\t\ttable: new Array(length)\n\t};\n\tif (h > 0)\n\t{\n\t\ta.lengths = new Array(length);\n\t}\n\treturn a;\n}\n\n// Returns an array of two balanced nodes.\nfunction shuffle(a, b, toRemove)\n{\n\tvar newA = createNode(a.height, Math.min(M, a.table.length + b.table.length - toRemove));\n\tvar newB = createNode(a.height, newA.table.length - (a.table.length + b.table.length - toRemove));\n\n\t// Skip the slots with size M. More precise: copy the slot references\n\t// to the new node\n\tvar read = 0;\n\twhile (get2(a.table, b.table, read).table.length % M === 0)\n\t{\n\t\tset2(newA.table, newB.table, read, get2(a.table, b.table, read));\n\t\tset2(newA.lengths, newB.lengths, read, get2(a.lengths, b.lengths, read));\n\t\tread++;\n\t}\n\n\t// Pulling items from left to right, caching in a slot before writing\n\t// it into the new nodes.\n\tvar write = read;\n\tvar slot = new createNode(a.height - 1, 0);\n\tvar from = 0;\n\n\t// If the current slot is still containing data, then there will be at\n\t// least one more write, so we do not break this loop yet.\n\twhile (read - write - (slot.table.length > 0 ? 1 : 0) < toRemove)\n\t{\n\t\t// Find out the max possible items for copying.\n\t\tvar source = get2(a.table, b.table, read);\n\t\tvar to = Math.min(M - slot.table.length, source.table.length);\n\n\t\t// Copy and adjust size table.\n\t\tslot.table = slot.table.concat(source.table.slice(from, to));\n\t\tif (slot.height > 0)\n\t\t{\n\t\t\tvar len = slot.lengths.length;\n\t\t\tfor (var i = len; i < len + to - from; i++)\n\t\t\t{\n\t\t\t\tslot.lengths[i] = length(slot.table[i]);\n\t\t\t\tslot.lengths[i] += (i > 0 ? slot.lengths[i - 1] : 0);\n\t\t\t}\n\t\t}\n\n\t\tfrom += to;\n\n\t\t// Only proceed to next slots[i] if the current one was\n\t\t// fully copied.\n\t\tif (source.table.length <= to)\n\t\t{\n\t\t\tread++; from = 0;\n\t\t}\n\n\t\t// Only create a new slot if the current one is filled up.\n\t\tif (slot.table.length === M)\n\t\t{\n\t\t\tsaveSlot(newA, newB, write, slot);\n\t\t\tslot = createNode(a.height - 1, 0);\n\t\t\twrite++;\n\t\t}\n\t}\n\n\t// Cleanup after the loop. Copy the last slot into the new nodes.\n\tif (slot.table.length > 0)\n\t{\n\t\tsaveSlot(newA, newB, write, slot);\n\t\twrite++;\n\t}\n\n\t// Shift the untouched slots to the left\n\twhile (read < a.table.length + b.table.length )\n\t{\n\t\tsaveSlot(newA, newB, write, get2(a.table, b.table, read));\n\t\tread++;\n\t\twrite++;\n\t}\n\n\treturn [newA, newB];\n}\n\n// Navigation functions\nfunction botRight(a)\n{\n\treturn a.table[a.table.length - 1];\n}\nfunction botLeft(a)\n{\n\treturn a.table[0];\n}\n\n// Copies a node for updating. Note that you should not use this if\n// only updating only one of \"table\" or \"lengths\" for performance reasons.\nfunction nodeCopy(a)\n{\n\tvar newA = {\n\t\tctor: '_Array',\n\t\theight: a.height,\n\t\ttable: a.table.slice()\n\t};\n\tif (a.height > 0)\n\t{\n\t\tnewA.lengths = a.lengths.slice();\n\t}\n\treturn newA;\n}\n\n// Returns how many items are in the tree.\nfunction length(array)\n{\n\tif (array.height === 0)\n\t{\n\t\treturn array.table.length;\n\t}\n\telse\n\t{\n\t\treturn array.lengths[array.lengths.length - 1];\n\t}\n}\n\n// Calculates in which slot of \"table\" the item probably is, then\n// find the exact slot via forward searching in  \"lengths\". Returns the index.\nfunction getSlot(i, a)\n{\n\tvar slot = i >> (5 * a.height);\n\twhile (a.lengths[slot] <= i)\n\t{\n\t\tslot++;\n\t}\n\treturn slot;\n}\n\n// Recursively creates a tree with a given height containing\n// only the given item.\nfunction create(item, h)\n{\n\tif (h === 0)\n\t{\n\t\treturn {\n\t\t\tctor: '_Array',\n\t\t\theight: 0,\n\t\t\ttable: [item]\n\t\t};\n\t}\n\treturn {\n\t\tctor: '_Array',\n\t\theight: h,\n\t\ttable: [create(item, h - 1)],\n\t\tlengths: [1]\n\t};\n}\n\n// Recursively creates a tree that contains the given tree.\nfunction parentise(tree, h)\n{\n\tif (h === tree.height)\n\t{\n\t\treturn tree;\n\t}\n\n\treturn {\n\t\tctor: '_Array',\n\t\theight: h,\n\t\ttable: [parentise(tree, h - 1)],\n\t\tlengths: [length(tree)]\n\t};\n}\n\n// Emphasizes blood brotherhood beneath two trees.\nfunction siblise(a, b)\n{\n\treturn {\n\t\tctor: '_Array',\n\t\theight: a.height + 1,\n\t\ttable: [a, b],\n\t\tlengths: [length(a), length(a) + length(b)]\n\t};\n}\n\nfunction toJSArray(a)\n{\n\tvar jsArray = new Array(length(a));\n\ttoJSArray_(jsArray, 0, a);\n\treturn jsArray;\n}\n\nfunction toJSArray_(jsArray, i, a)\n{\n\tfor (var t = 0; t < a.table.length; t++)\n\t{\n\t\tif (a.height === 0)\n\t\t{\n\t\t\tjsArray[i + t] = a.table[t];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar inc = t === 0 ? 0 : a.lengths[t - 1];\n\t\t\ttoJSArray_(jsArray, i + inc, a.table[t]);\n\t\t}\n\t}\n}\n\nfunction fromJSArray(jsArray)\n{\n\tif (jsArray.length === 0)\n\t{\n\t\treturn empty;\n\t}\n\tvar h = Math.floor(Math.log(jsArray.length) / Math.log(M));\n\treturn fromJSArray_(jsArray, h, 0, jsArray.length);\n}\n\nfunction fromJSArray_(jsArray, h, from, to)\n{\n\tif (h === 0)\n\t{\n\t\treturn {\n\t\t\tctor: '_Array',\n\t\t\theight: 0,\n\t\t\ttable: jsArray.slice(from, to)\n\t\t};\n\t}\n\n\tvar step = Math.pow(M, h);\n\tvar table = new Array(Math.ceil((to - from) / step));\n\tvar lengths = new Array(table.length);\n\tfor (var i = 0; i < table.length; i++)\n\t{\n\t\ttable[i] = fromJSArray_(jsArray, h - 1, from + (i * step), Math.min(from + ((i + 1) * step), to));\n\t\tlengths[i] = length(table[i]) + (i > 0 ? lengths[i - 1] : 0);\n\t}\n\treturn {\n\t\tctor: '_Array',\n\t\theight: h,\n\t\ttable: table,\n\t\tlengths: lengths\n\t};\n}\n\nreturn {\n\tempty: empty,\n\tfromList: fromList,\n\ttoList: toList,\n\tinitialize: F2(initialize),\n\tappend: F2(append),\n\tpush: F2(push),\n\tslice: F3(slice),\n\tget: F2(get),\n\tset: F3(set),\n\tmap: F2(map),\n\tindexedMap: F2(indexedMap),\n\tfoldl: F3(foldl),\n\tfoldr: F3(foldr),\n\tlength: length,\n\n\ttoJSArray: toJSArray,\n\tfromJSArray: fromJSArray\n};\n\n}();\nvar _elm_lang$core$Array$append = _elm_lang$core$Native_Array.append;\nvar _elm_lang$core$Array$length = _elm_lang$core$Native_Array.length;\nvar _elm_lang$core$Array$isEmpty = function (array) {\n\treturn _elm_lang$core$Native_Utils.eq(\n\t\t_elm_lang$core$Array$length(array),\n\t\t0);\n};\nvar _elm_lang$core$Array$slice = _elm_lang$core$Native_Array.slice;\nvar _elm_lang$core$Array$set = _elm_lang$core$Native_Array.set;\nvar _elm_lang$core$Array$get = F2(\n\tfunction (i, array) {\n\t\treturn ((_elm_lang$core$Native_Utils.cmp(0, i) < 1) && (_elm_lang$core$Native_Utils.cmp(\n\t\t\ti,\n\t\t\t_elm_lang$core$Native_Array.length(array)) < 0)) ? _elm_lang$core$Maybe$Just(\n\t\t\tA2(_elm_lang$core$Native_Array.get, i, array)) : _elm_lang$core$Maybe$Nothing;\n\t});\nvar _elm_lang$core$Array$push = _elm_lang$core$Native_Array.push;\nvar _elm_lang$core$Array$empty = _elm_lang$core$Native_Array.empty;\nvar _elm_lang$core$Array$filter = F2(\n\tfunction (isOkay, arr) {\n\t\tvar update = F2(\n\t\t\tfunction (x, xs) {\n\t\t\t\treturn isOkay(x) ? A2(_elm_lang$core$Native_Array.push, x, xs) : xs;\n\t\t\t});\n\t\treturn A3(_elm_lang$core$Native_Array.foldl, update, _elm_lang$core$Native_Array.empty, arr);\n\t});\nvar _elm_lang$core$Array$foldr = _elm_lang$core$Native_Array.foldr;\nvar _elm_lang$core$Array$foldl = _elm_lang$core$Native_Array.foldl;\nvar _elm_lang$core$Array$indexedMap = _elm_lang$core$Native_Array.indexedMap;\nvar _elm_lang$core$Array$map = _elm_lang$core$Native_Array.map;\nvar _elm_lang$core$Array$toIndexedList = function (array) {\n\treturn A3(\n\t\t_elm_lang$core$List$map2,\n\t\tF2(\n\t\t\tfunction (v0, v1) {\n\t\t\t\treturn {ctor: '_Tuple2', _0: v0, _1: v1};\n\t\t\t}),\n\t\tA2(\n\t\t\t_elm_lang$core$List$range,\n\t\t\t0,\n\t\t\t_elm_lang$core$Native_Array.length(array) - 1),\n\t\t_elm_lang$core$Native_Array.toList(array));\n};\nvar _elm_lang$core$Array$toList = _elm_lang$core$Native_Array.toList;\nvar _elm_lang$core$Array$fromList = _elm_lang$core$Native_Array.fromList;\nvar _elm_lang$core$Array$initialize = _elm_lang$core$Native_Array.initialize;\nvar _elm_lang$core$Array$repeat = F2(\n\tfunction (n, e) {\n\t\treturn A2(\n\t\t\t_elm_lang$core$Array$initialize,\n\t\t\tn,\n\t\t\t_elm_lang$core$Basics$always(e));\n\t});\nvar _elm_lang$core$Array$Array = {ctor: 'Array'};\n\n//import Maybe, Native.Array, Native.List, Native.Utils, Result //\n\nvar _elm_lang$core$Native_Json = function() {\n\n\n// CORE DECODERS\n\nfunction succeed(msg)\n{\n\treturn {\n\t\tctor: '<decoder>',\n\t\ttag: 'succeed',\n\t\tmsg: msg\n\t};\n}\n\nfunction fail(msg)\n{\n\treturn {\n\t\tctor: '<decoder>',\n\t\ttag: 'fail',\n\t\tmsg: msg\n\t};\n}\n\nfunction decodePrimitive(tag)\n{\n\treturn {\n\t\tctor: '<decoder>',\n\t\ttag: tag\n\t};\n}\n\nfunction decodeContainer(tag, decoder)\n{\n\treturn {\n\t\tctor: '<decoder>',\n\t\ttag: tag,\n\t\tdecoder: decoder\n\t};\n}\n\nfunction decodeNull(value)\n{\n\treturn {\n\t\tctor: '<decoder>',\n\t\ttag: 'null',\n\t\tvalue: value\n\t};\n}\n\nfunction decodeField(field, decoder)\n{\n\treturn {\n\t\tctor: '<decoder>',\n\t\ttag: 'field',\n\t\tfield: field,\n\t\tdecoder: decoder\n\t};\n}\n\nfunction decodeIndex(index, decoder)\n{\n\treturn {\n\t\tctor: '<decoder>',\n\t\ttag: 'index',\n\t\tindex: index,\n\t\tdecoder: decoder\n\t};\n}\n\nfunction decodeKeyValuePairs(decoder)\n{\n\treturn {\n\t\tctor: '<decoder>',\n\t\ttag: 'key-value',\n\t\tdecoder: decoder\n\t};\n}\n\nfunction mapMany(f, decoders)\n{\n\treturn {\n\t\tctor: '<decoder>',\n\t\ttag: 'map-many',\n\t\tfunc: f,\n\t\tdecoders: decoders\n\t};\n}\n\nfunction andThen(callback, decoder)\n{\n\treturn {\n\t\tctor: '<decoder>',\n\t\ttag: 'andThen',\n\t\tdecoder: decoder,\n\t\tcallback: callback\n\t};\n}\n\nfunction oneOf(decoders)\n{\n\treturn {\n\t\tctor: '<decoder>',\n\t\ttag: 'oneOf',\n\t\tdecoders: decoders\n\t};\n}\n\n\n// DECODING OBJECTS\n\nfunction map1(f, d1)\n{\n\treturn mapMany(f, [d1]);\n}\n\nfunction map2(f, d1, d2)\n{\n\treturn mapMany(f, [d1, d2]);\n}\n\nfunction map3(f, d1, d2, d3)\n{\n\treturn mapMany(f, [d1, d2, d3]);\n}\n\nfunction map4(f, d1, d2, d3, d4)\n{\n\treturn mapMany(f, [d1, d2, d3, d4]);\n}\n\nfunction map5(f, d1, d2, d3, d4, d5)\n{\n\treturn mapMany(f, [d1, d2, d3, d4, d5]);\n}\n\nfunction map6(f, d1, d2, d3, d4, d5, d6)\n{\n\treturn mapMany(f, [d1, d2, d3, d4, d5, d6]);\n}\n\nfunction map7(f, d1, d2, d3, d4, d5, d6, d7)\n{\n\treturn mapMany(f, [d1, d2, d3, d4, d5, d6, d7]);\n}\n\nfunction map8(f, d1, d2, d3, d4, d5, d6, d7, d8)\n{\n\treturn mapMany(f, [d1, d2, d3, d4, d5, d6, d7, d8]);\n}\n\n\n// DECODE HELPERS\n\nfunction ok(value)\n{\n\treturn { tag: 'ok', value: value };\n}\n\nfunction badPrimitive(type, value)\n{\n\treturn { tag: 'primitive', type: type, value: value };\n}\n\nfunction badIndex(index, nestedProblems)\n{\n\treturn { tag: 'index', index: index, rest: nestedProblems };\n}\n\nfunction badField(field, nestedProblems)\n{\n\treturn { tag: 'field', field: field, rest: nestedProblems };\n}\n\nfunction badIndex(index, nestedProblems)\n{\n\treturn { tag: 'index', index: index, rest: nestedProblems };\n}\n\nfunction badOneOf(problems)\n{\n\treturn { tag: 'oneOf', problems: problems };\n}\n\nfunction bad(msg)\n{\n\treturn { tag: 'fail', msg: msg };\n}\n\nfunction badToString(problem)\n{\n\tvar context = '_';\n\twhile (problem)\n\t{\n\t\tswitch (problem.tag)\n\t\t{\n\t\t\tcase 'primitive':\n\t\t\t\treturn 'Expecting ' + problem.type\n\t\t\t\t\t+ (context === '_' ? '' : ' at ' + context)\n\t\t\t\t\t+ ' but instead got: ' + jsToString(problem.value);\n\n\t\t\tcase 'index':\n\t\t\t\tcontext += '[' + problem.index + ']';\n\t\t\t\tproblem = problem.rest;\n\t\t\t\tbreak;\n\n\t\t\tcase 'field':\n\t\t\t\tcontext += '.' + problem.field;\n\t\t\t\tproblem = problem.rest;\n\t\t\t\tbreak;\n\n\t\t\tcase 'oneOf':\n\t\t\t\tvar problems = problem.problems;\n\t\t\t\tfor (var i = 0; i < problems.length; i++)\n\t\t\t\t{\n\t\t\t\t\tproblems[i] = badToString(problems[i]);\n\t\t\t\t}\n\t\t\t\treturn 'I ran into the following problems'\n\t\t\t\t\t+ (context === '_' ? '' : ' at ' + context)\n\t\t\t\t\t+ ':\\n\\n' + problems.join('\\n');\n\n\t\t\tcase 'fail':\n\t\t\t\treturn 'I ran into a `fail` decoder'\n\t\t\t\t\t+ (context === '_' ? '' : ' at ' + context)\n\t\t\t\t\t+ ': ' + problem.msg;\n\t\t}\n\t}\n}\n\nfunction jsToString(value)\n{\n\treturn value === undefined\n\t\t? 'undefined'\n\t\t: JSON.stringify(value);\n}\n\n\n// DECODE\n\nfunction runOnString(decoder, string)\n{\n\tvar json;\n\ttry\n\t{\n\t\tjson = JSON.parse(string);\n\t}\n\tcatch (e)\n\t{\n\t\treturn _elm_lang$core$Result$Err('Given an invalid JSON: ' + e.message);\n\t}\n\treturn run(decoder, json);\n}\n\nfunction run(decoder, value)\n{\n\tvar result = runHelp(decoder, value);\n\treturn (result.tag === 'ok')\n\t\t? _elm_lang$core$Result$Ok(result.value)\n\t\t: _elm_lang$core$Result$Err(badToString(result));\n}\n\nfunction runHelp(decoder, value)\n{\n\tswitch (decoder.tag)\n\t{\n\t\tcase 'bool':\n\t\t\treturn (typeof value === 'boolean')\n\t\t\t\t? ok(value)\n\t\t\t\t: badPrimitive('a Bool', value);\n\n\t\tcase 'int':\n\t\t\tif (typeof value !== 'number') {\n\t\t\t\treturn badPrimitive('an Int', value);\n\t\t\t}\n\n\t\t\tif (-2147483647 < value && value < 2147483647 && (value | 0) === value) {\n\t\t\t\treturn ok(value);\n\t\t\t}\n\n\t\t\tif (isFinite(value) && !(value % 1)) {\n\t\t\t\treturn ok(value);\n\t\t\t}\n\n\t\t\treturn badPrimitive('an Int', value);\n\n\t\tcase 'float':\n\t\t\treturn (typeof value === 'number')\n\t\t\t\t? ok(value)\n\t\t\t\t: badPrimitive('a Float', value);\n\n\t\tcase 'string':\n\t\t\treturn (typeof value === 'string')\n\t\t\t\t? ok(value)\n\t\t\t\t: (value instanceof String)\n\t\t\t\t\t? ok(value + '')\n\t\t\t\t\t: badPrimitive('a String', value);\n\n\t\tcase 'null':\n\t\t\treturn (value === null)\n\t\t\t\t? ok(decoder.value)\n\t\t\t\t: badPrimitive('null', value);\n\n\t\tcase 'value':\n\t\t\treturn ok(value);\n\n\t\tcase 'list':\n\t\t\tif (!(value instanceof Array))\n\t\t\t{\n\t\t\t\treturn badPrimitive('a List', value);\n\t\t\t}\n\n\t\t\tvar list = _elm_lang$core$Native_List.Nil;\n\t\t\tfor (var i = value.length; i--; )\n\t\t\t{\n\t\t\t\tvar result = runHelp(decoder.decoder, value[i]);\n\t\t\t\tif (result.tag !== 'ok')\n\t\t\t\t{\n\t\t\t\t\treturn badIndex(i, result)\n\t\t\t\t}\n\t\t\t\tlist = _elm_lang$core$Native_List.Cons(result.value, list);\n\t\t\t}\n\t\t\treturn ok(list);\n\n\t\tcase 'array':\n\t\t\tif (!(value instanceof Array))\n\t\t\t{\n\t\t\t\treturn badPrimitive('an Array', value);\n\t\t\t}\n\n\t\t\tvar len = value.length;\n\t\t\tvar array = new Array(len);\n\t\t\tfor (var i = len; i--; )\n\t\t\t{\n\t\t\t\tvar result = runHelp(decoder.decoder, value[i]);\n\t\t\t\tif (result.tag !== 'ok')\n\t\t\t\t{\n\t\t\t\t\treturn badIndex(i, result);\n\t\t\t\t}\n\t\t\t\tarray[i] = result.value;\n\t\t\t}\n\t\t\treturn ok(_elm_lang$core$Native_Array.fromJSArray(array));\n\n\t\tcase 'maybe':\n\t\t\tvar result = runHelp(decoder.decoder, value);\n\t\t\treturn (result.tag === 'ok')\n\t\t\t\t? ok(_elm_lang$core$Maybe$Just(result.value))\n\t\t\t\t: ok(_elm_lang$core$Maybe$Nothing);\n\n\t\tcase 'field':\n\t\t\tvar field = decoder.field;\n\t\t\tif (typeof value !== 'object' || value === null || !(field in value))\n\t\t\t{\n\t\t\t\treturn badPrimitive('an object with a field named `' + field + '`', value);\n\t\t\t}\n\n\t\t\tvar result = runHelp(decoder.decoder, value[field]);\n\t\t\treturn (result.tag === 'ok') ? result : badField(field, result);\n\n\t\tcase 'index':\n\t\t\tvar index = decoder.index;\n\t\t\tif (!(value instanceof Array))\n\t\t\t{\n\t\t\t\treturn badPrimitive('an array', value);\n\t\t\t}\n\t\t\tif (index >= value.length)\n\t\t\t{\n\t\t\t\treturn badPrimitive('a longer array. Need index ' + index + ' but there are only ' + value.length + ' entries', value);\n\t\t\t}\n\n\t\t\tvar result = runHelp(decoder.decoder, value[index]);\n\t\t\treturn (result.tag === 'ok') ? result : badIndex(index, result);\n\n\t\tcase 'key-value':\n\t\t\tif (typeof value !== 'object' || value === null || value instanceof Array)\n\t\t\t{\n\t\t\t\treturn badPrimitive('an object', value);\n\t\t\t}\n\n\t\t\tvar keyValuePairs = _elm_lang$core$Native_List.Nil;\n\t\t\tfor (var key in value)\n\t\t\t{\n\t\t\t\tvar result = runHelp(decoder.decoder, value[key]);\n\t\t\t\tif (result.tag !== 'ok')\n\t\t\t\t{\n\t\t\t\t\treturn badField(key, result);\n\t\t\t\t}\n\t\t\t\tvar pair = _elm_lang$core$Native_Utils.Tuple2(key, result.value);\n\t\t\t\tkeyValuePairs = _elm_lang$core$Native_List.Cons(pair, keyValuePairs);\n\t\t\t}\n\t\t\treturn ok(keyValuePairs);\n\n\t\tcase 'map-many':\n\t\t\tvar answer = decoder.func;\n\t\t\tvar decoders = decoder.decoders;\n\t\t\tfor (var i = 0; i < decoders.length; i++)\n\t\t\t{\n\t\t\t\tvar result = runHelp(decoders[i], value);\n\t\t\t\tif (result.tag !== 'ok')\n\t\t\t\t{\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t\tanswer = answer(result.value);\n\t\t\t}\n\t\t\treturn ok(answer);\n\n\t\tcase 'andThen':\n\t\t\tvar result = runHelp(decoder.decoder, value);\n\t\t\treturn (result.tag !== 'ok')\n\t\t\t\t? result\n\t\t\t\t: runHelp(decoder.callback(result.value), value);\n\n\t\tcase 'oneOf':\n\t\t\tvar errors = [];\n\t\t\tvar temp = decoder.decoders;\n\t\t\twhile (temp.ctor !== '[]')\n\t\t\t{\n\t\t\t\tvar result = runHelp(temp._0, value);\n\n\t\t\t\tif (result.tag === 'ok')\n\t\t\t\t{\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\terrors.push(result);\n\n\t\t\t\ttemp = temp._1;\n\t\t\t}\n\t\t\treturn badOneOf(errors);\n\n\t\tcase 'fail':\n\t\t\treturn bad(decoder.msg);\n\n\t\tcase 'succeed':\n\t\t\treturn ok(decoder.msg);\n\t}\n}\n\n\n// EQUALITY\n\nfunction equality(a, b)\n{\n\tif (a === b)\n\t{\n\t\treturn true;\n\t}\n\n\tif (a.tag !== b.tag)\n\t{\n\t\treturn false;\n\t}\n\n\tswitch (a.tag)\n\t{\n\t\tcase 'succeed':\n\t\tcase 'fail':\n\t\t\treturn a.msg === b.msg;\n\n\t\tcase 'bool':\n\t\tcase 'int':\n\t\tcase 'float':\n\t\tcase 'string':\n\t\tcase 'value':\n\t\t\treturn true;\n\n\t\tcase 'null':\n\t\t\treturn a.value === b.value;\n\n\t\tcase 'list':\n\t\tcase 'array':\n\t\tcase 'maybe':\n\t\tcase 'key-value':\n\t\t\treturn equality(a.decoder, b.decoder);\n\n\t\tcase 'field':\n\t\t\treturn a.field === b.field && equality(a.decoder, b.decoder);\n\n\t\tcase 'index':\n\t\t\treturn a.index === b.index && equality(a.decoder, b.decoder);\n\n\t\tcase 'map-many':\n\t\t\tif (a.func !== b.func)\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn listEquality(a.decoders, b.decoders);\n\n\t\tcase 'andThen':\n\t\t\treturn a.callback === b.callback && equality(a.decoder, b.decoder);\n\n\t\tcase 'oneOf':\n\t\t\treturn listEquality(a.decoders, b.decoders);\n\t}\n}\n\nfunction listEquality(aDecoders, bDecoders)\n{\n\tvar len = aDecoders.length;\n\tif (len !== bDecoders.length)\n\t{\n\t\treturn false;\n\t}\n\tfor (var i = 0; i < len; i++)\n\t{\n\t\tif (!equality(aDecoders[i], bDecoders[i]))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n\n// ENCODE\n\nfunction encode(indentLevel, value)\n{\n\treturn JSON.stringify(value, null, indentLevel);\n}\n\nfunction identity(value)\n{\n\treturn value;\n}\n\nfunction encodeObject(keyValuePairs)\n{\n\tvar obj = {};\n\twhile (keyValuePairs.ctor !== '[]')\n\t{\n\t\tvar pair = keyValuePairs._0;\n\t\tobj[pair._0] = pair._1;\n\t\tkeyValuePairs = keyValuePairs._1;\n\t}\n\treturn obj;\n}\n\nreturn {\n\tencode: F2(encode),\n\trunOnString: F2(runOnString),\n\trun: F2(run),\n\n\tdecodeNull: decodeNull,\n\tdecodePrimitive: decodePrimitive,\n\tdecodeContainer: F2(decodeContainer),\n\n\tdecodeField: F2(decodeField),\n\tdecodeIndex: F2(decodeIndex),\n\n\tmap1: F2(map1),\n\tmap2: F3(map2),\n\tmap3: F4(map3),\n\tmap4: F5(map4),\n\tmap5: F6(map5),\n\tmap6: F7(map6),\n\tmap7: F8(map7),\n\tmap8: F9(map8),\n\tdecodeKeyValuePairs: decodeKeyValuePairs,\n\n\tandThen: F2(andThen),\n\tfail: fail,\n\tsucceed: succeed,\n\toneOf: oneOf,\n\n\tidentity: identity,\n\tencodeNull: null,\n\tencodeArray: _elm_lang$core$Native_Array.toJSArray,\n\tencodeList: _elm_lang$core$Native_List.toArray,\n\tencodeObject: encodeObject,\n\n\tequality: equality\n};\n\n}();\n\nvar _elm_lang$core$Json_Encode$list = _elm_lang$core$Native_Json.encodeList;\nvar _elm_lang$core$Json_Encode$array = _elm_lang$core$Native_Json.encodeArray;\nvar _elm_lang$core$Json_Encode$object = _elm_lang$core$Native_Json.encodeObject;\nvar _elm_lang$core$Json_Encode$null = _elm_lang$core$Native_Json.encodeNull;\nvar _elm_lang$core$Json_Encode$bool = _elm_lang$core$Native_Json.identity;\nvar _elm_lang$core$Json_Encode$float = _elm_lang$core$Native_Json.identity;\nvar _elm_lang$core$Json_Encode$int = _elm_lang$core$Native_Json.identity;\nvar _elm_lang$core$Json_Encode$string = _elm_lang$core$Native_Json.identity;\nvar _elm_lang$core$Json_Encode$encode = _elm_lang$core$Native_Json.encode;\nvar _elm_lang$core$Json_Encode$Value = {ctor: 'Value'};\n\nvar _elm_lang$core$Json_Decode$null = _elm_lang$core$Native_Json.decodeNull;\nvar _elm_lang$core$Json_Decode$value = _elm_lang$core$Native_Json.decodePrimitive('value');\nvar _elm_lang$core$Json_Decode$andThen = _elm_lang$core$Native_Json.andThen;\nvar _elm_lang$core$Json_Decode$fail = _elm_lang$core$Native_Json.fail;\nvar _elm_lang$core$Json_Decode$succeed = _elm_lang$core$Native_Json.succeed;\nvar _elm_lang$core$Json_Decode$lazy = function (thunk) {\n\treturn A2(\n\t\t_elm_lang$core$Json_Decode$andThen,\n\t\tthunk,\n\t\t_elm_lang$core$Json_Decode$succeed(\n\t\t\t{ctor: '_Tuple0'}));\n};\nvar _elm_lang$core$Json_Decode$decodeValue = _elm_lang$core$Native_Json.run;\nvar _elm_lang$core$Json_Decode$decodeString = _elm_lang$core$Native_Json.runOnString;\nvar _elm_lang$core$Json_Decode$map8 = _elm_lang$core$Native_Json.map8;\nvar _elm_lang$core$Json_Decode$map7 = _elm_lang$core$Native_Json.map7;\nvar _elm_lang$core$Json_Decode$map6 = _elm_lang$core$Native_Json.map6;\nvar _elm_lang$core$Json_Decode$map5 = _elm_lang$core$Native_Json.map5;\nvar _elm_lang$core$Json_Decode$map4 = _elm_lang$core$Native_Json.map4;\nvar _elm_lang$core$Json_Decode$map3 = _elm_lang$core$Native_Json.map3;\nvar _elm_lang$core$Json_Decode$map2 = _elm_lang$core$Native_Json.map2;\nvar _elm_lang$core$Json_Decode$map = _elm_lang$core$Native_Json.map1;\nvar _elm_lang$core$Json_Decode$oneOf = _elm_lang$core$Native_Json.oneOf;\nvar _elm_lang$core$Json_Decode$maybe = function (decoder) {\n\treturn A2(_elm_lang$core$Native_Json.decodeContainer, 'maybe', decoder);\n};\nvar _elm_lang$core$Json_Decode$index = _elm_lang$core$Native_Json.decodeIndex;\nvar _elm_lang$core$Json_Decode$field = _elm_lang$core$Native_Json.decodeField;\nvar _elm_lang$core$Json_Decode$at = F2(\n\tfunction (fields, decoder) {\n\t\treturn A3(_elm_lang$core$List$foldr, _elm_lang$core$Json_Decode$field, decoder, fields);\n\t});\nvar _elm_lang$core$Json_Decode$keyValuePairs = _elm_lang$core$Native_Json.decodeKeyValuePairs;\nvar _elm_lang$core$Json_Decode$dict = function (decoder) {\n\treturn A2(\n\t\t_elm_lang$core$Json_Decode$map,\n\t\t_elm_lang$core$Dict$fromList,\n\t\t_elm_lang$core$Json_Decode$keyValuePairs(decoder));\n};\nvar _elm_lang$core$Json_Decode$array = function (decoder) {\n\treturn A2(_elm_lang$core$Native_Json.decodeContainer, 'array', decoder);\n};\nvar _elm_lang$core$Json_Decode$list = function (decoder) {\n\treturn A2(_elm_lang$core$Native_Json.decodeContainer, 'list', decoder);\n};\nvar _elm_lang$core$Json_Decode$nullable = function (decoder) {\n\treturn _elm_lang$core$Json_Decode$oneOf(\n\t\t{\n\t\t\tctor: '::',\n\t\t\t_0: _elm_lang$core$Json_Decode$null(_elm_lang$core$Maybe$Nothing),\n\t\t\t_1: {\n\t\t\t\tctor: '::',\n\t\t\t\t_0: A2(_elm_lang$core$Json_Decode$map, _elm_lang$core$Maybe$Just, decoder),\n\t\t\t\t_1: {ctor: '[]'}\n\t\t\t}\n\t\t});\n};\nvar _elm_lang$core$Json_Decode$float = _elm_lang$core$Native_Json.decodePrimitive('float');\nvar _elm_lang$core$Json_Decode$int = _elm_lang$core$Native_Json.decodePrimitive('int');\nvar _elm_lang$core$Json_Decode$bool = _elm_lang$core$Native_Json.decodePrimitive('bool');\nvar _elm_lang$core$Json_Decode$string = _elm_lang$core$Native_Json.decodePrimitive('string');\nvar _elm_lang$core$Json_Decode$Decoder = {ctor: 'Decoder'};\n\nvar _elm_lang$virtual_dom$VirtualDom_Debug$wrap;\nvar _elm_lang$virtual_dom$VirtualDom_Debug$wrapWithFlags;\n\nvar _elm_lang$virtual_dom$Native_VirtualDom = function() {\n\nvar STYLE_KEY = 'STYLE';\nvar EVENT_KEY = 'EVENT';\nvar ATTR_KEY = 'ATTR';\nvar ATTR_NS_KEY = 'ATTR_NS';\n\nvar localDoc = typeof document !== 'undefined' ? document : {};\n\n\n////////////  VIRTUAL DOM NODES  ////////////\n\n\nfunction text(string)\n{\n\treturn {\n\t\ttype: 'text',\n\t\ttext: string\n\t};\n}\n\n\nfunction node(tag)\n{\n\treturn F2(function(factList, kidList) {\n\t\treturn nodeHelp(tag, factList, kidList);\n\t});\n}\n\n\nfunction nodeHelp(tag, factList, kidList)\n{\n\tvar organized = organizeFacts(factList);\n\tvar namespace = organized.namespace;\n\tvar facts = organized.facts;\n\n\tvar children = [];\n\tvar descendantsCount = 0;\n\twhile (kidList.ctor !== '[]')\n\t{\n\t\tvar kid = kidList._0;\n\t\tdescendantsCount += (kid.descendantsCount || 0);\n\t\tchildren.push(kid);\n\t\tkidList = kidList._1;\n\t}\n\tdescendantsCount += children.length;\n\n\treturn {\n\t\ttype: 'node',\n\t\ttag: tag,\n\t\tfacts: facts,\n\t\tchildren: children,\n\t\tnamespace: namespace,\n\t\tdescendantsCount: descendantsCount\n\t};\n}\n\n\nfunction keyedNode(tag, factList, kidList)\n{\n\tvar organized = organizeFacts(factList);\n\tvar namespace = organized.namespace;\n\tvar facts = organized.facts;\n\n\tvar children = [];\n\tvar descendantsCount = 0;\n\twhile (kidList.ctor !== '[]')\n\t{\n\t\tvar kid = kidList._0;\n\t\tdescendantsCount += (kid._1.descendantsCount || 0);\n\t\tchildren.push(kid);\n\t\tkidList = kidList._1;\n\t}\n\tdescendantsCount += children.length;\n\n\treturn {\n\t\ttype: 'keyed-node',\n\t\ttag: tag,\n\t\tfacts: facts,\n\t\tchildren: children,\n\t\tnamespace: namespace,\n\t\tdescendantsCount: descendantsCount\n\t};\n}\n\n\nfunction custom(factList, model, impl)\n{\n\tvar facts = organizeFacts(factList).facts;\n\n\treturn {\n\t\ttype: 'custom',\n\t\tfacts: facts,\n\t\tmodel: model,\n\t\timpl: impl\n\t};\n}\n\n\nfunction map(tagger, node)\n{\n\treturn {\n\t\ttype: 'tagger',\n\t\ttagger: tagger,\n\t\tnode: node,\n\t\tdescendantsCount: 1 + (node.descendantsCount || 0)\n\t};\n}\n\n\nfunction thunk(func, args, thunk)\n{\n\treturn {\n\t\ttype: 'thunk',\n\t\tfunc: func,\n\t\targs: args,\n\t\tthunk: thunk,\n\t\tnode: undefined\n\t};\n}\n\nfunction lazy(fn, a)\n{\n\treturn thunk(fn, [a], function() {\n\t\treturn fn(a);\n\t});\n}\n\nfunction lazy2(fn, a, b)\n{\n\treturn thunk(fn, [a,b], function() {\n\t\treturn A2(fn, a, b);\n\t});\n}\n\nfunction lazy3(fn, a, b, c)\n{\n\treturn thunk(fn, [a,b,c], function() {\n\t\treturn A3(fn, a, b, c);\n\t});\n}\n\n\n\n// FACTS\n\n\nfunction organizeFacts(factList)\n{\n\tvar namespace, facts = {};\n\n\twhile (factList.ctor !== '[]')\n\t{\n\t\tvar entry = factList._0;\n\t\tvar key = entry.key;\n\n\t\tif (key === ATTR_KEY || key === ATTR_NS_KEY || key === EVENT_KEY)\n\t\t{\n\t\t\tvar subFacts = facts[key] || {};\n\t\t\tsubFacts[entry.realKey] = entry.value;\n\t\t\tfacts[key] = subFacts;\n\t\t}\n\t\telse if (key === STYLE_KEY)\n\t\t{\n\t\t\tvar styles = facts[key] || {};\n\t\t\tvar styleList = entry.value;\n\t\t\twhile (styleList.ctor !== '[]')\n\t\t\t{\n\t\t\t\tvar style = styleList._0;\n\t\t\t\tstyles[style._0] = style._1;\n\t\t\t\tstyleList = styleList._1;\n\t\t\t}\n\t\t\tfacts[key] = styles;\n\t\t}\n\t\telse if (key === 'namespace')\n\t\t{\n\t\t\tnamespace = entry.value;\n\t\t}\n\t\telse if (key === 'className')\n\t\t{\n\t\t\tvar classes = facts[key];\n\t\t\tfacts[key] = typeof classes === 'undefined'\n\t\t\t\t? entry.value\n\t\t\t\t: classes + ' ' + entry.value;\n\t\t}\n \t\telse\n\t\t{\n\t\t\tfacts[key] = entry.value;\n\t\t}\n\t\tfactList = factList._1;\n\t}\n\n\treturn {\n\t\tfacts: facts,\n\t\tnamespace: namespace\n\t};\n}\n\n\n\n////////////  PROPERTIES AND ATTRIBUTES  ////////////\n\n\nfunction style(value)\n{\n\treturn {\n\t\tkey: STYLE_KEY,\n\t\tvalue: value\n\t};\n}\n\n\nfunction property(key, value)\n{\n\treturn {\n\t\tkey: key,\n\t\tvalue: value\n\t};\n}\n\n\nfunction attribute(key, value)\n{\n\treturn {\n\t\tkey: ATTR_KEY,\n\t\trealKey: key,\n\t\tvalue: value\n\t};\n}\n\n\nfunction attributeNS(namespace, key, value)\n{\n\treturn {\n\t\tkey: ATTR_NS_KEY,\n\t\trealKey: key,\n\t\tvalue: {\n\t\t\tvalue: value,\n\t\t\tnamespace: namespace\n\t\t}\n\t};\n}\n\n\nfunction on(name, options, decoder)\n{\n\treturn {\n\t\tkey: EVENT_KEY,\n\t\trealKey: name,\n\t\tvalue: {\n\t\t\toptions: options,\n\t\t\tdecoder: decoder\n\t\t}\n\t};\n}\n\n\nfunction equalEvents(a, b)\n{\n\tif (a.options !== b.options)\n\t{\n\t\tif (a.options.stopPropagation !== b.options.stopPropagation || a.options.preventDefault !== b.options.preventDefault)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn _elm_lang$core$Native_Json.equality(a.decoder, b.decoder);\n}\n\n\nfunction mapProperty(func, property)\n{\n\tif (property.key !== EVENT_KEY)\n\t{\n\t\treturn property;\n\t}\n\treturn on(\n\t\tproperty.realKey,\n\t\tproperty.value.options,\n\t\tA2(_elm_lang$core$Json_Decode$map, func, property.value.decoder)\n\t);\n}\n\n\n////////////  RENDER  ////////////\n\n\nfunction render(vNode, eventNode)\n{\n\tswitch (vNode.type)\n\t{\n\t\tcase 'thunk':\n\t\t\tif (!vNode.node)\n\t\t\t{\n\t\t\t\tvNode.node = vNode.thunk();\n\t\t\t}\n\t\t\treturn render(vNode.node, eventNode);\n\n\t\tcase 'tagger':\n\t\t\tvar subNode = vNode.node;\n\t\t\tvar tagger = vNode.tagger;\n\n\t\t\twhile (subNode.type === 'tagger')\n\t\t\t{\n\t\t\t\ttypeof tagger !== 'object'\n\t\t\t\t\t? tagger = [tagger, subNode.tagger]\n\t\t\t\t\t: tagger.push(subNode.tagger);\n\n\t\t\t\tsubNode = subNode.node;\n\t\t\t}\n\n\t\t\tvar subEventRoot = { tagger: tagger, parent: eventNode };\n\t\t\tvar domNode = render(subNode, subEventRoot);\n\t\t\tdomNode.elm_event_node_ref = subEventRoot;\n\t\t\treturn domNode;\n\n\t\tcase 'text':\n\t\t\treturn localDoc.createTextNode(vNode.text);\n\n\t\tcase 'node':\n\t\t\tvar domNode = vNode.namespace\n\t\t\t\t? localDoc.createElementNS(vNode.namespace, vNode.tag)\n\t\t\t\t: localDoc.createElement(vNode.tag);\n\n\t\t\tapplyFacts(domNode, eventNode, vNode.facts);\n\n\t\t\tvar children = vNode.children;\n\n\t\t\tfor (var i = 0; i < children.length; i++)\n\t\t\t{\n\t\t\t\tdomNode.appendChild(render(children[i], eventNode));\n\t\t\t}\n\n\t\t\treturn domNode;\n\n\t\tcase 'keyed-node':\n\t\t\tvar domNode = vNode.namespace\n\t\t\t\t? localDoc.createElementNS(vNode.namespace, vNode.tag)\n\t\t\t\t: localDoc.createElement(vNode.tag);\n\n\t\t\tapplyFacts(domNode, eventNode, vNode.facts);\n\n\t\t\tvar children = vNode.children;\n\n\t\t\tfor (var i = 0; i < children.length; i++)\n\t\t\t{\n\t\t\t\tdomNode.appendChild(render(children[i]._1, eventNode));\n\t\t\t}\n\n\t\t\treturn domNode;\n\n\t\tcase 'custom':\n\t\t\tvar domNode = vNode.impl.render(vNode.model);\n\t\t\tapplyFacts(domNode, eventNode, vNode.facts);\n\t\t\treturn domNode;\n\t}\n}\n\n\n\n////////////  APPLY FACTS  ////////////\n\n\nfunction applyFacts(domNode, eventNode, facts)\n{\n\tfor (var key in facts)\n\t{\n\t\tvar value = facts[key];\n\n\t\tswitch (key)\n\t\t{\n\t\t\tcase STYLE_KEY:\n\t\t\t\tapplyStyles(domNode, value);\n\t\t\t\tbreak;\n\n\t\t\tcase EVENT_KEY:\n\t\t\t\tapplyEvents(domNode, eventNode, value);\n\t\t\t\tbreak;\n\n\t\t\tcase ATTR_KEY:\n\t\t\t\tapplyAttrs(domNode, value);\n\t\t\t\tbreak;\n\n\t\t\tcase ATTR_NS_KEY:\n\t\t\t\tapplyAttrsNS(domNode, value);\n\t\t\t\tbreak;\n\n\t\t\tcase 'value':\n\t\t\t\tif (domNode[key] !== value)\n\t\t\t\t{\n\t\t\t\t\tdomNode[key] = value;\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tdomNode[key] = value;\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n\nfunction applyStyles(domNode, styles)\n{\n\tvar domNodeStyle = domNode.style;\n\n\tfor (var key in styles)\n\t{\n\t\tdomNodeStyle[key] = styles[key];\n\t}\n}\n\nfunction applyEvents(domNode, eventNode, events)\n{\n\tvar allHandlers = domNode.elm_handlers || {};\n\n\tfor (var key in events)\n\t{\n\t\tvar handler = allHandlers[key];\n\t\tvar value = events[key];\n\n\t\tif (typeof value === 'undefined')\n\t\t{\n\t\t\tdomNode.removeEventListener(key, handler);\n\t\t\tallHandlers[key] = undefined;\n\t\t}\n\t\telse if (typeof handler === 'undefined')\n\t\t{\n\t\t\tvar handler = makeEventHandler(eventNode, value);\n\t\t\tdomNode.addEventListener(key, handler);\n\t\t\tallHandlers[key] = handler;\n\t\t}\n\t\telse\n\t\t{\n\t\t\thandler.info = value;\n\t\t}\n\t}\n\n\tdomNode.elm_handlers = allHandlers;\n}\n\nfunction makeEventHandler(eventNode, info)\n{\n\tfunction eventHandler(event)\n\t{\n\t\tvar info = eventHandler.info;\n\n\t\tvar value = A2(_elm_lang$core$Native_Json.run, info.decoder, event);\n\n\t\tif (value.ctor === 'Ok')\n\t\t{\n\t\t\tvar options = info.options;\n\t\t\tif (options.stopPropagation)\n\t\t\t{\n\t\t\t\tevent.stopPropagation();\n\t\t\t}\n\t\t\tif (options.preventDefault)\n\t\t\t{\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\n\t\t\tvar message = value._0;\n\n\t\t\tvar currentEventNode = eventNode;\n\t\t\twhile (currentEventNode)\n\t\t\t{\n\t\t\t\tvar tagger = currentEventNode.tagger;\n\t\t\t\tif (typeof tagger === 'function')\n\t\t\t\t{\n\t\t\t\t\tmessage = tagger(message);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tfor (var i = tagger.length; i--; )\n\t\t\t\t\t{\n\t\t\t\t\t\tmessage = tagger[i](message);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcurrentEventNode = currentEventNode.parent;\n\t\t\t}\n\t\t}\n\t};\n\n\teventHandler.info = info;\n\n\treturn eventHandler;\n}\n\nfunction applyAttrs(domNode, attrs)\n{\n\tfor (var key in attrs)\n\t{\n\t\tvar value = attrs[key];\n\t\tif (typeof value === 'undefined')\n\t\t{\n\t\t\tdomNode.removeAttribute(key);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdomNode.setAttribute(key, value);\n\t\t}\n\t}\n}\n\nfunction applyAttrsNS(domNode, nsAttrs)\n{\n\tfor (var key in nsAttrs)\n\t{\n\t\tvar pair = nsAttrs[key];\n\t\tvar namespace = pair.namespace;\n\t\tvar value = pair.value;\n\n\t\tif (typeof value === 'undefined')\n\t\t{\n\t\t\tdomNode.removeAttributeNS(namespace, key);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdomNode.setAttributeNS(namespace, key, value);\n\t\t}\n\t}\n}\n\n\n\n////////////  DIFF  ////////////\n\n\nfunction diff(a, b)\n{\n\tvar patches = [];\n\tdiffHelp(a, b, patches, 0);\n\treturn patches;\n}\n\n\nfunction makePatch(type, index, data)\n{\n\treturn {\n\t\tindex: index,\n\t\ttype: type,\n\t\tdata: data,\n\t\tdomNode: undefined,\n\t\teventNode: undefined\n\t};\n}\n\n\nfunction diffHelp(a, b, patches, index)\n{\n\tif (a === b)\n\t{\n\t\treturn;\n\t}\n\n\tvar aType = a.type;\n\tvar bType = b.type;\n\n\t// Bail if you run into different types of nodes. Implies that the\n\t// structure has changed significantly and it's not worth a diff.\n\tif (aType !== bType)\n\t{\n\t\tpatches.push(makePatch('p-redraw', index, b));\n\t\treturn;\n\t}\n\n\t// Now we know that both nodes are the same type.\n\tswitch (bType)\n\t{\n\t\tcase 'thunk':\n\t\t\tvar aArgs = a.args;\n\t\t\tvar bArgs = b.args;\n\t\t\tvar i = aArgs.length;\n\t\t\tvar same = a.func === b.func && i === bArgs.length;\n\t\t\twhile (same && i--)\n\t\t\t{\n\t\t\t\tsame = aArgs[i] === bArgs[i];\n\t\t\t}\n\t\t\tif (same)\n\t\t\t{\n\t\t\t\tb.node = a.node;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tb.node = b.thunk();\n\t\t\tvar subPatches = [];\n\t\t\tdiffHelp(a.node, b.node, subPatches, 0);\n\t\t\tif (subPatches.length > 0)\n\t\t\t{\n\t\t\t\tpatches.push(makePatch('p-thunk', index, subPatches));\n\t\t\t}\n\t\t\treturn;\n\n\t\tcase 'tagger':\n\t\t\t// gather nested taggers\n\t\t\tvar aTaggers = a.tagger;\n\t\t\tvar bTaggers = b.tagger;\n\t\t\tvar nesting = false;\n\n\t\t\tvar aSubNode = a.node;\n\t\t\twhile (aSubNode.type === 'tagger')\n\t\t\t{\n\t\t\t\tnesting = true;\n\n\t\t\t\ttypeof aTaggers !== 'object'\n\t\t\t\t\t? aTaggers = [aTaggers, aSubNode.tagger]\n\t\t\t\t\t: aTaggers.push(aSubNode.tagger);\n\n\t\t\t\taSubNode = aSubNode.node;\n\t\t\t}\n\n\t\t\tvar bSubNode = b.node;\n\t\t\twhile (bSubNode.type === 'tagger')\n\t\t\t{\n\t\t\t\tnesting = true;\n\n\t\t\t\ttypeof bTaggers !== 'object'\n\t\t\t\t\t? bTaggers = [bTaggers, bSubNode.tagger]\n\t\t\t\t\t: bTaggers.push(bSubNode.tagger);\n\n\t\t\t\tbSubNode = bSubNode.node;\n\t\t\t}\n\n\t\t\t// Just bail if different numbers of taggers. This implies the\n\t\t\t// structure of the virtual DOM has changed.\n\t\t\tif (nesting && aTaggers.length !== bTaggers.length)\n\t\t\t{\n\t\t\t\tpatches.push(makePatch('p-redraw', index, b));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// check if taggers are \"the same\"\n\t\t\tif (nesting ? !pairwiseRefEqual(aTaggers, bTaggers) : aTaggers !== bTaggers)\n\t\t\t{\n\t\t\t\tpatches.push(makePatch('p-tagger', index, bTaggers));\n\t\t\t}\n\n\t\t\t// diff everything below the taggers\n\t\t\tdiffHelp(aSubNode, bSubNode, patches, index + 1);\n\t\t\treturn;\n\n\t\tcase 'text':\n\t\t\tif (a.text !== b.text)\n\t\t\t{\n\t\t\t\tpatches.push(makePatch('p-text', index, b.text));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\treturn;\n\n\t\tcase 'node':\n\t\t\t// Bail if obvious indicators have changed. Implies more serious\n\t\t\t// structural changes such that it's not worth it to diff.\n\t\t\tif (a.tag !== b.tag || a.namespace !== b.namespace)\n\t\t\t{\n\t\t\t\tpatches.push(makePatch('p-redraw', index, b));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar factsDiff = diffFacts(a.facts, b.facts);\n\n\t\t\tif (typeof factsDiff !== 'undefined')\n\t\t\t{\n\t\t\t\tpatches.push(makePatch('p-facts', index, factsDiff));\n\t\t\t}\n\n\t\t\tdiffChildren(a, b, patches, index);\n\t\t\treturn;\n\n\t\tcase 'keyed-node':\n\t\t\t// Bail if obvious indicators have changed. Implies more serious\n\t\t\t// structural changes such that it's not worth it to diff.\n\t\t\tif (a.tag !== b.tag || a.namespace !== b.namespace)\n\t\t\t{\n\t\t\t\tpatches.push(makePatch('p-redraw', index, b));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar factsDiff = diffFacts(a.facts, b.facts);\n\n\t\t\tif (typeof factsDiff !== 'undefined')\n\t\t\t{\n\t\t\t\tpatches.push(makePatch('p-facts', index, factsDiff));\n\t\t\t}\n\n\t\t\tdiffKeyedChildren(a, b, patches, index);\n\t\t\treturn;\n\n\t\tcase 'custom':\n\t\t\tif (a.impl !== b.impl)\n\t\t\t{\n\t\t\t\tpatches.push(makePatch('p-redraw', index, b));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar factsDiff = diffFacts(a.facts, b.facts);\n\t\t\tif (typeof factsDiff !== 'undefined')\n\t\t\t{\n\t\t\t\tpatches.push(makePatch('p-facts', index, factsDiff));\n\t\t\t}\n\n\t\t\tvar patch = b.impl.diff(a,b);\n\t\t\tif (patch)\n\t\t\t{\n\t\t\t\tpatches.push(makePatch('p-custom', index, patch));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\treturn;\n\t}\n}\n\n\n// assumes the incoming arrays are the same length\nfunction pairwiseRefEqual(as, bs)\n{\n\tfor (var i = 0; i < as.length; i++)\n\t{\n\t\tif (as[i] !== bs[i])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n\n// TODO Instead of creating a new diff object, it's possible to just test if\n// there *is* a diff. During the actual patch, do the diff again and make the\n// modifications directly. This way, there's no new allocations. Worth it?\nfunction diffFacts(a, b, category)\n{\n\tvar diff;\n\n\t// look for changes and removals\n\tfor (var aKey in a)\n\t{\n\t\tif (aKey === STYLE_KEY || aKey === EVENT_KEY || aKey === ATTR_KEY || aKey === ATTR_NS_KEY)\n\t\t{\n\t\t\tvar subDiff = diffFacts(a[aKey], b[aKey] || {}, aKey);\n\t\t\tif (subDiff)\n\t\t\t{\n\t\t\t\tdiff = diff || {};\n\t\t\t\tdiff[aKey] = subDiff;\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\n\t\t// remove if not in the new facts\n\t\tif (!(aKey in b))\n\t\t{\n\t\t\tdiff = diff || {};\n\t\t\tdiff[aKey] =\n\t\t\t\t(typeof category === 'undefined')\n\t\t\t\t\t? (typeof a[aKey] === 'string' ? '' : null)\n\t\t\t\t\t:\n\t\t\t\t(category === STYLE_KEY)\n\t\t\t\t\t? ''\n\t\t\t\t\t:\n\t\t\t\t(category === EVENT_KEY || category === ATTR_KEY)\n\t\t\t\t\t? undefined\n\t\t\t\t\t:\n\t\t\t\t{ namespace: a[aKey].namespace, value: undefined };\n\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar aValue = a[aKey];\n\t\tvar bValue = b[aKey];\n\n\t\t// reference equal, so don't worry about it\n\t\tif (aValue === bValue && aKey !== 'value'\n\t\t\t|| category === EVENT_KEY && equalEvents(aValue, bValue))\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\n\t\tdiff = diff || {};\n\t\tdiff[aKey] = bValue;\n\t}\n\n\t// add new stuff\n\tfor (var bKey in b)\n\t{\n\t\tif (!(bKey in a))\n\t\t{\n\t\t\tdiff = diff || {};\n\t\t\tdiff[bKey] = b[bKey];\n\t\t}\n\t}\n\n\treturn diff;\n}\n\n\nfunction diffChildren(aParent, bParent, patches, rootIndex)\n{\n\tvar aChildren = aParent.children;\n\tvar bChildren = bParent.children;\n\n\tvar aLen = aChildren.length;\n\tvar bLen = bChildren.length;\n\n\t// FIGURE OUT IF THERE ARE INSERTS OR REMOVALS\n\n\tif (aLen > bLen)\n\t{\n\t\tpatches.push(makePatch('p-remove-last', rootIndex, aLen - bLen));\n\t}\n\telse if (aLen < bLen)\n\t{\n\t\tpatches.push(makePatch('p-append', rootIndex, bChildren.slice(aLen)));\n\t}\n\n\t// PAIRWISE DIFF EVERYTHING ELSE\n\n\tvar index = rootIndex;\n\tvar minLen = aLen < bLen ? aLen : bLen;\n\tfor (var i = 0; i < minLen; i++)\n\t{\n\t\tindex++;\n\t\tvar aChild = aChildren[i];\n\t\tdiffHelp(aChild, bChildren[i], patches, index);\n\t\tindex += aChild.descendantsCount || 0;\n\t}\n}\n\n\n\n////////////  KEYED DIFF  ////////////\n\n\nfunction diffKeyedChildren(aParent, bParent, patches, rootIndex)\n{\n\tvar localPatches = [];\n\n\tvar changes = {}; // Dict String Entry\n\tvar inserts = []; // Array { index : Int, entry : Entry }\n\t// type Entry = { tag : String, vnode : VNode, index : Int, data : _ }\n\n\tvar aChildren = aParent.children;\n\tvar bChildren = bParent.children;\n\tvar aLen = aChildren.length;\n\tvar bLen = bChildren.length;\n\tvar aIndex = 0;\n\tvar bIndex = 0;\n\n\tvar index = rootIndex;\n\n\twhile (aIndex < aLen && bIndex < bLen)\n\t{\n\t\tvar a = aChildren[aIndex];\n\t\tvar b = bChildren[bIndex];\n\n\t\tvar aKey = a._0;\n\t\tvar bKey = b._0;\n\t\tvar aNode = a._1;\n\t\tvar bNode = b._1;\n\n\t\t// check if keys match\n\n\t\tif (aKey === bKey)\n\t\t{\n\t\t\tindex++;\n\t\t\tdiffHelp(aNode, bNode, localPatches, index);\n\t\t\tindex += aNode.descendantsCount || 0;\n\n\t\t\taIndex++;\n\t\t\tbIndex++;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// look ahead 1 to detect insertions and removals.\n\n\t\tvar aLookAhead = aIndex + 1 < aLen;\n\t\tvar bLookAhead = bIndex + 1 < bLen;\n\n\t\tif (aLookAhead)\n\t\t{\n\t\t\tvar aNext = aChildren[aIndex + 1];\n\t\t\tvar aNextKey = aNext._0;\n\t\t\tvar aNextNode = aNext._1;\n\t\t\tvar oldMatch = bKey === aNextKey;\n\t\t}\n\n\t\tif (bLookAhead)\n\t\t{\n\t\t\tvar bNext = bChildren[bIndex + 1];\n\t\t\tvar bNextKey = bNext._0;\n\t\t\tvar bNextNode = bNext._1;\n\t\t\tvar newMatch = aKey === bNextKey;\n\t\t}\n\n\n\t\t// swap a and b\n\t\tif (aLookAhead && bLookAhead && newMatch && oldMatch)\n\t\t{\n\t\t\tindex++;\n\t\t\tdiffHelp(aNode, bNextNode, localPatches, index);\n\t\t\tinsertNode(changes, localPatches, aKey, bNode, bIndex, inserts);\n\t\t\tindex += aNode.descendantsCount || 0;\n\n\t\t\tindex++;\n\t\t\tremoveNode(changes, localPatches, aKey, aNextNode, index);\n\t\t\tindex += aNextNode.descendantsCount || 0;\n\n\t\t\taIndex += 2;\n\t\t\tbIndex += 2;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// insert b\n\t\tif (bLookAhead && newMatch)\n\t\t{\n\t\t\tindex++;\n\t\t\tinsertNode(changes, localPatches, bKey, bNode, bIndex, inserts);\n\t\t\tdiffHelp(aNode, bNextNode, localPatches, index);\n\t\t\tindex += aNode.descendantsCount || 0;\n\n\t\t\taIndex += 1;\n\t\t\tbIndex += 2;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// remove a\n\t\tif (aLookAhead && oldMatch)\n\t\t{\n\t\t\tindex++;\n\t\t\tremoveNode(changes, localPatches, aKey, aNode, index);\n\t\t\tindex += aNode.descendantsCount || 0;\n\n\t\t\tindex++;\n\t\t\tdiffHelp(aNextNode, bNode, localPatches, index);\n\t\t\tindex += aNextNode.descendantsCount || 0;\n\n\t\t\taIndex += 2;\n\t\t\tbIndex += 1;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// remove a, insert b\n\t\tif (aLookAhead && bLookAhead && aNextKey === bNextKey)\n\t\t{\n\t\t\tindex++;\n\t\t\tremoveNode(changes, localPatches, aKey, aNode, index);\n\t\t\tinsertNode(changes, localPatches, bKey, bNode, bIndex, inserts);\n\t\t\tindex += aNode.descendantsCount || 0;\n\n\t\t\tindex++;\n\t\t\tdiffHelp(aNextNode, bNextNode, localPatches, index);\n\t\t\tindex += aNextNode.descendantsCount || 0;\n\n\t\t\taIndex += 2;\n\t\t\tbIndex += 2;\n\t\t\tcontinue;\n\t\t}\n\n\t\tbreak;\n\t}\n\n\t// eat up any remaining nodes with removeNode and insertNode\n\n\twhile (aIndex < aLen)\n\t{\n\t\tindex++;\n\t\tvar a = aChildren[aIndex];\n\t\tvar aNode = a._1;\n\t\tremoveNode(changes, localPatches, a._0, aNode, index);\n\t\tindex += aNode.descendantsCount || 0;\n\t\taIndex++;\n\t}\n\n\tvar endInserts;\n\twhile (bIndex < bLen)\n\t{\n\t\tendInserts = endInserts || [];\n\t\tvar b = bChildren[bIndex];\n\t\tinsertNode(changes, localPatches, b._0, b._1, undefined, endInserts);\n\t\tbIndex++;\n\t}\n\n\tif (localPatches.length > 0 || inserts.length > 0 || typeof endInserts !== 'undefined')\n\t{\n\t\tpatches.push(makePatch('p-reorder', rootIndex, {\n\t\t\tpatches: localPatches,\n\t\t\tinserts: inserts,\n\t\t\tendInserts: endInserts\n\t\t}));\n\t}\n}\n\n\n\n////////////  CHANGES FROM KEYED DIFF  ////////////\n\n\nvar POSTFIX = '_elmW6BL';\n\n\nfunction insertNode(changes, localPatches, key, vnode, bIndex, inserts)\n{\n\tvar entry = changes[key];\n\n\t// never seen this key before\n\tif (typeof entry === 'undefined')\n\t{\n\t\tentry = {\n\t\t\ttag: 'insert',\n\t\t\tvnode: vnode,\n\t\t\tindex: bIndex,\n\t\t\tdata: undefined\n\t\t};\n\n\t\tinserts.push({ index: bIndex, entry: entry });\n\t\tchanges[key] = entry;\n\n\t\treturn;\n\t}\n\n\t// this key was removed earlier, a match!\n\tif (entry.tag === 'remove')\n\t{\n\t\tinserts.push({ index: bIndex, entry: entry });\n\n\t\tentry.tag = 'move';\n\t\tvar subPatches = [];\n\t\tdiffHelp(entry.vnode, vnode, subPatches, entry.index);\n\t\tentry.index = bIndex;\n\t\tentry.data.data = {\n\t\t\tpatches: subPatches,\n\t\t\tentry: entry\n\t\t};\n\n\t\treturn;\n\t}\n\n\t// this key has already been inserted or moved, a duplicate!\n\tinsertNode(changes, localPatches, key + POSTFIX, vnode, bIndex, inserts);\n}\n\n\nfunction removeNode(changes, localPatches, key, vnode, index)\n{\n\tvar entry = changes[key];\n\n\t// never seen this key before\n\tif (typeof entry === 'undefined')\n\t{\n\t\tvar patch = makePatch('p-remove', index, undefined);\n\t\tlocalPatches.push(patch);\n\n\t\tchanges[key] = {\n\t\t\ttag: 'remove',\n\t\t\tvnode: vnode,\n\t\t\tindex: index,\n\t\t\tdata: patch\n\t\t};\n\n\t\treturn;\n\t}\n\n\t// this key was inserted earlier, a match!\n\tif (entry.tag === 'insert')\n\t{\n\t\tentry.tag = 'move';\n\t\tvar subPatches = [];\n\t\tdiffHelp(vnode, entry.vnode, subPatches, index);\n\n\t\tvar patch = makePatch('p-remove', index, {\n\t\t\tpatches: subPatches,\n\t\t\tentry: entry\n\t\t});\n\t\tlocalPatches.push(patch);\n\n\t\treturn;\n\t}\n\n\t// this key has already been removed or moved, a duplicate!\n\tremoveNode(changes, localPatches, key + POSTFIX, vnode, index);\n}\n\n\n\n////////////  ADD DOM NODES  ////////////\n//\n// Each DOM node has an \"index\" assigned in order of traversal. It is important\n// to minimize our crawl over the actual DOM, so these indexes (along with the\n// descendantsCount of virtual nodes) let us skip touching entire subtrees of\n// the DOM if we know there are no patches there.\n\n\nfunction addDomNodes(domNode, vNode, patches, eventNode)\n{\n\taddDomNodesHelp(domNode, vNode, patches, 0, 0, vNode.descendantsCount, eventNode);\n}\n\n\n// assumes `patches` is non-empty and indexes increase monotonically.\nfunction addDomNodesHelp(domNode, vNode, patches, i, low, high, eventNode)\n{\n\tvar patch = patches[i];\n\tvar index = patch.index;\n\n\twhile (index === low)\n\t{\n\t\tvar patchType = patch.type;\n\n\t\tif (patchType === 'p-thunk')\n\t\t{\n\t\t\taddDomNodes(domNode, vNode.node, patch.data, eventNode);\n\t\t}\n\t\telse if (patchType === 'p-reorder')\n\t\t{\n\t\t\tpatch.domNode = domNode;\n\t\t\tpatch.eventNode = eventNode;\n\n\t\t\tvar subPatches = patch.data.patches;\n\t\t\tif (subPatches.length > 0)\n\t\t\t{\n\t\t\t\taddDomNodesHelp(domNode, vNode, subPatches, 0, low, high, eventNode);\n\t\t\t}\n\t\t}\n\t\telse if (patchType === 'p-remove')\n\t\t{\n\t\t\tpatch.domNode = domNode;\n\t\t\tpatch.eventNode = eventNode;\n\n\t\t\tvar data = patch.data;\n\t\t\tif (typeof data !== 'undefined')\n\t\t\t{\n\t\t\t\tdata.entry.data = domNode;\n\t\t\t\tvar subPatches = data.patches;\n\t\t\t\tif (subPatches.length > 0)\n\t\t\t\t{\n\t\t\t\t\taddDomNodesHelp(domNode, vNode, subPatches, 0, low, high, eventNode);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpatch.domNode = domNode;\n\t\t\tpatch.eventNode = eventNode;\n\t\t}\n\n\t\ti++;\n\n\t\tif (!(patch = patches[i]) || (index = patch.index) > high)\n\t\t{\n\t\t\treturn i;\n\t\t}\n\t}\n\n\tswitch (vNode.type)\n\t{\n\t\tcase 'tagger':\n\t\t\tvar subNode = vNode.node;\n\n\t\t\twhile (subNode.type === \"tagger\")\n\t\t\t{\n\t\t\t\tsubNode = subNode.node;\n\t\t\t}\n\n\t\t\treturn addDomNodesHelp(domNode, subNode, patches, i, low + 1, high, domNode.elm_event_node_ref);\n\n\t\tcase 'node':\n\t\t\tvar vChildren = vNode.children;\n\t\t\tvar childNodes = domNode.childNodes;\n\t\t\tfor (var j = 0; j < vChildren.length; j++)\n\t\t\t{\n\t\t\t\tlow++;\n\t\t\t\tvar vChild = vChildren[j];\n\t\t\t\tvar nextLow = low + (vChild.descendantsCount || 0);\n\t\t\t\tif (low <= index && index <= nextLow)\n\t\t\t\t{\n\t\t\t\t\ti = addDomNodesHelp(childNodes[j], vChild, patches, i, low, nextLow, eventNode);\n\t\t\t\t\tif (!(patch = patches[i]) || (index = patch.index) > high)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlow = nextLow;\n\t\t\t}\n\t\t\treturn i;\n\n\t\tcase 'keyed-node':\n\t\t\tvar vChildren = vNode.children;\n\t\t\tvar childNodes = domNode.childNodes;\n\t\t\tfor (var j = 0; j < vChildren.length; j++)\n\t\t\t{\n\t\t\t\tlow++;\n\t\t\t\tvar vChild = vChildren[j]._1;\n\t\t\t\tvar nextLow = low + (vChild.descendantsCount || 0);\n\t\t\t\tif (low <= index && index <= nextLow)\n\t\t\t\t{\n\t\t\t\t\ti = addDomNodesHelp(childNodes[j], vChild, patches, i, low, nextLow, eventNode);\n\t\t\t\t\tif (!(patch = patches[i]) || (index = patch.index) > high)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlow = nextLow;\n\t\t\t}\n\t\t\treturn i;\n\n\t\tcase 'text':\n\t\tcase 'thunk':\n\t\t\tthrow new Error('should never traverse `text` or `thunk` nodes like this');\n\t}\n}\n\n\n\n////////////  APPLY PATCHES  ////////////\n\n\nfunction applyPatches(rootDomNode, oldVirtualNode, patches, eventNode)\n{\n\tif (patches.length === 0)\n\t{\n\t\treturn rootDomNode;\n\t}\n\n\taddDomNodes(rootDomNode, oldVirtualNode, patches, eventNode);\n\treturn applyPatchesHelp(rootDomNode, patches);\n}\n\nfunction applyPatchesHelp(rootDomNode, patches)\n{\n\tfor (var i = 0; i < patches.length; i++)\n\t{\n\t\tvar patch = patches[i];\n\t\tvar localDomNode = patch.domNode\n\t\tvar newNode = applyPatch(localDomNode, patch);\n\t\tif (localDomNode === rootDomNode)\n\t\t{\n\t\t\trootDomNode = newNode;\n\t\t}\n\t}\n\treturn rootDomNode;\n}\n\nfunction applyPatch(domNode, patch)\n{\n\tswitch (patch.type)\n\t{\n\t\tcase 'p-redraw':\n\t\t\treturn applyPatchRedraw(domNode, patch.data, patch.eventNode);\n\n\t\tcase 'p-facts':\n\t\t\tapplyFacts(domNode, patch.eventNode, patch.data);\n\t\t\treturn domNode;\n\n\t\tcase 'p-text':\n\t\t\tdomNode.replaceData(0, domNode.length, patch.data);\n\t\t\treturn domNode;\n\n\t\tcase 'p-thunk':\n\t\t\treturn applyPatchesHelp(domNode, patch.data);\n\n\t\tcase 'p-tagger':\n\t\t\tif (typeof domNode.elm_event_node_ref !== 'undefined')\n\t\t\t{\n\t\t\t\tdomNode.elm_event_node_ref.tagger = patch.data;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdomNode.elm_event_node_ref = { tagger: patch.data, parent: patch.eventNode };\n\t\t\t}\n\t\t\treturn domNode;\n\n\t\tcase 'p-remove-last':\n\t\t\tvar i = patch.data;\n\t\t\twhile (i--)\n\t\t\t{\n\t\t\t\tdomNode.removeChild(domNode.lastChild);\n\t\t\t}\n\t\t\treturn domNode;\n\n\t\tcase 'p-append':\n\t\t\tvar newNodes = patch.data;\n\t\t\tfor (var i = 0; i < newNodes.length; i++)\n\t\t\t{\n\t\t\t\tdomNode.appendChild(render(newNodes[i], patch.eventNode));\n\t\t\t}\n\t\t\treturn domNode;\n\n\t\tcase 'p-remove':\n\t\t\tvar data = patch.data;\n\t\t\tif (typeof data === 'undefined')\n\t\t\t{\n\t\t\t\tdomNode.parentNode.removeChild(domNode);\n\t\t\t\treturn domNode;\n\t\t\t}\n\t\t\tvar entry = data.entry;\n\t\t\tif (typeof entry.index !== 'undefined')\n\t\t\t{\n\t\t\t\tdomNode.parentNode.removeChild(domNode);\n\t\t\t}\n\t\t\tentry.data = applyPatchesHelp(domNode, data.patches);\n\t\t\treturn domNode;\n\n\t\tcase 'p-reorder':\n\t\t\treturn applyPatchReorder(domNode, patch);\n\n\t\tcase 'p-custom':\n\t\t\tvar impl = patch.data;\n\t\t\treturn impl.applyPatch(domNode, impl.data);\n\n\t\tdefault:\n\t\t\tthrow new Error('Ran into an unknown patch!');\n\t}\n}\n\n\nfunction applyPatchRedraw(domNode, vNode, eventNode)\n{\n\tvar parentNode = domNode.parentNode;\n\tvar newNode = render(vNode, eventNode);\n\n\tif (typeof newNode.elm_event_node_ref === 'undefined')\n\t{\n\t\tnewNode.elm_event_node_ref = domNode.elm_event_node_ref;\n\t}\n\n\tif (parentNode && newNode !== domNode)\n\t{\n\t\tparentNode.replaceChild(newNode, domNode);\n\t}\n\treturn newNode;\n}\n\n\nfunction applyPatchReorder(domNode, patch)\n{\n\tvar data = patch.data;\n\n\t// remove end inserts\n\tvar frag = applyPatchReorderEndInsertsHelp(data.endInserts, patch);\n\n\t// removals\n\tdomNode = applyPatchesHelp(domNode, data.patches);\n\n\t// inserts\n\tvar inserts = data.inserts;\n\tfor (var i = 0; i < inserts.length; i++)\n\t{\n\t\tvar insert = inserts[i];\n\t\tvar entry = insert.entry;\n\t\tvar node = entry.tag === 'move'\n\t\t\t? entry.data\n\t\t\t: render(entry.vnode, patch.eventNode);\n\t\tdomNode.insertBefore(node, domNode.childNodes[insert.index]);\n\t}\n\n\t// add end inserts\n\tif (typeof frag !== 'undefined')\n\t{\n\t\tdomNode.appendChild(frag);\n\t}\n\n\treturn domNode;\n}\n\n\nfunction applyPatchReorderEndInsertsHelp(endInserts, patch)\n{\n\tif (typeof endInserts === 'undefined')\n\t{\n\t\treturn;\n\t}\n\n\tvar frag = localDoc.createDocumentFragment();\n\tfor (var i = 0; i < endInserts.length; i++)\n\t{\n\t\tvar insert = endInserts[i];\n\t\tvar entry = insert.entry;\n\t\tfrag.appendChild(entry.tag === 'move'\n\t\t\t? entry.data\n\t\t\t: render(entry.vnode, patch.eventNode)\n\t\t);\n\t}\n\treturn frag;\n}\n\n\n// PROGRAMS\n\nvar program = makeProgram(checkNoFlags);\nvar programWithFlags = makeProgram(checkYesFlags);\n\nfunction makeProgram(flagChecker)\n{\n\treturn F2(function(debugWrap, impl)\n\t{\n\t\treturn function(flagDecoder)\n\t\t{\n\t\t\treturn function(object, moduleName, debugMetadata)\n\t\t\t{\n\t\t\t\tvar checker = flagChecker(flagDecoder, moduleName);\n\t\t\t\tif (typeof debugMetadata === 'undefined')\n\t\t\t\t{\n\t\t\t\t\tnormalSetup(impl, object, moduleName, checker);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tdebugSetup(A2(debugWrap, debugMetadata, impl), object, moduleName, checker);\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t});\n}\n\nfunction staticProgram(vNode)\n{\n\tvar nothing = _elm_lang$core$Native_Utils.Tuple2(\n\t\t_elm_lang$core$Native_Utils.Tuple0,\n\t\t_elm_lang$core$Platform_Cmd$none\n\t);\n\treturn A2(program, _elm_lang$virtual_dom$VirtualDom_Debug$wrap, {\n\t\tinit: nothing,\n\t\tview: function() { return vNode; },\n\t\tupdate: F2(function() { return nothing; }),\n\t\tsubscriptions: function() { return _elm_lang$core$Platform_Sub$none; }\n\t})();\n}\n\n\n// FLAG CHECKERS\n\nfunction checkNoFlags(flagDecoder, moduleName)\n{\n\treturn function(init, flags, domNode)\n\t{\n\t\tif (typeof flags === 'undefined')\n\t\t{\n\t\t\treturn init;\n\t\t}\n\n\t\tvar errorMessage =\n\t\t\t'The `' + moduleName + '` module does not need flags.\\n'\n\t\t\t+ 'Initialize it with no arguments and you should be all set!';\n\n\t\tcrash(errorMessage, domNode);\n\t};\n}\n\nfunction checkYesFlags(flagDecoder, moduleName)\n{\n\treturn function(init, flags, domNode)\n\t{\n\t\tif (typeof flagDecoder === 'undefined')\n\t\t{\n\t\t\tvar errorMessage =\n\t\t\t\t'Are you trying to sneak a Never value into Elm? Trickster!\\n'\n\t\t\t\t+ 'It looks like ' + moduleName + '.main is defined with `programWithFlags` but has type `Program Never`.\\n'\n\t\t\t\t+ 'Use `program` instead if you do not want flags.'\n\n\t\t\tcrash(errorMessage, domNode);\n\t\t}\n\n\t\tvar result = A2(_elm_lang$core$Native_Json.run, flagDecoder, flags);\n\t\tif (result.ctor === 'Ok')\n\t\t{\n\t\t\treturn init(result._0);\n\t\t}\n\n\t\tvar errorMessage =\n\t\t\t'Trying to initialize the `' + moduleName + '` module with an unexpected flag.\\n'\n\t\t\t+ 'I tried to convert it to an Elm value, but ran into this problem:\\n\\n'\n\t\t\t+ result._0;\n\n\t\tcrash(errorMessage, domNode);\n\t};\n}\n\nfunction crash(errorMessage, domNode)\n{\n\tif (domNode)\n\t{\n\t\tdomNode.innerHTML =\n\t\t\t'<div style=\"padding-left:1em;\">'\n\t\t\t+ '<h2 style=\"font-weight:normal;\"><b>Oops!</b> Something went wrong when starting your Elm program.</h2>'\n\t\t\t+ '<pre style=\"padding-left:1em;\">' + errorMessage + '</pre>'\n\t\t\t+ '</div>';\n\t}\n\n\tthrow new Error(errorMessage);\n}\n\n\n//  NORMAL SETUP\n\nfunction normalSetup(impl, object, moduleName, flagChecker)\n{\n\tobject['embed'] = function embed(node, flags)\n\t{\n\t\twhile (node.lastChild)\n\t\t{\n\t\t\tnode.removeChild(node.lastChild);\n\t\t}\n\n\t\treturn _elm_lang$core$Native_Platform.initialize(\n\t\t\tflagChecker(impl.init, flags, node),\n\t\t\timpl.update,\n\t\t\timpl.subscriptions,\n\t\t\tnormalRenderer(node, impl.view)\n\t\t);\n\t};\n\n\tobject['fullscreen'] = function fullscreen(flags)\n\t{\n\t\treturn _elm_lang$core$Native_Platform.initialize(\n\t\t\tflagChecker(impl.init, flags, document.body),\n\t\t\timpl.update,\n\t\t\timpl.subscriptions,\n\t\t\tnormalRenderer(document.body, impl.view)\n\t\t);\n\t};\n}\n\nfunction normalRenderer(parentNode, view)\n{\n\treturn function(tagger, initialModel)\n\t{\n\t\tvar eventNode = { tagger: tagger, parent: undefined };\n\t\tvar initialVirtualNode = view(initialModel);\n\t\tvar domNode = render(initialVirtualNode, eventNode);\n\t\tparentNode.appendChild(domNode);\n\t\treturn makeStepper(domNode, view, initialVirtualNode, eventNode);\n\t};\n}\n\n\n// STEPPER\n\nvar rAF =\n\ttypeof requestAnimationFrame !== 'undefined'\n\t\t? requestAnimationFrame\n\t\t: function(callback) { setTimeout(callback, 1000 / 60); };\n\nfunction makeStepper(domNode, view, initialVirtualNode, eventNode)\n{\n\tvar state = 'NO_REQUEST';\n\tvar currNode = initialVirtualNode;\n\tvar nextModel;\n\n\tfunction updateIfNeeded()\n\t{\n\t\tswitch (state)\n\t\t{\n\t\t\tcase 'NO_REQUEST':\n\t\t\t\tthrow new Error(\n\t\t\t\t\t'Unexpected draw callback.\\n' +\n\t\t\t\t\t'Please report this to <https://github.com/elm-lang/virtual-dom/issues>.'\n\t\t\t\t);\n\n\t\t\tcase 'PENDING_REQUEST':\n\t\t\t\trAF(updateIfNeeded);\n\t\t\t\tstate = 'EXTRA_REQUEST';\n\n\t\t\t\tvar nextNode = view(nextModel);\n\t\t\t\tvar patches = diff(currNode, nextNode);\n\t\t\t\tdomNode = applyPatches(domNode, currNode, patches, eventNode);\n\t\t\t\tcurrNode = nextNode;\n\n\t\t\t\treturn;\n\n\t\t\tcase 'EXTRA_REQUEST':\n\t\t\t\tstate = 'NO_REQUEST';\n\t\t\t\treturn;\n\t\t}\n\t}\n\n\treturn function stepper(model)\n\t{\n\t\tif (state === 'NO_REQUEST')\n\t\t{\n\t\t\trAF(updateIfNeeded);\n\t\t}\n\t\tstate = 'PENDING_REQUEST';\n\t\tnextModel = model;\n\t};\n}\n\n\n// DEBUG SETUP\n\nfunction debugSetup(impl, object, moduleName, flagChecker)\n{\n\tobject['fullscreen'] = function fullscreen(flags)\n\t{\n\t\tvar popoutRef = { doc: undefined };\n\t\treturn _elm_lang$core$Native_Platform.initialize(\n\t\t\tflagChecker(impl.init, flags, document.body),\n\t\t\timpl.update(scrollTask(popoutRef)),\n\t\t\timpl.subscriptions,\n\t\t\tdebugRenderer(moduleName, document.body, popoutRef, impl.view, impl.viewIn, impl.viewOut)\n\t\t);\n\t};\n\n\tobject['embed'] = function fullscreen(node, flags)\n\t{\n\t\tvar popoutRef = { doc: undefined };\n\t\treturn _elm_lang$core$Native_Platform.initialize(\n\t\t\tflagChecker(impl.init, flags, node),\n\t\t\timpl.update(scrollTask(popoutRef)),\n\t\t\timpl.subscriptions,\n\t\t\tdebugRenderer(moduleName, node, popoutRef, impl.view, impl.viewIn, impl.viewOut)\n\t\t);\n\t};\n}\n\nfunction scrollTask(popoutRef)\n{\n\treturn _elm_lang$core$Native_Scheduler.nativeBinding(function(callback)\n\t{\n\t\tvar doc = popoutRef.doc;\n\t\tif (doc)\n\t\t{\n\t\t\tvar msgs = doc.getElementsByClassName('debugger-sidebar-messages')[0];\n\t\t\tif (msgs)\n\t\t\t{\n\t\t\t\tmsgs.scrollTop = msgs.scrollHeight;\n\t\t\t}\n\t\t}\n\t\tcallback(_elm_lang$core$Native_Scheduler.succeed(_elm_lang$core$Native_Utils.Tuple0));\n\t});\n}\n\n\nfunction debugRenderer(moduleName, parentNode, popoutRef, view, viewIn, viewOut)\n{\n\treturn function(tagger, initialModel)\n\t{\n\t\tvar appEventNode = { tagger: tagger, parent: undefined };\n\t\tvar eventNode = { tagger: tagger, parent: undefined };\n\n\t\t// make normal stepper\n\t\tvar appVirtualNode = view(initialModel);\n\t\tvar appNode = render(appVirtualNode, appEventNode);\n\t\tparentNode.appendChild(appNode);\n\t\tvar appStepper = makeStepper(appNode, view, appVirtualNode, appEventNode);\n\n\t\t// make overlay stepper\n\t\tvar overVirtualNode = viewIn(initialModel)._1;\n\t\tvar overNode = render(overVirtualNode, eventNode);\n\t\tparentNode.appendChild(overNode);\n\t\tvar wrappedViewIn = wrapViewIn(appEventNode, overNode, viewIn);\n\t\tvar overStepper = makeStepper(overNode, wrappedViewIn, overVirtualNode, eventNode);\n\n\t\t// make debugger stepper\n\t\tvar debugStepper = makeDebugStepper(initialModel, viewOut, eventNode, parentNode, moduleName, popoutRef);\n\n\t\treturn function stepper(model)\n\t\t{\n\t\t\tappStepper(model);\n\t\t\toverStepper(model);\n\t\t\tdebugStepper(model);\n\t\t}\n\t};\n}\n\nfunction makeDebugStepper(initialModel, view, eventNode, parentNode, moduleName, popoutRef)\n{\n\tvar curr;\n\tvar domNode;\n\n\treturn function stepper(model)\n\t{\n\t\tif (!model.isDebuggerOpen)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tif (!popoutRef.doc)\n\t\t{\n\t\t\tcurr = view(model);\n\t\t\tdomNode = openDebugWindow(moduleName, popoutRef, curr, eventNode);\n\t\t\treturn;\n\t\t}\n\n\t\t// switch to document of popout\n\t\tlocalDoc = popoutRef.doc;\n\n\t\tvar next = view(model);\n\t\tvar patches = diff(curr, next);\n\t\tdomNode = applyPatches(domNode, curr, patches, eventNode);\n\t\tcurr = next;\n\n\t\t// switch back to normal document\n\t\tlocalDoc = document;\n\t};\n}\n\nfunction openDebugWindow(moduleName, popoutRef, virtualNode, eventNode)\n{\n\tvar w = 900;\n\tvar h = 360;\n\tvar x = screen.width - w;\n\tvar y = screen.height - h;\n\tvar debugWindow = window.open('', '', 'width=' + w + ',height=' + h + ',left=' + x + ',top=' + y);\n\n\t// switch to window document\n\tlocalDoc = debugWindow.document;\n\n\tpopoutRef.doc = localDoc;\n\tlocalDoc.title = 'Debugger - ' + moduleName;\n\tlocalDoc.body.style.margin = '0';\n\tlocalDoc.body.style.padding = '0';\n\tvar domNode = render(virtualNode, eventNode);\n\tlocalDoc.body.appendChild(domNode);\n\n\tlocalDoc.addEventListener('keydown', function(event) {\n\t\tif (event.metaKey && event.which === 82)\n\t\t{\n\t\t\twindow.location.reload();\n\t\t}\n\t\tif (event.which === 38)\n\t\t{\n\t\t\teventNode.tagger({ ctor: 'Up' });\n\t\t\tevent.preventDefault();\n\t\t}\n\t\tif (event.which === 40)\n\t\t{\n\t\t\teventNode.tagger({ ctor: 'Down' });\n\t\t\tevent.preventDefault();\n\t\t}\n\t});\n\n\tfunction close()\n\t{\n\t\tpopoutRef.doc = undefined;\n\t\tdebugWindow.close();\n\t}\n\twindow.addEventListener('unload', close);\n\tdebugWindow.addEventListener('unload', function() {\n\t\tpopoutRef.doc = undefined;\n\t\twindow.removeEventListener('unload', close);\n\t\teventNode.tagger({ ctor: 'Close' });\n\t});\n\n\t// switch back to the normal document\n\tlocalDoc = document;\n\n\treturn domNode;\n}\n\n\n// BLOCK EVENTS\n\nfunction wrapViewIn(appEventNode, overlayNode, viewIn)\n{\n\tvar ignorer = makeIgnorer(overlayNode);\n\tvar blocking = 'Normal';\n\tvar overflow;\n\n\tvar normalTagger = appEventNode.tagger;\n\tvar blockTagger = function() {};\n\n\treturn function(model)\n\t{\n\t\tvar tuple = viewIn(model);\n\t\tvar newBlocking = tuple._0.ctor;\n\t\tappEventNode.tagger = newBlocking === 'Normal' ? normalTagger : blockTagger;\n\t\tif (blocking !== newBlocking)\n\t\t{\n\t\t\ttraverse('removeEventListener', ignorer, blocking);\n\t\t\ttraverse('addEventListener', ignorer, newBlocking);\n\n\t\t\tif (blocking === 'Normal')\n\t\t\t{\n\t\t\t\toverflow = document.body.style.overflow;\n\t\t\t\tdocument.body.style.overflow = 'hidden';\n\t\t\t}\n\n\t\t\tif (newBlocking === 'Normal')\n\t\t\t{\n\t\t\t\tdocument.body.style.overflow = overflow;\n\t\t\t}\n\n\t\t\tblocking = newBlocking;\n\t\t}\n\t\treturn tuple._1;\n\t}\n}\n\nfunction traverse(verbEventListener, ignorer, blocking)\n{\n\tswitch(blocking)\n\t{\n\t\tcase 'Normal':\n\t\t\treturn;\n\n\t\tcase 'Pause':\n\t\t\treturn traverseHelp(verbEventListener, ignorer, mostEvents);\n\n\t\tcase 'Message':\n\t\t\treturn traverseHelp(verbEventListener, ignorer, allEvents);\n\t}\n}\n\nfunction traverseHelp(verbEventListener, handler, eventNames)\n{\n\tfor (var i = 0; i < eventNames.length; i++)\n\t{\n\t\tdocument.body[verbEventListener](eventNames[i], handler, true);\n\t}\n}\n\nfunction makeIgnorer(overlayNode)\n{\n\treturn function(event)\n\t{\n\t\tif (event.type === 'keydown' && event.metaKey && event.which === 82)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tvar isScroll = event.type === 'scroll' || event.type === 'wheel';\n\n\t\tvar node = event.target;\n\t\twhile (node !== null)\n\t\t{\n\t\t\tif (node.className === 'elm-overlay-message-details' && isScroll)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (node === overlayNode && !isScroll)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tnode = node.parentNode;\n\t\t}\n\n\t\tevent.stopPropagation();\n\t\tevent.preventDefault();\n\t}\n}\n\nvar mostEvents = [\n\t'click', 'dblclick', 'mousemove',\n\t'mouseup', 'mousedown', 'mouseenter', 'mouseleave',\n\t'touchstart', 'touchend', 'touchcancel', 'touchmove',\n\t'pointerdown', 'pointerup', 'pointerover', 'pointerout',\n\t'pointerenter', 'pointerleave', 'pointermove', 'pointercancel',\n\t'dragstart', 'drag', 'dragend', 'dragenter', 'dragover', 'dragleave', 'drop',\n\t'keyup', 'keydown', 'keypress',\n\t'input', 'change',\n\t'focus', 'blur'\n];\n\nvar allEvents = mostEvents.concat('wheel', 'scroll');\n\n\nreturn {\n\tnode: node,\n\ttext: text,\n\tcustom: custom,\n\tmap: F2(map),\n\n\ton: F3(on),\n\tstyle: style,\n\tproperty: F2(property),\n\tattribute: F2(attribute),\n\tattributeNS: F3(attributeNS),\n\tmapProperty: F2(mapProperty),\n\n\tlazy: F2(lazy),\n\tlazy2: F3(lazy2),\n\tlazy3: F4(lazy3),\n\tkeyedNode: F3(keyedNode),\n\n\tprogram: program,\n\tprogramWithFlags: programWithFlags,\n\tstaticProgram: staticProgram\n};\n\n}();\n\nvar _elm_lang$virtual_dom$VirtualDom$programWithFlags = function (impl) {\n\treturn A2(_elm_lang$virtual_dom$Native_VirtualDom.programWithFlags, _elm_lang$virtual_dom$VirtualDom_Debug$wrapWithFlags, impl);\n};\nvar _elm_lang$virtual_dom$VirtualDom$program = function (impl) {\n\treturn A2(_elm_lang$virtual_dom$Native_VirtualDom.program, _elm_lang$virtual_dom$VirtualDom_Debug$wrap, impl);\n};\nvar _elm_lang$virtual_dom$VirtualDom$keyedNode = _elm_lang$virtual_dom$Native_VirtualDom.keyedNode;\nvar _elm_lang$virtual_dom$VirtualDom$lazy3 = _elm_lang$virtual_dom$Native_VirtualDom.lazy3;\nvar _elm_lang$virtual_dom$VirtualDom$lazy2 = _elm_lang$virtual_dom$Native_VirtualDom.lazy2;\nvar _elm_lang$virtual_dom$VirtualDom$lazy = _elm_lang$virtual_dom$Native_VirtualDom.lazy;\nvar _elm_lang$virtual_dom$VirtualDom$defaultOptions = {stopPropagation: false, preventDefault: false};\nvar _elm_lang$virtual_dom$VirtualDom$onWithOptions = _elm_lang$virtual_dom$Native_VirtualDom.on;\nvar _elm_lang$virtual_dom$VirtualDom$on = F2(\n\tfunction (eventName, decoder) {\n\t\treturn A3(_elm_lang$virtual_dom$VirtualDom$onWithOptions, eventName, _elm_lang$virtual_dom$VirtualDom$defaultOptions, decoder);\n\t});\nvar _elm_lang$virtual_dom$VirtualDom$style = _elm_lang$virtual_dom$Native_VirtualDom.style;\nvar _elm_lang$virtual_dom$VirtualDom$mapProperty = _elm_lang$virtual_dom$Native_VirtualDom.mapProperty;\nvar _elm_lang$virtual_dom$VirtualDom$attributeNS = _elm_lang$virtual_dom$Native_VirtualDom.attributeNS;\nvar _elm_lang$virtual_dom$VirtualDom$attribute = _elm_lang$virtual_dom$Native_VirtualDom.attribute;\nvar _elm_lang$virtual_dom$VirtualDom$property = _elm_lang$virtual_dom$Native_VirtualDom.property;\nvar _elm_lang$virtual_dom$VirtualDom$map = _elm_lang$virtual_dom$Native_VirtualDom.map;\nvar _elm_lang$virtual_dom$VirtualDom$text = _elm_lang$virtual_dom$Native_VirtualDom.text;\nvar _elm_lang$virtual_dom$VirtualDom$node = _elm_lang$virtual_dom$Native_VirtualDom.node;\nvar _elm_lang$virtual_dom$VirtualDom$Options = F2(\n\tfunction (a, b) {\n\t\treturn {stopPropagation: a, preventDefault: b};\n\t});\nvar _elm_lang$virtual_dom$VirtualDom$Node = {ctor: 'Node'};\nvar _elm_lang$virtual_dom$VirtualDom$Property = {ctor: 'Property'};\n\nvar _elm_lang$html$Html$programWithFlags = _elm_lang$virtual_dom$VirtualDom$programWithFlags;\nvar _elm_lang$html$Html$program = _elm_lang$virtual_dom$VirtualDom$program;\nvar _elm_lang$html$Html$beginnerProgram = function (_p0) {\n\tvar _p1 = _p0;\n\treturn _elm_lang$html$Html$program(\n\t\t{\n\t\t\tinit: A2(\n\t\t\t\t_elm_lang$core$Platform_Cmd_ops['!'],\n\t\t\t\t_p1.model,\n\t\t\t\t{ctor: '[]'}),\n\t\t\tupdate: F2(\n\t\t\t\tfunction (msg, model) {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\t_elm_lang$core$Platform_Cmd_ops['!'],\n\t\t\t\t\t\tA2(_p1.update, msg, model),\n\t\t\t\t\t\t{ctor: '[]'});\n\t\t\t\t}),\n\t\t\tview: _p1.view,\n\t\t\tsubscriptions: function (_p2) {\n\t\t\t\treturn _elm_lang$core$Platform_Sub$none;\n\t\t\t}\n\t\t});\n};\nvar _elm_lang$html$Html$map = _elm_lang$virtual_dom$VirtualDom$map;\nvar _elm_lang$html$Html$text = _elm_lang$virtual_dom$VirtualDom$text;\nvar _elm_lang$html$Html$node = _elm_lang$virtual_dom$VirtualDom$node;\nvar _elm_lang$html$Html$body = _elm_lang$html$Html$node('body');\nvar _elm_lang$html$Html$section = _elm_lang$html$Html$node('section');\nvar _elm_lang$html$Html$nav = _elm_lang$html$Html$node('nav');\nvar _elm_lang$html$Html$article = _elm_lang$html$Html$node('article');\nvar _elm_lang$html$Html$aside = _elm_lang$html$Html$node('aside');\nvar _elm_lang$html$Html$h1 = _elm_lang$html$Html$node('h1');\nvar _elm_lang$html$Html$h2 = _elm_lang$html$Html$node('h2');\nvar _elm_lang$html$Html$h3 = _elm_lang$html$Html$node('h3');\nvar _elm_lang$html$Html$h4 = _elm_lang$html$Html$node('h4');\nvar _elm_lang$html$Html$h5 = _elm_lang$html$Html$node('h5');\nvar _elm_lang$html$Html$h6 = _elm_lang$html$Html$node('h6');\nvar _elm_lang$html$Html$header = _elm_lang$html$Html$node('header');\nvar _elm_lang$html$Html$footer = _elm_lang$html$Html$node('footer');\nvar _elm_lang$html$Html$address = _elm_lang$html$Html$node('address');\nvar _elm_lang$html$Html$main_ = _elm_lang$html$Html$node('main');\nvar _elm_lang$html$Html$p = _elm_lang$html$Html$node('p');\nvar _elm_lang$html$Html$hr = _elm_lang$html$Html$node('hr');\nvar _elm_lang$html$Html$pre = _elm_lang$html$Html$node('pre');\nvar _elm_lang$html$Html$blockquote = _elm_lang$html$Html$node('blockquote');\nvar _elm_lang$html$Html$ol = _elm_lang$html$Html$node('ol');\nvar _elm_lang$html$Html$ul = _elm_lang$html$Html$node('ul');\nvar _elm_lang$html$Html$li = _elm_lang$html$Html$node('li');\nvar _elm_lang$html$Html$dl = _elm_lang$html$Html$node('dl');\nvar _elm_lang$html$Html$dt = _elm_lang$html$Html$node('dt');\nvar _elm_lang$html$Html$dd = _elm_lang$html$Html$node('dd');\nvar _elm_lang$html$Html$figure = _elm_lang$html$Html$node('figure');\nvar _elm_lang$html$Html$figcaption = _elm_lang$html$Html$node('figcaption');\nvar _elm_lang$html$Html$div = _elm_lang$html$Html$node('div');\nvar _elm_lang$html$Html$a = _elm_lang$html$Html$node('a');\nvar _elm_lang$html$Html$em = _elm_lang$html$Html$node('em');\nvar _elm_lang$html$Html$strong = _elm_lang$html$Html$node('strong');\nvar _elm_lang$html$Html$small = _elm_lang$html$Html$node('small');\nvar _elm_lang$html$Html$s = _elm_lang$html$Html$node('s');\nvar _elm_lang$html$Html$cite = _elm_lang$html$Html$node('cite');\nvar _elm_lang$html$Html$q = _elm_lang$html$Html$node('q');\nvar _elm_lang$html$Html$dfn = _elm_lang$html$Html$node('dfn');\nvar _elm_lang$html$Html$abbr = _elm_lang$html$Html$node('abbr');\nvar _elm_lang$html$Html$time = _elm_lang$html$Html$node('time');\nvar _elm_lang$html$Html$code = _elm_lang$html$Html$node('code');\nvar _elm_lang$html$Html$var = _elm_lang$html$Html$node('var');\nvar _elm_lang$html$Html$samp = _elm_lang$html$Html$node('samp');\nvar _elm_lang$html$Html$kbd = _elm_lang$html$Html$node('kbd');\nvar _elm_lang$html$Html$sub = _elm_lang$html$Html$node('sub');\nvar _elm_lang$html$Html$sup = _elm_lang$html$Html$node('sup');\nvar _elm_lang$html$Html$i = _elm_lang$html$Html$node('i');\nvar _elm_lang$html$Html$b = _elm_lang$html$Html$node('b');\nvar _elm_lang$html$Html$u = _elm_lang$html$Html$node('u');\nvar _elm_lang$html$Html$mark = _elm_lang$html$Html$node('mark');\nvar _elm_lang$html$Html$ruby = _elm_lang$html$Html$node('ruby');\nvar _elm_lang$html$Html$rt = _elm_lang$html$Html$node('rt');\nvar _elm_lang$html$Html$rp = _elm_lang$html$Html$node('rp');\nvar _elm_lang$html$Html$bdi = _elm_lang$html$Html$node('bdi');\nvar _elm_lang$html$Html$bdo = _elm_lang$html$Html$node('bdo');\nvar _elm_lang$html$Html$span = _elm_lang$html$Html$node('span');\nvar _elm_lang$html$Html$br = _elm_lang$html$Html$node('br');\nvar _elm_lang$html$Html$wbr = _elm_lang$html$Html$node('wbr');\nvar _elm_lang$html$Html$ins = _elm_lang$html$Html$node('ins');\nvar _elm_lang$html$Html$del = _elm_lang$html$Html$node('del');\nvar _elm_lang$html$Html$img = _elm_lang$html$Html$node('img');\nvar _elm_lang$html$Html$iframe = _elm_lang$html$Html$node('iframe');\nvar _elm_lang$html$Html$embed = _elm_lang$html$Html$node('embed');\nvar _elm_lang$html$Html$object = _elm_lang$html$Html$node('object');\nvar _elm_lang$html$Html$param = _elm_lang$html$Html$node('param');\nvar _elm_lang$html$Html$video = _elm_lang$html$Html$node('video');\nvar _elm_lang$html$Html$audio = _elm_lang$html$Html$node('audio');\nvar _elm_lang$html$Html$source = _elm_lang$html$Html$node('source');\nvar _elm_lang$html$Html$track = _elm_lang$html$Html$node('track');\nvar _elm_lang$html$Html$canvas = _elm_lang$html$Html$node('canvas');\nvar _elm_lang$html$Html$math = _elm_lang$html$Html$node('math');\nvar _elm_lang$html$Html$table = _elm_lang$html$Html$node('table');\nvar _elm_lang$html$Html$caption = _elm_lang$html$Html$node('caption');\nvar _elm_lang$html$Html$colgroup = _elm_lang$html$Html$node('colgroup');\nvar _elm_lang$html$Html$col = _elm_lang$html$Html$node('col');\nvar _elm_lang$html$Html$tbody = _elm_lang$html$Html$node('tbody');\nvar _elm_lang$html$Html$thead = _elm_lang$html$Html$node('thead');\nvar _elm_lang$html$Html$tfoot = _elm_lang$html$Html$node('tfoot');\nvar _elm_lang$html$Html$tr = _elm_lang$html$Html$node('tr');\nvar _elm_lang$html$Html$td = _elm_lang$html$Html$node('td');\nvar _elm_lang$html$Html$th = _elm_lang$html$Html$node('th');\nvar _elm_lang$html$Html$form = _elm_lang$html$Html$node('form');\nvar _elm_lang$html$Html$fieldset = _elm_lang$html$Html$node('fieldset');\nvar _elm_lang$html$Html$legend = _elm_lang$html$Html$node('legend');\nvar _elm_lang$html$Html$label = _elm_lang$html$Html$node('label');\nvar _elm_lang$html$Html$input = _elm_lang$html$Html$node('input');\nvar _elm_lang$html$Html$button = _elm_lang$html$Html$node('button');\nvar _elm_lang$html$Html$select = _elm_lang$html$Html$node('select');\nvar _elm_lang$html$Html$datalist = _elm_lang$html$Html$node('datalist');\nvar _elm_lang$html$Html$optgroup = _elm_lang$html$Html$node('optgroup');\nvar _elm_lang$html$Html$option = _elm_lang$html$Html$node('option');\nvar _elm_lang$html$Html$textarea = _elm_lang$html$Html$node('textarea');\nvar _elm_lang$html$Html$keygen = _elm_lang$html$Html$node('keygen');\nvar _elm_lang$html$Html$output = _elm_lang$html$Html$node('output');\nvar _elm_lang$html$Html$progress = _elm_lang$html$Html$node('progress');\nvar _elm_lang$html$Html$meter = _elm_lang$html$Html$node('meter');\nvar _elm_lang$html$Html$details = _elm_lang$html$Html$node('details');\nvar _elm_lang$html$Html$summary = _elm_lang$html$Html$node('summary');\nvar _elm_lang$html$Html$menuitem = _elm_lang$html$Html$node('menuitem');\nvar _elm_lang$html$Html$menu = _elm_lang$html$Html$node('menu');\n\nvar _elm_lang$html$Html_Attributes$map = _elm_lang$virtual_dom$VirtualDom$mapProperty;\nvar _elm_lang$html$Html_Attributes$attribute = _elm_lang$virtual_dom$VirtualDom$attribute;\nvar _elm_lang$html$Html_Attributes$contextmenu = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$attribute, 'contextmenu', value);\n};\nvar _elm_lang$html$Html_Attributes$draggable = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$attribute, 'draggable', value);\n};\nvar _elm_lang$html$Html_Attributes$itemprop = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$attribute, 'itemprop', value);\n};\nvar _elm_lang$html$Html_Attributes$tabindex = function (n) {\n\treturn A2(\n\t\t_elm_lang$html$Html_Attributes$attribute,\n\t\t'tabIndex',\n\t\t_elm_lang$core$Basics$toString(n));\n};\nvar _elm_lang$html$Html_Attributes$charset = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$attribute, 'charset', value);\n};\nvar _elm_lang$html$Html_Attributes$height = function (value) {\n\treturn A2(\n\t\t_elm_lang$html$Html_Attributes$attribute,\n\t\t'height',\n\t\t_elm_lang$core$Basics$toString(value));\n};\nvar _elm_lang$html$Html_Attributes$width = function (value) {\n\treturn A2(\n\t\t_elm_lang$html$Html_Attributes$attribute,\n\t\t'width',\n\t\t_elm_lang$core$Basics$toString(value));\n};\nvar _elm_lang$html$Html_Attributes$formaction = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$attribute, 'formAction', value);\n};\nvar _elm_lang$html$Html_Attributes$list = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$attribute, 'list', value);\n};\nvar _elm_lang$html$Html_Attributes$minlength = function (n) {\n\treturn A2(\n\t\t_elm_lang$html$Html_Attributes$attribute,\n\t\t'minLength',\n\t\t_elm_lang$core$Basics$toString(n));\n};\nvar _elm_lang$html$Html_Attributes$maxlength = function (n) {\n\treturn A2(\n\t\t_elm_lang$html$Html_Attributes$attribute,\n\t\t'maxlength',\n\t\t_elm_lang$core$Basics$toString(n));\n};\nvar _elm_lang$html$Html_Attributes$size = function (n) {\n\treturn A2(\n\t\t_elm_lang$html$Html_Attributes$attribute,\n\t\t'size',\n\t\t_elm_lang$core$Basics$toString(n));\n};\nvar _elm_lang$html$Html_Attributes$form = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$attribute, 'form', value);\n};\nvar _elm_lang$html$Html_Attributes$cols = function (n) {\n\treturn A2(\n\t\t_elm_lang$html$Html_Attributes$attribute,\n\t\t'cols',\n\t\t_elm_lang$core$Basics$toString(n));\n};\nvar _elm_lang$html$Html_Attributes$rows = function (n) {\n\treturn A2(\n\t\t_elm_lang$html$Html_Attributes$attribute,\n\t\t'rows',\n\t\t_elm_lang$core$Basics$toString(n));\n};\nvar _elm_lang$html$Html_Attributes$challenge = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$attribute, 'challenge', value);\n};\nvar _elm_lang$html$Html_Attributes$media = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$attribute, 'media', value);\n};\nvar _elm_lang$html$Html_Attributes$rel = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$attribute, 'rel', value);\n};\nvar _elm_lang$html$Html_Attributes$datetime = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$attribute, 'datetime', value);\n};\nvar _elm_lang$html$Html_Attributes$pubdate = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$attribute, 'pubdate', value);\n};\nvar _elm_lang$html$Html_Attributes$colspan = function (n) {\n\treturn A2(\n\t\t_elm_lang$html$Html_Attributes$attribute,\n\t\t'colspan',\n\t\t_elm_lang$core$Basics$toString(n));\n};\nvar _elm_lang$html$Html_Attributes$rowspan = function (n) {\n\treturn A2(\n\t\t_elm_lang$html$Html_Attributes$attribute,\n\t\t'rowspan',\n\t\t_elm_lang$core$Basics$toString(n));\n};\nvar _elm_lang$html$Html_Attributes$manifest = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$attribute, 'manifest', value);\n};\nvar _elm_lang$html$Html_Attributes$property = _elm_lang$virtual_dom$VirtualDom$property;\nvar _elm_lang$html$Html_Attributes$stringProperty = F2(\n\tfunction (name, string) {\n\t\treturn A2(\n\t\t\t_elm_lang$html$Html_Attributes$property,\n\t\t\tname,\n\t\t\t_elm_lang$core$Json_Encode$string(string));\n\t});\nvar _elm_lang$html$Html_Attributes$class = function (name) {\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'className', name);\n};\nvar _elm_lang$html$Html_Attributes$id = function (name) {\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'id', name);\n};\nvar _elm_lang$html$Html_Attributes$title = function (name) {\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'title', name);\n};\nvar _elm_lang$html$Html_Attributes$accesskey = function ($char) {\n\treturn A2(\n\t\t_elm_lang$html$Html_Attributes$stringProperty,\n\t\t'accessKey',\n\t\t_elm_lang$core$String$fromChar($char));\n};\nvar _elm_lang$html$Html_Attributes$dir = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'dir', value);\n};\nvar _elm_lang$html$Html_Attributes$dropzone = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'dropzone', value);\n};\nvar _elm_lang$html$Html_Attributes$lang = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'lang', value);\n};\nvar _elm_lang$html$Html_Attributes$content = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'content', value);\n};\nvar _elm_lang$html$Html_Attributes$httpEquiv = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'httpEquiv', value);\n};\nvar _elm_lang$html$Html_Attributes$language = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'language', value);\n};\nvar _elm_lang$html$Html_Attributes$src = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'src', value);\n};\nvar _elm_lang$html$Html_Attributes$alt = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'alt', value);\n};\nvar _elm_lang$html$Html_Attributes$preload = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'preload', value);\n};\nvar _elm_lang$html$Html_Attributes$poster = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'poster', value);\n};\nvar _elm_lang$html$Html_Attributes$kind = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'kind', value);\n};\nvar _elm_lang$html$Html_Attributes$srclang = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'srclang', value);\n};\nvar _elm_lang$html$Html_Attributes$sandbox = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'sandbox', value);\n};\nvar _elm_lang$html$Html_Attributes$srcdoc = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'srcdoc', value);\n};\nvar _elm_lang$html$Html_Attributes$type_ = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'type', value);\n};\nvar _elm_lang$html$Html_Attributes$value = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'value', value);\n};\nvar _elm_lang$html$Html_Attributes$defaultValue = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'defaultValue', value);\n};\nvar _elm_lang$html$Html_Attributes$placeholder = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'placeholder', value);\n};\nvar _elm_lang$html$Html_Attributes$accept = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'accept', value);\n};\nvar _elm_lang$html$Html_Attributes$acceptCharset = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'acceptCharset', value);\n};\nvar _elm_lang$html$Html_Attributes$action = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'action', value);\n};\nvar _elm_lang$html$Html_Attributes$autocomplete = function (bool) {\n\treturn A2(\n\t\t_elm_lang$html$Html_Attributes$stringProperty,\n\t\t'autocomplete',\n\t\tbool ? 'on' : 'off');\n};\nvar _elm_lang$html$Html_Attributes$enctype = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'enctype', value);\n};\nvar _elm_lang$html$Html_Attributes$method = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'method', value);\n};\nvar _elm_lang$html$Html_Attributes$name = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'name', value);\n};\nvar _elm_lang$html$Html_Attributes$pattern = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'pattern', value);\n};\nvar _elm_lang$html$Html_Attributes$for = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'htmlFor', value);\n};\nvar _elm_lang$html$Html_Attributes$max = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'max', value);\n};\nvar _elm_lang$html$Html_Attributes$min = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'min', value);\n};\nvar _elm_lang$html$Html_Attributes$step = function (n) {\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'step', n);\n};\nvar _elm_lang$html$Html_Attributes$wrap = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'wrap', value);\n};\nvar _elm_lang$html$Html_Attributes$usemap = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'useMap', value);\n};\nvar _elm_lang$html$Html_Attributes$shape = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'shape', value);\n};\nvar _elm_lang$html$Html_Attributes$coords = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'coords', value);\n};\nvar _elm_lang$html$Html_Attributes$keytype = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'keytype', value);\n};\nvar _elm_lang$html$Html_Attributes$align = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'align', value);\n};\nvar _elm_lang$html$Html_Attributes$cite = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'cite', value);\n};\nvar _elm_lang$html$Html_Attributes$href = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'href', value);\n};\nvar _elm_lang$html$Html_Attributes$target = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'target', value);\n};\nvar _elm_lang$html$Html_Attributes$downloadAs = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'download', value);\n};\nvar _elm_lang$html$Html_Attributes$hreflang = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'hreflang', value);\n};\nvar _elm_lang$html$Html_Attributes$ping = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'ping', value);\n};\nvar _elm_lang$html$Html_Attributes$start = function (n) {\n\treturn A2(\n\t\t_elm_lang$html$Html_Attributes$stringProperty,\n\t\t'start',\n\t\t_elm_lang$core$Basics$toString(n));\n};\nvar _elm_lang$html$Html_Attributes$headers = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'headers', value);\n};\nvar _elm_lang$html$Html_Attributes$scope = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'scope', value);\n};\nvar _elm_lang$html$Html_Attributes$boolProperty = F2(\n\tfunction (name, bool) {\n\t\treturn A2(\n\t\t\t_elm_lang$html$Html_Attributes$property,\n\t\t\tname,\n\t\t\t_elm_lang$core$Json_Encode$bool(bool));\n\t});\nvar _elm_lang$html$Html_Attributes$hidden = function (bool) {\n\treturn A2(_elm_lang$html$Html_Attributes$boolProperty, 'hidden', bool);\n};\nvar _elm_lang$html$Html_Attributes$contenteditable = function (bool) {\n\treturn A2(_elm_lang$html$Html_Attributes$boolProperty, 'contentEditable', bool);\n};\nvar _elm_lang$html$Html_Attributes$spellcheck = function (bool) {\n\treturn A2(_elm_lang$html$Html_Attributes$boolProperty, 'spellcheck', bool);\n};\nvar _elm_lang$html$Html_Attributes$async = function (bool) {\n\treturn A2(_elm_lang$html$Html_Attributes$boolProperty, 'async', bool);\n};\nvar _elm_lang$html$Html_Attributes$defer = function (bool) {\n\treturn A2(_elm_lang$html$Html_Attributes$boolProperty, 'defer', bool);\n};\nvar _elm_lang$html$Html_Attributes$scoped = function (bool) {\n\treturn A2(_elm_lang$html$Html_Attributes$boolProperty, 'scoped', bool);\n};\nvar _elm_lang$html$Html_Attributes$autoplay = function (bool) {\n\treturn A2(_elm_lang$html$Html_Attributes$boolProperty, 'autoplay', bool);\n};\nvar _elm_lang$html$Html_Attributes$controls = function (bool) {\n\treturn A2(_elm_lang$html$Html_Attributes$boolProperty, 'controls', bool);\n};\nvar _elm_lang$html$Html_Attributes$loop = function (bool) {\n\treturn A2(_elm_lang$html$Html_Attributes$boolProperty, 'loop', bool);\n};\nvar _elm_lang$html$Html_Attributes$default = function (bool) {\n\treturn A2(_elm_lang$html$Html_Attributes$boolProperty, 'default', bool);\n};\nvar _elm_lang$html$Html_Attributes$seamless = function (bool) {\n\treturn A2(_elm_lang$html$Html_Attributes$boolProperty, 'seamless', bool);\n};\nvar _elm_lang$html$Html_Attributes$checked = function (bool) {\n\treturn A2(_elm_lang$html$Html_Attributes$boolProperty, 'checked', bool);\n};\nvar _elm_lang$html$Html_Attributes$selected = function (bool) {\n\treturn A2(_elm_lang$html$Html_Attributes$boolProperty, 'selected', bool);\n};\nvar _elm_lang$html$Html_Attributes$autofocus = function (bool) {\n\treturn A2(_elm_lang$html$Html_Attributes$boolProperty, 'autofocus', bool);\n};\nvar _elm_lang$html$Html_Attributes$disabled = function (bool) {\n\treturn A2(_elm_lang$html$Html_Attributes$boolProperty, 'disabled', bool);\n};\nvar _elm_lang$html$Html_Attributes$multiple = function (bool) {\n\treturn A2(_elm_lang$html$Html_Attributes$boolProperty, 'multiple', bool);\n};\nvar _elm_lang$html$Html_Attributes$novalidate = function (bool) {\n\treturn A2(_elm_lang$html$Html_Attributes$boolProperty, 'noValidate', bool);\n};\nvar _elm_lang$html$Html_Attributes$readonly = function (bool) {\n\treturn A2(_elm_lang$html$Html_Attributes$boolProperty, 'readOnly', bool);\n};\nvar _elm_lang$html$Html_Attributes$required = function (bool) {\n\treturn A2(_elm_lang$html$Html_Attributes$boolProperty, 'required', bool);\n};\nvar _elm_lang$html$Html_Attributes$ismap = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$boolProperty, 'isMap', value);\n};\nvar _elm_lang$html$Html_Attributes$download = function (bool) {\n\treturn A2(_elm_lang$html$Html_Attributes$boolProperty, 'download', bool);\n};\nvar _elm_lang$html$Html_Attributes$reversed = function (bool) {\n\treturn A2(_elm_lang$html$Html_Attributes$boolProperty, 'reversed', bool);\n};\nvar _elm_lang$html$Html_Attributes$classList = function (list) {\n\treturn _elm_lang$html$Html_Attributes$class(\n\t\tA2(\n\t\t\t_elm_lang$core$String$join,\n\t\t\t' ',\n\t\t\tA2(\n\t\t\t\t_elm_lang$core$List$map,\n\t\t\t\t_elm_lang$core$Tuple$first,\n\t\t\t\tA2(_elm_lang$core$List$filter, _elm_lang$core$Tuple$second, list))));\n};\nvar _elm_lang$html$Html_Attributes$style = _elm_lang$virtual_dom$VirtualDom$style;\n\n\n/*\n * Copyright (c) 2010 Mozilla Corporation\n * Copyright (c) 2010 Vladimir Vukicevic\n * Copyright (c) 2013 John Mayer\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/*\n * File: mjs\n *\n * Vector and Matrix math utilities for JavaScript, optimized for WebGL.\n * Edited to work with the Elm Programming Language\n */\n\nvar _elm_community$linear_algebra$Native_MJS = function() {\n\n\n    /*\n     * Constant: MJS_VERSION\n     *\n     * mjs version number aa.bb.cc, encoded as an integer of the form:\n     * 0xaabbcc.\n     */\n    var MJS_VERSION = 0x000000;\n\n    /*\n     * Constant: MJS_DO_ASSERT\n     *\n     * Enables or disables runtime assertions.\n     *\n     * For potentially more performance, the assert methods can be\n     * commented out in each place where they are called.\n     */\n    // var MJS_DO_ASSERT = false;\n\n    /*\n     * Constant: MJS_FLOAT_ARRAY_TYPE\n     *\n     * The base float array type.  By default, WebGLFloatArray.\n     *\n     * mjs can work with any array-like elements, but if an array\n     * creation is requested, it will create an array of the type\n     * MJS_FLOAT_ARRAY_TYPE.  Also, the builtin constants such as (M4x4.I)\n     * will be of this type.\n     */\n    //MJS_FLOAT_ARRAY_TYPE = WebGLFloatArray;\n    //MJS_FLOAT_ARRAY_TYPE = Float32Array;\n    var MJS_FLOAT_ARRAY_TYPE = Float64Array;\n    //MJS_FLOAT_ARRAY_TYPE = Array;\n\n    /*\n    if (MJS_DO_ASSERT) {\n        function MathUtils_assert(cond, msg) {\n            if (!cond) {\n                throw \"Assertion failed: \" + msg;\n            }\n        }\n    } else {\n    */\n        function MathUtils_assert() { }\n    //}\n\n    /*\n     * Class: V3\n     *\n     * Methods for working with 3-element vectors.  A vector is represented by a 3-element array.\n     * Any valid JavaScript array type may be used, but if new\n     * vectors are created they are created using the configured MJS_FLOAT_ARRAY_TYPE.\n     */\n\n    var V3 = { };\n\n    V3._temp1 = new MJS_FLOAT_ARRAY_TYPE(3);\n    V3._temp2 = new MJS_FLOAT_ARRAY_TYPE(3);\n    V3._temp3 = new MJS_FLOAT_ARRAY_TYPE(3);\n\n    if (MJS_FLOAT_ARRAY_TYPE == Array) {\n        V3.x = [1.0, 0.0, 0.0];\n        V3.y = [0.0, 1.0, 0.0];\n        V3.z = [0.0, 0.0, 1.0];\n\n        V3.$ = function V3_$(x, y, z) {\n            return [x, y, z];\n        };\n    } else {\n        V3.x = new MJS_FLOAT_ARRAY_TYPE([1.0, 0.0, 0.0]);\n        V3.y = new MJS_FLOAT_ARRAY_TYPE([0.0, 1.0, 0.0]);\n        V3.z = new MJS_FLOAT_ARRAY_TYPE([0.0, 0.0, 1.0]);\n\n        /*\n         * Function: V3.$\n         *\n         * Creates a new 3-element vector with the given values.\n         *\n         * Parameters:\n         *\n         *   x,y,z - the 3 elements of the new vector.\n         *\n         * Returns:\n         *\n         * A new vector containing with the given argument values.\n         */\n\n        V3.$ = function V3_$(x, y, z) {\n            return new MJS_FLOAT_ARRAY_TYPE([x, y, z]);\n        };\n    }\n\n    V3.u = V3.x;\n    V3.v = V3.y;\n\n    V3.getX = function V3_getX(a) {\n        return a[0];\n    }\n    V3.getY = function V3_getY(a) {\n        return a[1];\n    }\n    V3.getZ = function V3_getZ(a) {\n        return a[2];\n    }\n    V3.setX = function V3_setX(x, a) {\n        return new MJS_FLOAT_ARRAY_TYPE([x, a[1], a[2]]);\n    }\n    V3.setY = function V3_setY(y, a) {\n        return new MJS_FLOAT_ARRAY_TYPE([a[0], y, a[2]]);\n    }\n    V3.setZ = function V3_setZ(z, a) {\n        return new MJS_FLOAT_ARRAY_TYPE([a[0], a[1], z]);\n    }\n\n    V3.toTuple3 = function V3_toTuple3(a) {\n      return {\n        ctor:\"_Tuple3\",\n        _0:a[0],\n        _1:a[1],\n        _2:a[2]\n      };\n    };\n    V3.fromTuple3 = function V3_fromTuple3(t) {\n      return new MJS_FLOAT_ARRAY_TYPE([t._0, t._1, t._2]);\n    };\n\n    V3.toRecord3 = function V3_toRecord3(a) {\n      return {\n        _:{},\n        x:a[0],\n        y:a[1],\n        z:a[2]\n      };\n    };\n    V3.fromRecord3 = function V3_fromRecord3(r) {\n      return new MJS_FLOAT_ARRAY_TYPE([r.x, r.y, r.z]);\n    };\n\n    /*\n     * Function: V3.add\n     *\n     * Perform r = a + b.\n     *\n     * Parameters:\n     *\n     *   a - the first vector operand\n     *   b - the second vector operand\n     *   r - optional vector to store the result in\n     *\n     * Returns:\n     *\n     *   If r is specified, returns r after performing the operation.\n     *   Otherwise, returns a new 3-element vector with the result.\n     */\n    V3.add = function V3_add(a, b, r) {\n        //MathUtils_assert(a.length == 3, \"a.length == 3\");\n        //MathUtils_assert(b.length == 3, \"b.length == 3\");\n        //MathUtils_assert(r == undefined || r.length == 3, \"r == undefined || r.length == 3\");\n\n        if (r == undefined)\n            r = new MJS_FLOAT_ARRAY_TYPE(3);\n        r[0] = a[0] + b[0];\n        r[1] = a[1] + b[1];\n        r[2] = a[2] + b[2];\n        return r;\n    };\n\n    /*\n     * Function: V3.sub\n     *\n     * Perform\n     * r = a - b.\n     *\n     * Parameters:\n     *\n     *   a - the first vector operand\n     *   b - the second vector operand\n     *   r - optional vector to store the result in\n     *\n     * Returns:\n     *\n     *   If r is specified, returns r after performing the operation.\n     *   Otherwise, returns a new 3-element vector with the result.\n     */\n    V3.sub = function V3_sub(a, b, r) {\n        //MathUtils_assert(a.length == 3, \"a.length == 3\");\n        //MathUtils_assert(b.length == 3, \"b.length == 3\");\n        //MathUtils_assert(r == undefined || r.length == 3, \"r == undefined || r.length == 3\");\n\n        if (r == undefined)\n            r = new MJS_FLOAT_ARRAY_TYPE(3);\n        r[0] = a[0] - b[0];\n        r[1] = a[1] - b[1];\n        r[2] = a[2] - b[2];\n        return r;\n    };\n\n    /*\n     * Function: V3.neg\n     *\n     * Perform\n     * r = - a.\n     *\n     * Parameters:\n     *\n     *   a - the vector operand\n     *   r - optional vector to store the result in\n     *\n     * Returns:\n     *\n     *   If r is specified, returns r after performing the operation.\n     *   Otherwise, returns a new 3-element vector with the result.\n     */\n    V3.neg = function V3_neg(a, r) {\n        //MathUtils_assert(a.length == 3, \"a.length == 3\");\n        //MathUtils_assert(r == undefined || r.length == 3, \"r == undefined || r.length == 3\");\n\n        if (r == undefined)\n            r = new MJS_FLOAT_ARRAY_TYPE(3);\n        r[0] = - a[0];\n        r[1] = - a[1];\n        r[2] = - a[2];\n        return r;\n    };\n\n    /*\n     * Function: V3.direction\n     *\n     * Perform\n     * r = (a - b) / |a - b|.  The result is the normalized\n     * direction from a to b.\n     *\n     * Parameters:\n     *\n     *   a - the first vector operand\n     *   b - the second vector operand\n     *   r - optional vector to store the result in\n     *\n     * Returns:\n     *\n     *   If r is specified, returns r after performing the operation.\n     *   Otherwise, returns a new 3-element vector with the result.\n     */\n    V3.direction = function V3_direction(a, b, r) {\n        //MathUtils_assert(a.length == 3, \"a.length == 3\");\n        //MathUtils_assert(b.length == 3, \"b.length == 3\");\n        //MathUtils_assert(r == undefined || r.length == 3, \"r == undefined || r.length == 3\");\n\n        if (r == undefined)\n            r = new MJS_FLOAT_ARRAY_TYPE(3);\n        return V3.normalize(V3.sub(a, b, r), r);\n    };\n\n    /*\n     * Function: V3.length\n     *\n     * Perform r = |a|.\n     *\n     * Parameters:\n     *\n     *   a - the vector operand\n     *\n     * Returns:\n     *\n     *   The length of the given vector.\n     */\n    V3.length = function V3_length(a) {\n        //MathUtils_assert(a.length == 3, \"a.length == 3\");\n\n        return Math.sqrt(a[0]*a[0] + a[1]*a[1] + a[2]*a[2]);\n    };\n\n    /*\n     * Function: V3.lengthSquard\n     *\n     * Perform r = |a|*|a|.\n     *\n     * Parameters:\n     *\n     *   a - the vector operand\n     *\n     * Returns:\n     *\n     *   The square of the length of the given vector.\n     */\n    V3.lengthSquared = function V3_lengthSquared(a) {\n        //MathUtils_assert(a.length == 3, \"a.length == 3\");\n\n        return a[0]*a[0] + a[1]*a[1] + a[2]*a[2];\n    };\n\n    V3.distance = function V3_distance(a, b) {\n        var dx = a[0] - b[0];\n        var dy = a[1] - b[1];\n        var dz = a[2] - b[2];\n        return Math.sqrt(dx * dx + dy * dy + dz * dz);\n    };\n\n    V3.distanceSquared = function V3_distanceSquared(a, b) {\n        var dx = a[0] - b[0];\n        var dy = a[1] - b[1];\n        var dz = a[2] - b[2];\n        return dx * dx + dy * dy + dz * dz;\n    };\n\n    /*\n     * Function: V3.normalize\n     *\n     * Perform r = a / |a|.\n     *\n     * Parameters:\n     *\n     *   a - the vector operand\n     *   r - optional vector to store the result in\n     *\n     * Returns:\n     *\n     *   If r is specified, returns r after performing the operation.\n     *   Otherwise, returns a new 3-element vector with the result.\n     */\n    V3.normalize = function V3_normalize(a, r) {\n        //MathUtils_assert(a.length == 3, \"a.length == 3\");\n        //MathUtils_assert(r == undefined || r.length == 3, \"r == undefined || r.length == 3\");\n\n        if (r == undefined)\n            r = new MJS_FLOAT_ARRAY_TYPE(3);\n        var im = 1.0 / V3.length(a);\n        r[0] = a[0] * im;\n        r[1] = a[1] * im;\n        r[2] = a[2] * im;\n        return r;\n    };\n\n    /*\n     * Function: V3.scale\n     *\n     * Perform r = k * a.\n     *\n     * Parameters:\n     *\n     *   a - the vector operand\n     *   k - a scalar value\n     *   r - optional vector to store the result in\n     *\n     * Returns:\n     *\n     *   If r is specified, returns r after performing the operation.\n     *   Otherwise, returns a new 3-element vector with the result.\n     */\n    V3.scale = function V3_scale(k, a, r) {\n        //MathUtils_assert(a.length == 3, \"a.length == 3\");\n        //MathUtils_assert(r == undefined || r.length == 3, \"r == undefined || r.length == 3\");\n\n        if (r == undefined)\n            r = new MJS_FLOAT_ARRAY_TYPE(3);\n        r[0] = a[0] * k;\n        r[1] = a[1] * k;\n        r[2] = a[2] * k;\n        return r;\n    };\n\n    /*\n     * Function: V3.dot\n     *\n     * Perform\n     * r = dot(a, b).\n     *\n     * Parameters:\n     *\n     *   a - the first vector operand\n     *   b - the second vector operand\n     *\n     * Returns:\n     *\n     *   The dot product of a and b.\n     */\n    V3.dot = function V3_dot(a, b) {\n        //MathUtils_assert(a.length == 3, \"a.length == 3\");\n        //MathUtils_assert(b.length == 3, \"b.length == 3\");\n\n        return a[0] * b[0] +\n            a[1] * b[1] +\n            a[2] * b[2];\n    };\n\n    /*\n     * Function: V3.cross\n     *\n     * Perform r = a x b.\n     *\n     * Parameters:\n     *\n     *   a - the first vector operand\n     *   b - the second vector operand\n     *   r - optional vector to store the result in\n     *\n     * Returns:\n     *\n     *   If r is specified, returns r after performing the operation.\n     *   Otherwise, returns a new 3-element vector with the result.\n     */\n    V3.cross = function V3_cross(a, b, r) {\n        //MathUtils_assert(a.length == 3, \"a.length == 3\");\n        //MathUtils_assert(b.length == 3, \"b.length == 3\");\n        //MathUtils_assert(r == undefined || r.length == 3, \"r == undefined || r.length == 3\");\n\n        if (r == undefined)\n            r = new MJS_FLOAT_ARRAY_TYPE(3);\n        r[0] = a[1]*b[2] - a[2]*b[1];\n        r[1] = a[2]*b[0] - a[0]*b[2];\n        r[2] = a[0]*b[1] - a[1]*b[0];\n        return r;\n    };\n\n    /*\n     * Function: V3.mul4x4\n     *\n     * Perform\n     * r = m * v.\n     *\n     * Parameters:\n     *\n     *   m - the 4x4 matrix operand\n     *   v - the 3-element vector operand\n     *   r - optional vector to store the result in\n     *\n     * Returns:\n     *\n     *   If r is specified, returns r after performing the operation.\n     *   Otherwise, returns a new 3-element vector with the result.\n     *   The 4-element result vector is divided by the w component\n     *   and returned as a 3-element vector.\n     */\n    V3.mul4x4 = function V3_mul4x4(m, v, r) {\n        //MathUtils_assert(m.length == 16, \"m.length == 16\");\n        //MathUtils_assert(v.length == 3, \"v.length == 3\");\n        //MathUtils_assert(r == undefined || r.length == 3, \"r == undefined || r.length == 3\");\n\n        var w;\n        var tmp = V3._temp1;\n        if (r == undefined)\n            r = new MJS_FLOAT_ARRAY_TYPE(3);\n        tmp[0] = m[ 3];\n        tmp[1] = m[ 7];\n        tmp[2] = m[11];\n        w    =  V3.dot(v, tmp) + m[15];\n        tmp[0] = m[ 0];\n        tmp[1] = m[ 4];\n        tmp[2] = m[ 8];\n        r[0] = (V3.dot(v, tmp) + m[12])/w;\n        tmp[0] = m[ 1];\n        tmp[1] = m[ 5];\n        tmp[2] = m[ 9];\n        r[1] = (V3.dot(v, tmp) + m[13])/w;\n        tmp[0] = m[ 2];\n        tmp[1] = m[ 6];\n        tmp[2] = m[10];\n        r[2] = (V3.dot(v, tmp) + m[14])/w;\n        return r;\n    };\n\n    /*\n     * Class: M4x4\n     *\n     * Methods for working with 4x4 matrices.  A matrix is represented by a 16-element array\n     * in column-major order.  Any valid JavaScript array type may be used, but if new\n     * matrices are created they are created using the configured MJS_FLOAT_ARRAY_TYPE.\n     */\n\n    var M4x4 = { };\n\n    M4x4._temp1 = new MJS_FLOAT_ARRAY_TYPE(16);\n    M4x4._temp2 = new MJS_FLOAT_ARRAY_TYPE(16);\n\n    if (MJS_FLOAT_ARRAY_TYPE == Array) {\n        M4x4.I = [1.0, 0.0, 0.0, 0.0,\n            0.0, 1.0, 0.0, 0.0,\n                0.0, 0.0, 1.0, 0.0,\n                0.0, 0.0, 0.0, 1.0];\n\n        M4x4.$ = function M4x4_$(m00, m01, m02, m03,\n                m04, m05, m06, m07,\n                m08, m09, m10, m11,\n                m12, m13, m14, m15)\n        {\n            return [m00, m01, m02, m03,\n            m04, m05, m06, m07,\n            m08, m09, m10, m11,\n            m12, m13, m14, m15];\n        };\n    } else {\n        M4x4.I = new MJS_FLOAT_ARRAY_TYPE([1.0, 0.0, 0.0, 0.0,\n                0.0, 1.0, 0.0, 0.0,\n                0.0, 0.0, 1.0, 0.0,\n                0.0, 0.0, 0.0, 1.0]);\n\n        /*\n         * Function: M4x4.$\n         *\n         * Creates a new 4x4 matrix with the given values.\n         *\n         * Parameters:\n         *\n         *   m00..m15 - the 16 elements of the new matrix.\n         *\n         * Returns:\n         *\n         * A new matrix filled with the given argument values.\n         */\n        M4x4.$ = function M4x4_$(m00, m01, m02, m03,\n                m04, m05, m06, m07,\n                m08, m09, m10, m11,\n                m12, m13, m14, m15)\n        {\n            return new MJS_FLOAT_ARRAY_TYPE([m00, m01, m02, m03,\n                    m04, m05, m06, m07,\n                    m08, m09, m10, m11,\n                    m12, m13, m14, m15]);\n        };\n    }\n\n    M4x4.identity = M4x4.I;\n\n    /*\n     * Function: M4x4.fromList\n     *\n     * Creates a new 4x4 matrix with the given values.\n     *\n     * Parameters:\n     *\n     *   list - A list of the 16 elements of the new matrix.\n     *\n     * Returns:\n     *\n     * Just a new matrix filled with the given argument values.\n     * Nothing, if the length of the list is not exactly 16.\n     */\n    M4x4.fromList = function(list) {\n        var m = _elm_lang$core$Native_List.toArray(list);\n        if (m.length === 16) {\n            return _elm_lang$core$Maybe$Just(M4x4.$(m[0], m[1], m[2], m[3], m[4], m[5], m[6], m[7], m[8], m[9], m[10], m[11], m[12], m[13], m[14], m[15]));\n        } else {\n            return _elm_lang$core$Maybe$Nothing;\n        }\n    }\n\n    /*\n     * Function: M4x4.fromRecord\n     *\n     * Creates a new 4x4 matrix from the given record.\n     *\n     * Parameters:\n     *\n     * A record with m11..m44 attributes - the 16 elements of the new matrix\n     *\n     * Returns:\n     *\n     * A new matrix filled with the values from the given record.\n     */\n    M4x4.fromRecord = function(r) {\n        return new MJS_FLOAT_ARRAY_TYPE([\n            r.m11, r.m21, r.m31, r.m41,\n            r.m12, r.m22, r.m32, r.m42,\n            r.m13, r.m23, r.m33, r.m43,\n            r.m14, r.m24, r.m34, r.m44\n        ]);\n    }\n\n    /*\n     * Function: M4x4.toRecord\n     *\n     * Creates a record from the given matrix\n     *\n     * Parameters:\n     *\n     * A 4x4 matrix\n     *\n     * Returns:\n     *\n     * A new record with m11..m44 attributes - the 16 elements of the given matrix\n     */\n    M4x4.toRecord = function(m) {\n        return {\n            m11: m[0], m21: m[1], m31: m[2], m41: m[3],\n            m12: m[4], m22: m[5], m32: m[6], m42: m[7],\n            m13: m[8], m23: m[9], m33: m[10], m43: m[11],\n            m14: m[12], m24: m[13], m34: m[14], m44: m[15]\n        };\n    }\n\n    /*\n     * Function: M4x4.topLeft3x3\n     *\n     * Return the top left 3x3 matrix from the given 4x4 matrix m.\n     *\n     * Parameters:\n     *\n     *   m - the matrix\n     *   r - optional 3x3 matrix to store the result in\n     *\n     * Returns:\n     *\n     *   If r is specified, returns r after performing the operation.\n     *   Otherwise, returns a new 3x3 matrix with the result.\n     */\n    M4x4.topLeft3x3 = function M4x4_topLeft3x3(m, r) {\n        //MathUtils_assert(m.length == 16, \"m.length == 16\");\n        //MathUtils_assert(r == undefined || r.length == 9, \"r == undefined || r.length == 9\");\n\n        if (r == undefined)\n            r = new MJS_FLOAT_ARRAY_TYPE(9);\n        r[0] = m[0]; r[1] = m[1]; r[2] = m[2];\n        r[3] = m[4]; r[4] = m[5]; r[5] = m[6];\n        r[6] = m[8]; r[7] = m[9]; r[8] = m[10];\n        return r;\n    };\n\n    /*\n     * Function: M4x4.inverse\n     *\n     * Computes the inverse of the given matrix m.\n     *\n     * Parameters:\n     *\n     *   m - the matrix\n     *   r - optional 4x4 matrix to store the result in\n     *\n     * Returns:\n     *\n     *   If r is specified, returns r after performing the operation.\n     *   Otherwise, returns a new 4x4 matrix with the result.\n     */\n    M4x4.inverse = function M4x4_inverse(m, r) {\n        if (r == undefined) {\n            r = new MJS_FLOAT_ARRAY_TYPE(16);\n        }\n\n        r[0] = m[5] * m[10] * m[15] - m[5] * m[11] * m[14] - m[9] * m[6] * m[15] +\n            m[9] * m[7] * m[14] + m[13] * m[6] * m[11] - m[13] * m[7] * m[10];\n        r[4] = -m[4] * m[10] * m[15] + m[4] * m[11] * m[14] + m[8] * m[6] * m[15] -\n            m[8] * m[7] * m[14] - m[12] * m[6] * m[11] + m[12] * m[7] * m[10];\n        r[8] = m[4] * m[9] * m[15] - m[4] * m[11] * m[13] - m[8] * m[5] * m[15] +\n            m[8] * m[7] * m[13] + m[12] * m[5] * m[11] - m[12] * m[7] * m[9];\n        r[12] = -m[4] * m[9] * m[14] + m[4] * m[10] * m[13] + m[8] * m[5] * m[14] -\n            m[8] * m[6] * m[13] - m[12] * m[5] * m[10] + m[12] * m[6] * m[9];\n        r[1] = -m[1] * m[10] * m[15] + m[1] * m[11] * m[14] + m[9] * m[2] * m[15] -\n            m[9] * m[3] * m[14] - m[13] * m[2] * m[11] + m[13] * m[3] * m[10];\n        r[5] = m[0] * m[10] * m[15] - m[0] * m[11] * m[14] - m[8] * m[2] * m[15] +\n            m[8] * m[3] * m[14] + m[12] * m[2] * m[11] - m[12] * m[3] * m[10];\n        r[9] = -m[0] * m[9] * m[15] + m[0] * m[11] * m[13] + m[8] * m[1] * m[15] -\n            m[8] * m[3] * m[13] - m[12] * m[1] * m[11] + m[12] * m[3] * m[9];\n        r[13] = m[0] * m[9] * m[14] - m[0] * m[10] * m[13] - m[8] * m[1] * m[14] +\n            m[8] * m[2] * m[13] + m[12] * m[1] * m[10] - m[12] * m[2] * m[9];\n        r[2] = m[1] * m[6] * m[15] - m[1] * m[7] * m[14] - m[5] * m[2] * m[15] +\n            m[5] * m[3] * m[14] + m[13] * m[2] * m[7] - m[13] * m[3] * m[6];\n        r[6] = -m[0] * m[6] * m[15] + m[0] * m[7] * m[14] + m[4] * m[2] * m[15] -\n            m[4] * m[3] * m[14] - m[12] * m[2] * m[7] + m[12] * m[3] * m[6];\n        r[10] = m[0] * m[5] * m[15] - m[0] * m[7] * m[13] - m[4] * m[1] * m[15] +\n            m[4] * m[3] * m[13] + m[12] * m[1] * m[7] - m[12] * m[3] * m[5];\n        r[14] = -m[0] * m[5] * m[14] + m[0] * m[6] * m[13] + m[4] * m[1] * m[14] -\n            m[4] * m[2] * m[13] - m[12] * m[1] * m[6] + m[12] * m[2] * m[5];\n        r[3] = -m[1] * m[6] * m[11] + m[1] * m[7] * m[10] + m[5] * m[2] * m[11] -\n            m[5] * m[3] * m[10] - m[9] * m[2] * m[7] + m[9] * m[3] * m[6];\n        r[7] = m[0] * m[6] * m[11] - m[0] * m[7] * m[10] - m[4] * m[2] * m[11] +\n            m[4] * m[3] * m[10] + m[8] * m[2] * m[7] - m[8] * m[3] * m[6];\n        r[11] = -m[0] * m[5] * m[11] + m[0] * m[7] * m[9] + m[4] * m[1] * m[11] -\n            m[4] * m[3] * m[9] - m[8] * m[1] * m[7] + m[8] * m[3] * m[5];\n        r[15] = m[0] * m[5] * m[10] - m[0] * m[6] * m[9] - m[4] * m[1] * m[10] +\n            m[4] * m[2] * m[9] + m[8] * m[1] * m[6] - m[8] * m[2] * m[5];\n\n        var det = m[0] * r[0] + m[1] * r[4] + m[2] * r[8] + m[3] * r[12];\n\n        if (det === 0) {\n            return _elm_lang$core$Maybe$Nothing;\n        }\n\n        det = 1.0 / det;\n\n        for (var i = 0; i < 16; i = i + 1) {\n            r[i] = r[i] * det;\n        }\n\n        return _elm_lang$core$Maybe$Just(r);\n    };\n\n    /*\n     * Function: M4x4.inverseOrthonormal\n     *\n     * Computes the inverse of the given matrix m, assuming that\n     * the matrix is orthonormal.\n     *\n     * Parameters:\n     *\n     *   m - the matrix\n     *   r - optional 4x4 matrix to store the result in\n     *\n     * Returns:\n     *\n     *   If r is specified, returns r after performing the operation.\n     *   Otherwise, returns a new 4x4 matrix with the result.\n     */\n    M4x4.inverseOrthonormal = function M4x4_inverseOrthonormal(m, r) {\n        //MathUtils_assert(m.length == 16, \"m.length == 16\");\n        //MathUtils_assert(r == undefined || r.length == 16, \"r == undefined || r.length == 16\");\n        //MathUtils_assert(m != r, \"m != r\");\n\n        if (r == undefined)\n            r = new MJS_FLOAT_ARRAY_TYPE(16);\n        M4x4.transpose(m, r);\n        var t = [m[12], m[13], m[14]];\n        r[3] = r[7] = r[11] = 0;\n        r[12] = -V3.dot([r[0], r[4], r[8]], t);\n        r[13] = -V3.dot([r[1], r[5], r[9]], t);\n        r[14] = -V3.dot([r[2], r[6], r[10]], t);\n        return r;\n    };\n\n    /*\n     * Function: M4x4.inverseTo3x3\n     *\n     * Computes the inverse of the given matrix m, but calculates\n     * only the top left 3x3 values of the result.\n     *\n     * Parameters:\n     *\n     *   m - the matrix\n     *   r - optional 3x3 matrix to store the result in\n     *\n     * Returns:\n     *\n     *   If r is specified, returns r after performing the operation.\n     *   Otherwise, returns a new 3x3 matrix with the result.\n     */\n    M4x4.inverseTo3x3 = function M4x4_inverseTo3x3(m, r) {\n        //MathUtils_assert(m.length == 16, \"m.length == 16\");\n        //MathUtils_assert(r == undefined || r.length == 9, \"r == undefined || r.length == 9\");\n\n        if (r == undefined)\n            r = new MJS_FLOAT_ARRAY_TYPE(9);\n\n        var a11 = m[10]*m[5]-m[6]*m[9],\n            a21 = -m[10]*m[1]+m[2]*m[9],\n            a31 = m[6]*m[1]-m[2]*m[5],\n            a12 = -m[10]*m[4]+m[6]*m[8],\n            a22 = m[10]*m[0]-m[2]*m[8],\n            a32 = -m[6]*m[0]+m[2]*m[4],\n            a13 = m[9]*m[4]-m[5]*m[8],\n            a23 = -m[9]*m[0]+m[1]*m[8],\n            a33 = m[5]*m[0]-m[1]*m[4];\n        var det = m[0]*(a11) + m[1]*(a12) + m[2]*(a13);\n        if (det == 0) // no inverse\n            throw \"matrix not invertible\";\n        var idet = 1.0 / det;\n\n        r[0] = idet*a11;\n        r[1] = idet*a21;\n        r[2] = idet*a31;\n        r[3] = idet*a12;\n        r[4] = idet*a22;\n        r[5] = idet*a32;\n        r[6] = idet*a13;\n        r[7] = idet*a23;\n        r[8] = idet*a33;\n\n        return r;\n    };\n\n    /*\n     * Function: M4x4.makeFrustum\n     *\n     * Creates a matrix for a projection frustum with the given parameters.\n     *\n     * Parameters:\n     *\n     *   left - the left coordinate of the frustum\n     *   right- the right coordinate of the frustum\n     *   bottom - the bottom coordinate of the frustum\n     *   top - the top coordinate of the frustum\n     *   znear - the near z distance of the frustum\n     *   zfar - the far z distance of the frustum\n     *   r - optional 4x4 matrix to store the result in\n     *\n     * Returns:\n     *\n     *   If r is specified, returns r after creating the projection matrix.\n     *   Otherwise, returns a new 4x4 matrix.\n     */\n    M4x4.makeFrustum = function M4x4_makeFrustum(left, right, bottom, top, znear, zfar, r) {\n        //MathUtils_assert(r == undefined || r.length == 16, \"r == undefined || r.length == 16\");\n\n        if (r == undefined)\n            r = new MJS_FLOAT_ARRAY_TYPE(16);\n\n        var X = 2*znear/(right-left);\n        var Y = 2*znear/(top-bottom);\n        var A = (right+left)/(right-left);\n        var B = (top+bottom)/(top-bottom);\n        var C = -(zfar+znear)/(zfar-znear);\n        var D = -2*zfar*znear/(zfar-znear);\n\n        r[0] = 2*znear/(right-left);\n        r[1] = 0;\n        r[2] = 0;\n        r[3] = 0;\n        r[4] = 0;\n        r[5] = 2*znear/(top-bottom);\n        r[6] = 0;\n        r[7] = 0;\n        r[8] = (right+left)/(right-left);\n        r[9] = (top+bottom)/(top-bottom);\n        r[10] = -(zfar+znear)/(zfar-znear);\n        r[11] = -1;\n        r[12] = 0;\n        r[13] = 0;\n        r[14] = -2*zfar*znear/(zfar-znear);\n        r[15] = 0;\n\n        return r;\n    };\n\n    /*\n     * Function: M4x4.makePerspective\n     *\n     * Creates a matrix for a perspective projection with the given parameters.\n     *\n     * Parameters:\n     *\n     *   fovy - field of view in the y axis, in degrees\n     *   aspect - aspect ratio\n     *   znear - the near z distance of the projection\n     *   zfar - the far z distance of the projection\n     *   r - optional 4x4 matrix to store the result in\n     *\n     * Returns:\n     *\n     *   If r is specified, returns r after creating the projection matrix.\n     *   Otherwise, returns a new 4x4 matrix.\n     */\n    M4x4.makePerspective = function M4x4_makePerspective (fovy, aspect, znear, zfar, r) {\n        //MathUtils_assert(r == undefined || r.length == 16, \"r == undefined || r.length == 16\");\n\n        var ymax = znear * Math.tan(fovy * Math.PI / 360.0);\n        var ymin = -ymax;\n        var xmin = ymin * aspect;\n        var xmax = ymax * aspect;\n\n        return M4x4.makeFrustum(xmin, xmax, ymin, ymax, znear, zfar, r);\n    };\n\n    /*\n     * Function: M4x4.makeOrtho\n     *\n     * Creates a matrix for an orthogonal frustum projection with the given parameters.\n     *\n     * Parameters:\n     *\n     *   left - the left coordinate of the frustum\n     *   right- the right coordinate of the frustum\n     *   bottom - the bottom coordinate of the frustum\n     *   top - the top coordinate of the frustum\n     *   znear - the near z distance of the frustum\n     *   zfar - the far z distance of the frustum\n     *   r - optional 4x4 matrix to store the result in\n     *\n     * Returns:\n     *\n     *   If r is specified, returns r after creating the projection matrix.\n     *   Otherwise, returns a new 4x4 matrix.\n     */\n    M4x4.makeOrtho = function M4x4_makeOrtho (left, right, bottom, top, znear, zfar, r) {\n        //MathUtils_assert(r == undefined || r.length == 16, \"r == undefined || r.length == 16\");\n\n        if (r == undefined)\n            r = new MJS_FLOAT_ARRAY_TYPE(16);\n\n        var tX = -(right+left)/(right-left);\n        var tY = -(top+bottom)/(top-bottom);\n        var tZ = -(zfar+znear)/(zfar-znear);\n        var X = 2 / (right-left);\n        var Y = 2 / (top-bottom);\n        var Z = -2 / (zfar-znear);\n\n        r[0] = 2 / (right-left);\n        r[1] = 0;\n        r[2] = 0;\n        r[3] = 0;\n        r[4] = 0;\n        r[5] = 2 / (top-bottom);\n        r[6] = 0;\n        r[7] = 0;\n        r[8] = 0;\n        r[9] = 0;\n        r[10] = -2 / (zfar-znear);\n        r[11] = 0;\n        r[12] = -(right+left)/(right-left);\n        r[13] = -(top+bottom)/(top-bottom);\n        r[14] = -(zfar+znear)/(zfar-znear);\n        r[15] = 1;\n\n        return r;\n    };\n\n    /*\n     * Function: M4x4.makeOrtho2D\n     *\n     * Creates a matrix for a 2D orthogonal frustum projection with the given parameters.\n     * znear and zfar are assumed to be -1 and 1, respectively.\n     *\n     * Parameters:\n     *\n     *   left - the left coordinate of the frustum\n     *   right- the right coordinate of the frustum\n     *   bottom - the bottom coordinate of the frustum\n     *   top - the top coordinate of the frustum\n     *   r - optional 4x4 matrix to store the result in\n     *\n     * Returns:\n     *\n     *   If r is specified, returns r after creating the projection matrix.\n     *   Otherwise, returns a new 4x4 matrix.\n     */\n    M4x4.makeOrtho2D = function M4x4_makeOrtho2D (left, right, bottom, top, r) {\n        //MathUtils_assert(r == undefined || r.length == 16, \"r == undefined || r.length == 16\");\n\n        return M4x4.makeOrtho(left, right, bottom, top, -1, 1, r);\n    };\n\n    /*\n     * Function: M4x4.mul\n     *\n     * Performs r = a * b.\n     *\n     * Parameters:\n     *\n     *   a - the first matrix operand\n     *   b - the second matrix operand\n     *   r - optional 4x4 matrix to store the result in\n     *\n     * Returns:\n     *\n     *   If r is specified, returns r after performing the operation.\n     *   Otherwise, returns a new 4x4 matrix with the result.\n     */\n    M4x4.mul = function M4x4_mul(a, b, r) {\n        //MathUtils_assert(a.length == 16, \"a.length == 16\");\n        //MathUtils_assert(b.length == 16, \"b.length == 16\");\n        //MathUtils_assert(r == undefined || r.length == 16, \"r == undefined || r.length == 16\");\n        //MathUtils_assert(a != r && b != r, \"a != r && b != r\");\n\n        if (r == undefined)\n            r = new MJS_FLOAT_ARRAY_TYPE(16);\n\n        var a11 = a[0];\n        var a21 = a[1];\n        var a31 = a[2];\n        var a41 = a[3];\n        var a12 = a[4];\n        var a22 = a[5];\n        var a32 = a[6];\n        var a42 = a[7];\n        var a13 = a[8];\n        var a23 = a[9];\n        var a33 = a[10];\n        var a43 = a[11];\n        var a14 = a[12];\n        var a24 = a[13];\n        var a34 = a[14];\n        var a44 = a[15];\n\n        var b11 = b[0];\n        var b21 = b[1];\n        var b31 = b[2];\n        var b41 = b[3];\n        var b12 = b[4];\n        var b22 = b[5];\n        var b32 = b[6];\n        var b42 = b[7];\n        var b13 = b[8];\n        var b23 = b[9];\n        var b33 = b[10];\n        var b43 = b[11];\n        var b14 = b[12];\n        var b24 = b[13];\n        var b34 = b[14];\n        var b44 = b[15];\n\n        r[0] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n        r[1] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n        r[2] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n        r[3] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n        r[4] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n        r[5] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n        r[6] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n        r[7] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n        r[8] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n        r[9] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n        r[10] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n        r[11] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n        r[12] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n        r[13] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n        r[14] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n        r[15] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n        return r;\n    };\n\n    /*\n     * Function: M4x4.mulAffine\n     *\n     * Performs r = a * b, assuming a and b are affine (elements 3,7,11,15 = 0,0,0,1)\n     *\n     * Parameters:\n     *\n     *   a - the first matrix operand\n     *   b - the second matrix operand\n     *   r - optional 4x4 matrix to store the result in\n     *\n     * Returns:\n     *\n     *   If r is specified, returns r after performing the operation.\n     *   Otherwise, returns a new 4x4 matrix with the result.\n     */\n    M4x4.mulAffine = function M4x4_mulAffine(a, b, r) {\n        //MathUtils_assert(a.length == 16, \"a.length == 16\");\n        //MathUtils_assert(b.length == 16, \"b.length == 16\");\n        //MathUtils_assert(r == undefined || r.length == 16, \"r == undefined || r.length == 16\");\n        //MathUtils_assert(a != r && b != r, \"a != r && b != r\");\n\n        if (r == undefined)\n            r = new MJS_FLOAT_ARRAY_TYPE(16);\n        var a11 = a[0];\n        var a21 = a[1];\n        var a31 = a[2];\n        var a12 = a[4];\n        var a22 = a[5];\n        var a32 = a[6];\n        var a13 = a[8];\n        var a23 = a[9];\n        var a33 = a[10];\n        var a14 = a[12];\n        var a24 = a[13];\n        var a34 = a[14];\n\n        var b11 = b[0];\n        var b21 = b[1];\n        var b31 = b[2];\n        var b12 = b[4];\n        var b22 = b[5];\n        var b32 = b[6];\n        var b13 = b[8];\n        var b23 = b[9];\n        var b33 = b[10];\n        var b14 = b[12];\n        var b24 = b[13];\n        var b34 = b[14];\n\n        r[0] = a11 * b11 + a12 * b21 + a13 * b31;\n        r[1] = a21 * b11 + a22 * b21 + a23 * b31;\n        r[2] = a31 * b11 + a32 * b21 + a33 * b31;\n        r[3] = 0;\n        r[4] = a11 * b12 + a12 * b22 + a13 * b32;\n        r[5] = a21 * b12 + a22 * b22 + a23 * b32;\n        r[6] = a31 * b12 + a32 * b22 + a33 * b32;\n        r[7] = 0;\n        r[8] = a11 * b13 + a12 * b23 + a13 * b33;\n        r[9] = a21 * b13 + a22 * b23 + a23 * b33;\n        r[10] = a31 * b13 + a32 * b23 + a33 * b33;\n        r[11] = 0;\n        r[12] = a11 * b14 + a12 * b24 + a13 * b34 + a14;\n        r[13] = a21 * b14 + a22 * b24 + a23 * b34 + a24;\n        r[14] = a31 * b14 + a32 * b24 + a33 * b34 + a34;\n        r[15] = 1;\n\n        return r;\n    };\n\n    /*\n     * Function: M4x4.makeRotate\n     *\n     * Creates a transformation matrix for rotation by angle radians about the 3-element vector axis.\n     *\n     * Parameters:\n     *\n     *   angle - the angle of rotation, in radians\n     *   axis - the axis around which the rotation is performed, a 3-element vector\n     *   r - optional 4x4 matrix to store the result in\n     *\n     * Returns:\n     *\n     *   If r is specified, returns r after creating the matrix.\n     *   Otherwise, returns a new 4x4 matrix with the result.\n     */\n    M4x4.makeRotate = function M4x4_makeRotate(angle, axis, r) {\n        //MathUtils_assert(angle.length == 3, \"angle.length == 3\");\n        //MathUtils_assert(axis.length == 3, \"axis.length == 3\");\n        //MathUtils_assert(r == undefined || r.length == 16, \"r == undefined || r.length == 16\");\n\n        if (r == undefined)\n            r = new MJS_FLOAT_ARRAY_TYPE(16);\n\n        axis = V3.normalize(axis, V3._temp1);\n        var x = axis[0], y = axis[1], z = axis[2];\n        var c = Math.cos(angle);\n        var c1 = 1-c;\n        var s = Math.sin(angle);\n\n        r[0] = x*x*c1+c;\n        r[1] = y*x*c1+z*s;\n        r[2] = z*x*c1-y*s;\n        r[3] = 0;\n        r[4] = x*y*c1-z*s;\n        r[5] = y*y*c1+c;\n        r[6] = y*z*c1+x*s;\n        r[7] = 0;\n        r[8] = x*z*c1+y*s;\n        r[9] = y*z*c1-x*s;\n        r[10] = z*z*c1+c;\n        r[11] = 0;\n        r[12] = 0;\n        r[13] = 0;\n        r[14] = 0;\n        r[15] = 1;\n\n        return r;\n    };\n\n    /*\n     * Function: M4x4.rotate\n     *\n     * Concatenates a rotation of angle radians about the axis to the give matrix m.\n     *\n     * Parameters:\n     *\n     *   angle - the angle of rotation, in radians\n     *   axis - the axis around which the rotation is performed, a 3-element vector\n     *   m - the matrix to concatenate the rotation to\n     *   r - optional 4x4 matrix to store the result in\n     *\n     * Returns:\n     *\n     *   If r is specified, returns r after performing the operation.\n     *   Otherwise, returns a new 4x4 matrix with the result.\n     */\n    M4x4.rotate = function M4x4_rotate(angle, axis, m, r) {\n        //MathUtils_assert(angle.length == 3, \"angle.length == 3\");\n        //MathUtils_assert(axis.length == 3, \"axis.length == 3\");\n        //MathUtils_assert(m.length == 16, \"m.length == 16\");\n        //MathUtils_assert(r == undefined || r.length == 16, \"r == undefined || r.length == 16\");\n\n        if (r == undefined)\n            r = new MJS_FLOAT_ARRAY_TYPE(16);\n        var a0=axis [0], a1=axis [1], a2=axis [2];\n        var l = Math.sqrt(a0*a0 + a1*a1 + a2*a2);\n        var x = a0, y = a1, z = a2;\n        if (l != 1.0) {\n            var im = 1.0 / l;\n            x *= im;\n            y *= im;\n            z *= im;\n        }\n        var c = Math.cos(angle);\n        var c1 = 1-c;\n        var s = Math.sin(angle);\n        var xs = x*s;\n        var ys = y*s;\n        var zs = z*s;\n        var xyc1 = x * y * c1;\n        var xzc1 = x * z * c1;\n        var yzc1 = y * z * c1;\n\n        var m11 = m[0];\n        var m21 = m[1];\n        var m31 = m[2];\n        var m41 = m[3];\n        var m12 = m[4];\n        var m22 = m[5];\n        var m32 = m[6];\n        var m42 = m[7];\n        var m13 = m[8];\n        var m23 = m[9];\n        var m33 = m[10];\n        var m43 = m[11];\n\n        var t11 = x * x * c1 + c;\n        var t21 = xyc1 + zs;\n        var t31 = xzc1 - ys;\n        var t12 = xyc1 - zs;\n        var t22 = y * y * c1 + c;\n        var t32 = yzc1 + xs;\n        var t13 = xzc1 + ys;\n        var t23 = yzc1 - xs;\n        var t33 = z * z * c1 + c;\n\n        r[0] = m11 * t11 + m12 * t21 + m13 * t31;\n        r[1] = m21 * t11 + m22 * t21 + m23 * t31;\n        r[2] = m31 * t11 + m32 * t21 + m33 * t31;\n        r[3] = m41 * t11 + m42 * t21 + m43 * t31;\n        r[4] = m11 * t12 + m12 * t22 + m13 * t32;\n        r[5] = m21 * t12 + m22 * t22 + m23 * t32;\n        r[6] = m31 * t12 + m32 * t22 + m33 * t32;\n        r[7] = m41 * t12 + m42 * t22 + m43 * t32;\n        r[8] = m11 * t13 + m12 * t23 + m13 * t33;\n        r[9] = m21 * t13 + m22 * t23 + m23 * t33;\n        r[10] = m31 * t13 + m32 * t23 + m33 * t33;\n        r[11] = m41 * t13 + m42 * t23 + m43 * t33;\n        if (r != m) {\n            r[12] = m[12];\n            r[13] = m[13];\n            r[14] = m[14];\n            r[15] = m[15];\n        }\n        return r;\n    };\n\n    /*\n     * Function: M4x4.makeScale3\n     *\n     * Creates a transformation matrix for scaling by 3 scalar values, one for\n     * each of the x, y, and z directions.\n     *\n     * Parameters:\n     *\n     *   x - the scale for the x axis\n     *   y - the scale for the y axis\n     *   z - the scale for the z axis\n     *   r - optional 4x4 matrix to store the result in\n     *\n     * Returns:\n     *\n     *   If r is specified, returns r after creating the matrix.\n     *   Otherwise, returns a new 4x4 matrix with the result.\n     */\n    M4x4.makeScale3 = function M4x4_makeScale3(x, y, z, r) {\n        //MathUtils_assert(r == undefined || r.length == 16, \"r == undefined || r.length == 16\");\n\n        if (r == undefined)\n            r = new MJS_FLOAT_ARRAY_TYPE(16);\n\n        r[0] = x;\n        r[1] = 0;\n        r[2] = 0;\n        r[3] = 0;\n        r[4] = 0;\n        r[5] = y;\n        r[6] = 0;\n        r[7] = 0;\n        r[8] = 0;\n        r[9] = 0;\n        r[10] = z;\n        r[11] = 0;\n        r[12] = 0;\n        r[13] = 0;\n        r[14] = 0;\n        r[15] = 1;\n\n        return r;\n    };\n\n    /*\n     * Function: M4x4.makeScale1\n     *\n     * Creates a transformation matrix for a uniform scale by a single scalar value.\n     *\n     * Parameters:\n     *\n     *   k - the scale factor\n     *   r - optional 4x4 matrix to store the result in\n     *\n     * Returns:\n     *\n     *   If r is specified, returns r after creating the matrix.\n     *   Otherwise, returns a new 4x4 matrix with the result.\n     */\n    M4x4.makeScale1 = function M4x4_makeScale1(k, r) {\n        //MathUtils_assert(r == undefined || r.length == 16, \"r == undefined || r.length == 16\");\n\n        return M4x4.makeScale3(k, k, k, r);\n    };\n\n    /*\n     * Function: M4x4.makeScale\n     *\n     * Creates a transformation matrix for scaling each of the x, y, and z axes by the amount\n     * given in the corresponding element of the 3-element vector.\n     *\n     * Parameters:\n     *\n     *   v - the 3-element vector containing the scale factors\n     *   r - optional 4x4 matrix to store the result in\n     *\n     * Returns:\n     *\n     *   If r is specified, returns r after creating the matrix.\n     *   Otherwise, returns a new 4x4 matrix with the result.\n     */\n    M4x4.makeScale = function M4x4_makeScale(v, r) {\n        //MathUtils_assert(v.length == 3, \"v.length == 3\");\n        //MathUtils_assert(r == undefined || r.length == 16, \"r == undefined || r.length == 16\");\n\n        return M4x4.makeScale3(v[0], v[1], v[2], r);\n    };\n\n    /*\n     * Function: M4x4.scale3\n     */\n    M4x4.scale3 = function M4x4_scale3(x, y, z, m, r) {\n        //MathUtils_assert(m.length == 16, \"m.length == 16\");\n        //MathUtils_assert(r == undefined || r.length == 16, \"r == undefined || r.length == 16\");\n\n        if (r == m) {\n            m[0] *= x;\n            m[1] *= x;\n            m[2] *= x;\n            m[3] *= x;\n            m[4] *= y;\n            m[5] *= y;\n            m[6] *= y;\n            m[7] *= y;\n            m[8] *= z;\n            m[9] *= z;\n            m[10] *= z;\n            m[11] *= z;\n            return m;\n        }\n\n        if (r == undefined)\n            r = new MJS_FLOAT_ARRAY_TYPE(16);\n\n        r[0] = m[0] * x;\n        r[1] = m[1] * x;\n        r[2] = m[2] * x;\n        r[3] = m[3] * x;\n        r[4] = m[4] * y;\n        r[5] = m[5] * y;\n        r[6] = m[6] * y;\n        r[7] = m[7] * y;\n        r[8] = m[8] * z;\n        r[9] = m[9] * z;\n        r[10] = m[10] * z;\n        r[11] = m[11] * z;\n        r[12] = m[12];\n        r[13] = m[13];\n        r[14] = m[14];\n        r[15] = m[15];\n\n        return r;\n    };\n\n    /*\n     * Function: M4x4.scale1\n     */\n    M4x4.scale1 = function M4x4_scale1(k, m, r) {\n        //MathUtils_assert(m.length == 16, \"m.length == 16\");\n        //MathUtils_assert(r == undefined || r.length == 16, \"r == undefined || r.length == 16\");\n        if (r == m) {\n            m[0] *= k;\n            m[1] *= k;\n            m[2] *= k;\n            m[3] *= k;\n            m[4] *= k;\n            m[5] *= k;\n            m[6] *= k;\n            m[7] *= k;\n            m[8] *= k;\n            m[9] *= k;\n            m[10] *= k;\n            m[11] *= k;\n            return m;\n        }\n\n\n        if (r == undefined)\n            r = new MJS_FLOAT_ARRAY_TYPE(16);\n\n        r[0] = m[0] * k;\n        r[1] = m[1] * k;\n        r[2] = m[2] * k;\n        r[3] = m[3] * k;\n        r[4] = m[4] * k;\n        r[5] = m[5] * k;\n        r[6] = m[6] * k;\n        r[7] = m[7] * k;\n        r[8] = m[8] * k;\n        r[9] = m[9] * k;\n        r[10] = m[10] * k;\n        r[11] = m[11] * k;\n        r[12] = m[12];\n        r[13] = m[13];\n        r[14] = m[14];\n        r[15] = m[15];\n\n        return r;\n    };\n\n    /*\n     * Function: M4x4.scale1\n     */\n    M4x4.scale = function M4x4_scale(v, m, r) {\n        //MathUtils_assert(v.length == 3, \"v.length == 3\");\n        //MathUtils_assert(m.length == 16, \"m.length == 16\");\n        //MathUtils_assert(r == undefined || r.length == 16, \"r == undefined || r.length == 16\");\n        var x = v[0], y = v[1], z = v[2];\n\n        if (r == m) {\n            m[0] *= x;\n            m[1] *= x;\n            m[2] *= x;\n            m[3] *= x;\n            m[4] *= y;\n            m[5] *= y;\n            m[6] *= y;\n            m[7] *= y;\n            m[8] *= z;\n            m[9] *= z;\n            m[10] *= z;\n            m[11] *= z;\n            return m;\n        }\n\n        if (r == undefined)\n            r = new MJS_FLOAT_ARRAY_TYPE(16);\n\n\n        r[0] = m[0] * x;\n        r[1] = m[1] * x;\n        r[2] = m[2] * x;\n        r[3] = m[3] * x;\n        r[4] = m[4] * y;\n        r[5] = m[5] * y;\n        r[6] = m[6] * y;\n        r[7] = m[7] * y;\n        r[8] = m[8] * z;\n        r[9] = m[9] * z;\n        r[10] = m[10] * z;\n        r[11] = m[11] * z;\n        r[12] = m[12];\n        r[13] = m[13];\n        r[14] = m[14];\n        r[15] = m[15];\n\n        return r;\n    };\n\n    /*\n     * Function: M4x4.makeTranslate3\n     */\n    M4x4.makeTranslate3 = function M4x4_makeTranslate3(x, y, z, r) {\n        //MathUtils_assert(r == undefined || r.length == 16, \"r == undefined || r.length == 16\");\n\n        if (r == undefined)\n            r = new MJS_FLOAT_ARRAY_TYPE(16);\n\n        r[0] = 1;\n        r[1] = 0;\n        r[2] = 0;\n        r[3] = 0;\n        r[4] = 0;\n        r[5] = 1;\n        r[6] = 0;\n        r[7] = 0;\n        r[8] = 0;\n        r[9] = 0;\n        r[10] = 1;\n        r[11] = 0;\n        r[12] = x;\n        r[13] = y;\n        r[14] = z;\n        r[15] = 1;\n\n        return r;\n    };\n\n    /*\n     * Function: M4x4.makeTranslate1\n     */\n    M4x4.makeTranslate1 = function M4x4_makeTranslate1 (k, r) {\n        //MathUtils_assert(r == undefined || r.length == 16, \"r == undefined || r.length == 16\");\n\n        return M4x4.makeTranslate3(k, k, k, r);\n    };\n\n    /*\n     * Function: M4x4.makeTranslate\n     */\n    M4x4.makeTranslate = function M4x4_makeTranslate (v, r) {\n        //MathUtils_assert(v.length == 3, \"v.length == 3\");\n        //MathUtils_assert(r == undefined || r.length == 16, \"r == undefined || r.length == 16\");\n\n        return M4x4.makeTranslate3(v[0], v[1], v[2], r);\n    };\n\n    /*\n     * Function: M4x4.translate3Self\n     */\n    M4x4.translate3Self = function M4x4_translate3Self (x, y, z, m) {\n        //MathUtils_assert(m.length == 16, \"m.length == 16\");\n        //MathUtils_assert(r == undefined || r.length == 16, \"r == undefined || r.length == 16\");\n        m[12] += m[0] * x + m[4] * y + m[8] * z;\n        m[13] += m[1] * x + m[5] * y + m[9] * z;\n        m[14] += m[2] * x + m[6] * y + m[10] * z;\n        m[15] += m[3] * x + m[7] * y + m[11] * z;\n        return m;\n    };\n\n    /*\n     * Function: M4x4.translate3\n     */\n    M4x4.translate3 = function M4x4_translate3 (x, y, z, m, r) {\n        //MathUtils_assert(m.length == 16, \"m.length == 16\");\n        //MathUtils_assert(r == undefined || r.length == 16, \"r == undefined || r.length == 16\");\n\n        if (r == m) {\n            m[12] += m[0] * x + m[4] * y + m[8] * z;\n            m[13] += m[1] * x + m[5] * y + m[9] * z;\n            m[14] += m[2] * x + m[6] * y + m[10] * z;\n            m[15] += m[3] * x + m[7] * y + m[11] * z;\n            return m;\n        }\n\n        if (r == undefined)\n            r = new MJS_FLOAT_ARRAY_TYPE(16);\n\n        var m11 = m[0];\n        var m21 = m[1];\n        var m31 = m[2];\n        var m41 = m[3];\n        var m12 = m[4];\n        var m22 = m[5];\n        var m32 = m[6];\n        var m42 = m[7];\n        var m13 = m[8];\n        var m23 = m[9];\n        var m33 = m[10];\n        var m43 = m[11];\n\n\n        r[0] = m11;\n        r[1] = m21;\n        r[2] = m31;\n        r[3] = m41;\n        r[4] = m12;\n        r[5] = m22;\n        r[6] = m32;\n        r[7] = m42;\n        r[8] = m13;\n        r[9] = m23;\n        r[10] = m33;\n        r[11] = m43;\n        r[12] = m11 * x + m12 * y + m13 * z + m[12];\n        r[13] = m21 * x + m22 * y + m23 * z + m[13];\n        r[14] = m31 * x + m32 * y + m33 * z + m[14];\n        r[15] = m41 * x + m42 * y + m43 * z + m[15];\n\n        return r;\n    };\n\n    /*\n     * Function: M4x4.translate1\n     */\n    M4x4.translate1 = function M4x4_translate1 (k, m, r) {\n        //MathUtils_assert(m.length == 16, \"m.length == 16\");\n        //MathUtils_assert(r == undefined || r.length == 16, \"r == undefined || r.length == 16\");\n\n        return M4x4.translate3(k, k, k, m, r);\n    };\n    /*\n     * Function: M4x4.translateSelf\n     */\n    M4x4.translateSelf = function M4x4_translateSelf (v, m) {\n        //MathUtils_assert(v.length == 3, \"v.length == 3\");\n        //MathUtils_assert(m.length == 16, \"m.length == 16\");\n        var x=v[0], y=v[1], z=v[2];\n        m[12] += m[0] * x + m[4] * y + m[8] * z;\n        m[13] += m[1] * x + m[5] * y + m[9] * z;\n        m[14] += m[2] * x + m[6] * y + m[10] * z;\n        m[15] += m[3] * x + m[7] * y + m[11] * z;\n        return m;\n    };\n    /*\n     * Function: M4x4.translate\n     */\n    M4x4.translate = function M4x4_translate (v, m, r) {\n        //MathUtils_assert(v.length == 3, \"v.length == 3\");\n        //MathUtils_assert(m.length == 16, \"m.length == 16\");\n        //MathUtils_assert(r == undefined || r.length == 16, \"r == undefined || r.length == 16\");\n        var x=v[0], y=v[1], z=v[2];\n        if (r == m) {\n            m[12] += m[0] * x + m[4] * y + m[8] * z;\n            m[13] += m[1] * x + m[5] * y + m[9] * z;\n            m[14] += m[2] * x + m[6] * y + m[10] * z;\n            m[15] += m[3] * x + m[7] * y + m[11] * z;\n            return m;\n        }\n\n        if (r == undefined)\n            r = new MJS_FLOAT_ARRAY_TYPE(16);\n\n        var m11 = m[0];\n        var m21 = m[1];\n        var m31 = m[2];\n        var m41 = m[3];\n        var m12 = m[4];\n        var m22 = m[5];\n        var m32 = m[6];\n        var m42 = m[7];\n        var m13 = m[8];\n        var m23 = m[9];\n        var m33 = m[10];\n        var m43 = m[11];\n\n        r[0] = m11;\n        r[1] = m21;\n        r[2] = m31;\n        r[3] = m41;\n        r[4] = m12;\n        r[5] = m22;\n        r[6] = m32;\n        r[7] = m42;\n        r[8] = m13;\n        r[9] = m23;\n        r[10] = m33;\n        r[11] = m43;\n        r[12] = m11 * x + m12 * y + m13 * z + m[12];\n        r[13] = m21 * x + m22 * y + m23 * z + m[13];\n        r[14] = m31 * x + m32 * y + m33 * z + m[14];\n        r[15] = m41 * x + m42 * y + m43 * z + m[15];\n\n        return r;\n    };\n\n    /*\n     * Function: M4x4.makeLookAt\n     */\n    M4x4.makeLookAt = function M4x4_makeLookAt (eye, center, up, r) {\n        //MathUtils_assert(eye.length == 3, \"eye.length == 3\");\n        //MathUtils_assert(center.length == 3, \"center.length == 3\");\n        //MathUtils_assert(up.length == 3, \"up.length == 3\");\n        //MathUtils_assert(r == undefined || r.length == 16, \"r == undefined || r.length == 16\");\n\n        var z = V3.direction(eye, center, V3._temp1);\n        var x = V3.normalize(V3.cross(up, z, V3._temp2), V3._temp2);\n        var y = V3.normalize(V3.cross(z, x, V3._temp3), V3._temp3);\n\n        var tm1 = M4x4._temp1;\n        var tm2 = M4x4._temp2;\n\n        tm1[0] = x[0];\n        tm1[1] = y[0];\n        tm1[2] = z[0];\n        tm1[3] = 0;\n        tm1[4] = x[1];\n        tm1[5] = y[1];\n        tm1[6] = z[1];\n        tm1[7] = 0;\n        tm1[8] = x[2];\n        tm1[9] = y[2];\n        tm1[10] = z[2];\n        tm1[11] = 0;\n        tm1[12] = 0;\n        tm1[13] = 0;\n        tm1[14] = 0;\n        tm1[15] = 1;\n\n        tm2[0] = 1; tm2[1] = 0; tm2[2] = 0; tm2[3] = 0;\n        tm2[4] = 0; tm2[5] = 1; tm2[6] = 0; tm2[7] = 0;\n        tm2[8] = 0; tm2[9] = 0; tm2[10] = 1; tm2[11] = 0;\n        tm2[12] = -eye[0]; tm2[13] = -eye[1]; tm2[14] = -eye[2]; tm2[15] = 1;\n\n        if (r == undefined)\n            r = new MJS_FLOAT_ARRAY_TYPE(16);\n        return M4x4.mul(tm1, tm2, r);\n    };\n\n    /*\n     * Function: M4x4.transposeSelf\n     */\n    M4x4.transposeSelf = function M4x4_transposeSelf (m) {\n        //MathUtils_assert(m.length == 16, \"m.length == 16\");\n        var tmp = m[1]; m[1] = m[4]; m[4] = tmp;\n        tmp = m[2]; m[2] = m[8]; m[8] = tmp;\n        tmp = m[3]; m[3] = m[12]; m[12] = tmp;\n        tmp = m[6]; m[6] = m[9]; m[9] = tmp;\n        tmp = m[7]; m[7] = m[13]; m[13] = tmp;\n        tmp = m[11]; m[11] = m[14]; m[14] = tmp;\n        return m;\n    };\n    /*\n     * Function: M4x4.transpose\n     */\n    M4x4.transpose = function M4x4_transpose (m, r) {\n        //MathUtils_assert(m.length == 16, \"m.length == 16\");\n        //MathUtils_assert(r == undefined || r.length == 16, \"r == undefined || r.length == 16\");\n\n        if (m == r) {\n            var tmp = 0.0;\n            tmp = m[1]; m[1] = m[4]; m[4] = tmp;\n            tmp = m[2]; m[2] = m[8]; m[8] = tmp;\n            tmp = m[3]; m[3] = m[12]; m[12] = tmp;\n            tmp = m[6]; m[6] = m[9]; m[9] = tmp;\n            tmp = m[7]; m[7] = m[13]; m[13] = tmp;\n            tmp = m[11]; m[11] = m[14]; m[14] = tmp;\n            return m;\n        }\n\n        if (r == undefined)\n            r = new MJS_FLOAT_ARRAY_TYPE(16);\n\n        r[0] = m[0]; r[1] = m[4]; r[2] = m[8]; r[3] = m[12];\n        r[4] = m[1]; r[5] = m[5]; r[6] = m[9]; r[7] = m[13];\n        r[8] = m[2]; r[9] = m[6]; r[10] = m[10]; r[11] = m[14];\n        r[12] = m[3]; r[13] = m[7]; r[14] = m[11]; r[15] = m[15];\n\n        return r;\n    };\n\n\n    /*\n     * Function: M4x4.transformPoint\n     */\n    M4x4.transformPoint = function M4x4_transformPoint (m, v, r) {\n        //MathUtils_assert(m.length == 16, \"m.length == 16\");\n        //MathUtils_assert(v.length == 3, \"v.length == 3\");\n        //MathUtils_assert(r == undefined || r.length == 3, \"r == undefined || r.length == 3\");\n        if (r == undefined)\n            r = new MJS_FLOAT_ARRAY_TYPE(3);\n\n        var v0 = v[0], v1 = v[1], v2 = v[2];\n\n        r[0] = m[0] * v0 + m[4] * v1 + m[8] * v2 + m[12];\n        r[1] = m[1] * v0 + m[5] * v1 + m[9] * v2 + m[13];\n        r[2] = m[2] * v0 + m[6] * v1 + m[10] * v2 + m[14];\n        var w = m[3] * v0 + m[7] * v1 + m[11] * v2 + m[15];\n\n        if (w != 1.0) {\n            r[0] /= w;\n            r[1] /= w;\n            r[2] /= w;\n        }\n\n        return r;\n    };\n\n    /*\n     * Function: M4x4.transformLine\n     */\n    M4x4.transformLine = function M4x4_transformLine(m, v, r) {\n        //MathUtils_assert(m.length == 16, \"m.length == 16\");\n        //MathUtils_assert(v.length == 3, \"v.length == 3\");\n        //MathUtils_assert(r == undefined || r.length == 3, \"r == undefined || r.length == 3\");\n        if (r == undefined)\n            r = new MJS_FLOAT_ARRAY_TYPE(3);\n\n        var v0 = v[0], v1 = v[1], v2 = v[2];\n        r[0] = m[0] * v0 + m[4] * v1 + m[8] * v2;\n        r[1] = m[1] * v0 + m[5] * v1 + m[9] * v2;\n        r[2] = m[2] * v0 + m[6] * v1 + m[10] * v2;\n        var w = m[3] * v0 + m[7] * v1 + m[11] * v2;\n\n        if (w != 1.0) {\n            r[0] /= w;\n            r[1] /= w;\n            r[2] /= w;\n        }\n\n        return r;\n    };\n\n\n    /*\n     * Function: M4x4.transformPointAffine\n     */\n    M4x4.transformPointAffine = function M4x4_transformPointAffine (m, v, r) {\n        //MathUtils_assert(m.length == 16, \"m.length == 16\");\n        //MathUtils_assert(v.length == 3, \"v.length == 3\");\n        //MathUtils_assert(r == undefined || r.length == 3, \"r == undefined || r.length == 3\");\n        if (r == undefined)\n            r = new MJS_FLOAT_ARRAY_TYPE(3);\n\n        var v0 = v[0], v1 = v[1], v2 = v[2];\n\n        r[0] = m[0] * v0 + m[4] * v1 + m[8] * v2 + m[12];\n        r[1] = m[1] * v0 + m[5] * v1 + m[9] * v2 + m[13];\n        r[2] = m[2] * v0 + m[6] * v1 + m[10] * v2 + m[14];\n\n        return r;\n    };\n\n    /*\n     * Function: M4x4.transformLineAffine\n     */\n    M4x4.transformLineAffine = function M4x4_transformLineAffine(m, v, r) {\n        //MathUtils_assert(m.length == 16, \"m.length == 16\");\n        //MathUtils_assert(v.length == 3, \"v.length == 3\");\n        //MathUtils_assert(r == undefined || r.length == 3, \"r == undefined || r.length == 3\");\n        if (r == undefined)\n            r = new MJS_FLOAT_ARRAY_TYPE(3);\n\n        var v0 = v[0], v1 = v[1], v2 = v[2];\n        r[0] = m[0] * v0 + m[4] * v1 + m[8] * v2;\n        r[1] = m[1] * v0 + m[5] * v1 + m[9] * v2;\n        r[2] = m[2] * v0 + m[6] * v1 + m[10] * v2;\n\n        return r;\n    };\n\n    M4x4.makeBasis = function M4x4_makeBasis(vx,vy,vz) {\n\n        var r = new MJS_FLOAT_ARRAY_TYPE(16);\n\n        r[0] = vx[0];\n        r[1] = vx[1];\n        r[2] = vx[2];\n        r[3] = 0;\n        r[4] = vy[0];\n        r[5] = vy[1];\n        r[6] = vy[2];\n        r[7] = 0;\n        r[8] = vz[0];\n        r[9] = vz[1];\n        r[10] = vz[2];\n        r[11] = 0;\n        r[12] = 0;\n        r[13] = 0;\n        r[14] = 0;\n        r[15] = 1;\n\n        return r;\n\n    };\n\n    return {\n        vec3: F3(V3.$),\n        v3getX: V3.getX,\n        v3getY: V3.getY,\n        v3getZ: V3.getZ,\n        v3setX: F2(V3.setX),\n        v3setY: F2(V3.setY),\n        v3setZ: F2(V3.setZ),\n        toTuple3: V3.toTuple3,\n        toRecord3: V3.toRecord3,\n        fromTuple3: V3.fromTuple3,\n        fromRecord3: V3.fromRecord3,\n        v3add: F2(V3.add),\n        v3sub: F2(V3.sub),\n        v3neg: V3.neg,\n        v3direction: F2(V3.direction),\n        v3length: V3.length,\n        v3lengthSquared: V3.lengthSquared,\n        v3distance: F2(V3.distance),\n        v3distanceSquared: F2(V3.distanceSquared),\n        v3normalize: V3.normalize,\n        v3scale: F2(V3.scale),\n        v3dot: F2(V3.dot),\n        v3cross: F2(V3.cross),\n        v3mul4x4: F2(V3.mul4x4),\n        m4x4fromList: M4x4.fromList,\n        m4x4fromRecord: M4x4.fromRecord,\n        m4x4toRecord: M4x4.toRecord,\n        m4x4identity: M4x4.identity,\n        m4x4topLeft3x3: M4x4.topLeft3x3,\n        m4x4inverse: M4x4.inverse,\n        m4x4inverseOrthonormal: M4x4.inverseOrthonormal,\n        m4x4inverseTo3x3: M4x4.inverseTo3x3,\n        m4x4makeFrustum: F6(M4x4.makeFrustum),\n        m4x4makePerspective: F4(M4x4.makePerspective),\n        m4x4makeOrtho: F6(M4x4.makeOrtho),\n        m4x4makeOrtho2D: F4(M4x4.makeOrtho2D),\n        m4x4mul: F2(M4x4.mul),\n        m4x4Affine: F2(M4x4.mulAffine),\n        m4x4makeRotate: F2(M4x4.makeRotate),\n        m4x4rotate: F3(M4x4.rotate),\n        m4x4makeScale3: F3(M4x4.makeScale3),\n        m4x4makeScale1: M4x4.makeScale1,\n        m4x4makeScale: M4x4.makeScale,\n        m4x4scale3: F4(M4x4.scale3),\n        m4x4scale: F2(M4x4.scale),\n        m4x4makeTranslate3: F3(M4x4.makeTranslate3),\n        m4x4makeTranslate: M4x4.makeTranslate,\n        m4x4translate3: F4(M4x4.translate3),\n        m4x4translate: F2(M4x4.translate),\n        m4x4makeLookAt: F3(M4x4.makeLookAt),\n        m4x4transpose: M4x4.transpose,\n        m4x4transformPoint: F2(M4x4.transformPoint),\n        m4x4makeBasis: F3(M4x4.makeBasis)\n    };\n\n}();\n\nvar _elm_community$linear_algebra$Math_Vector3$cross = _elm_community$linear_algebra$Native_MJS.v3cross;\nvar _elm_community$linear_algebra$Math_Vector3$dot = _elm_community$linear_algebra$Native_MJS.v3dot;\nvar _elm_community$linear_algebra$Math_Vector3$scale = _elm_community$linear_algebra$Native_MJS.v3scale;\nvar _elm_community$linear_algebra$Math_Vector3$normalize = _elm_community$linear_algebra$Native_MJS.v3normalize;\nvar _elm_community$linear_algebra$Math_Vector3$distanceSquared = _elm_community$linear_algebra$Native_MJS.v3distanceSquared;\nvar _elm_community$linear_algebra$Math_Vector3$distance = _elm_community$linear_algebra$Native_MJS.v3distance;\nvar _elm_community$linear_algebra$Math_Vector3$lengthSquared = _elm_community$linear_algebra$Native_MJS.v3lengthSquared;\nvar _elm_community$linear_algebra$Math_Vector3$length = _elm_community$linear_algebra$Native_MJS.v3length;\nvar _elm_community$linear_algebra$Math_Vector3$direction = _elm_community$linear_algebra$Native_MJS.v3direction;\nvar _elm_community$linear_algebra$Math_Vector3$negate = _elm_community$linear_algebra$Native_MJS.v3neg;\nvar _elm_community$linear_algebra$Math_Vector3$sub = _elm_community$linear_algebra$Native_MJS.v3sub;\nvar _elm_community$linear_algebra$Math_Vector3$add = _elm_community$linear_algebra$Native_MJS.v3add;\nvar _elm_community$linear_algebra$Math_Vector3$fromRecord = _elm_community$linear_algebra$Native_MJS.fromRecord3;\nvar _elm_community$linear_algebra$Math_Vector3$fromTuple = _elm_community$linear_algebra$Native_MJS.fromTuple3;\nvar _elm_community$linear_algebra$Math_Vector3$toRecord = _elm_community$linear_algebra$Native_MJS.toRecord3;\nvar _elm_community$linear_algebra$Math_Vector3$toTuple = _elm_community$linear_algebra$Native_MJS.toTuple3;\nvar _elm_community$linear_algebra$Math_Vector3$setZ = _elm_community$linear_algebra$Native_MJS.v3setZ;\nvar _elm_community$linear_algebra$Math_Vector3$setY = _elm_community$linear_algebra$Native_MJS.v3setY;\nvar _elm_community$linear_algebra$Math_Vector3$setX = _elm_community$linear_algebra$Native_MJS.v3setX;\nvar _elm_community$linear_algebra$Math_Vector3$getZ = _elm_community$linear_algebra$Native_MJS.v3getZ;\nvar _elm_community$linear_algebra$Math_Vector3$getY = _elm_community$linear_algebra$Native_MJS.v3getY;\nvar _elm_community$linear_algebra$Math_Vector3$getX = _elm_community$linear_algebra$Native_MJS.v3getX;\nvar _elm_community$linear_algebra$Math_Vector3$k = A3(_elm_community$linear_algebra$Native_MJS.vec3, 0, 0, 1);\nvar _elm_community$linear_algebra$Math_Vector3$j = A3(_elm_community$linear_algebra$Native_MJS.vec3, 0, 1, 0);\nvar _elm_community$linear_algebra$Math_Vector3$i = A3(_elm_community$linear_algebra$Native_MJS.vec3, 1, 0, 0);\nvar _elm_community$linear_algebra$Math_Vector3$vec3 = _elm_community$linear_algebra$Native_MJS.vec3;\nvar _elm_community$linear_algebra$Math_Vector3$Vec3 = {ctor: 'Vec3'};\n\nvar _elm_community$linear_algebra$Math_Matrix4$fromRecord = _elm_community$linear_algebra$Native_MJS.m4x4fromRecord;\nvar _elm_community$linear_algebra$Math_Matrix4$toRecord = _elm_community$linear_algebra$Native_MJS.m4x4toRecord;\nvar _elm_community$linear_algebra$Math_Matrix4$makeFromList = _elm_community$linear_algebra$Native_MJS.m4x4fromList;\nvar _elm_community$linear_algebra$Math_Matrix4$makeBasis = _elm_community$linear_algebra$Native_MJS.m4x4makeBasis;\nvar _elm_community$linear_algebra$Math_Matrix4$transpose = _elm_community$linear_algebra$Native_MJS.m4x4transpose;\nvar _elm_community$linear_algebra$Math_Matrix4$makeLookAt = _elm_community$linear_algebra$Native_MJS.m4x4makeLookAt;\nvar _elm_community$linear_algebra$Math_Matrix4$translate = _elm_community$linear_algebra$Native_MJS.m4x4translate;\nvar _elm_community$linear_algebra$Math_Matrix4$translate3 = _elm_community$linear_algebra$Native_MJS.m4x4translate3;\nvar _elm_community$linear_algebra$Math_Matrix4$makeTranslate = _elm_community$linear_algebra$Native_MJS.m4x4makeTranslate;\nvar _elm_community$linear_algebra$Math_Matrix4$makeTranslate3 = _elm_community$linear_algebra$Native_MJS.m4x4makeTranslate3;\nvar _elm_community$linear_algebra$Math_Matrix4$scale = _elm_community$linear_algebra$Native_MJS.m4x4scale;\nvar _elm_community$linear_algebra$Math_Matrix4$scale3 = _elm_community$linear_algebra$Native_MJS.m4x4scale3;\nvar _elm_community$linear_algebra$Math_Matrix4$makeScale = _elm_community$linear_algebra$Native_MJS.m4x4makeScale;\nvar _elm_community$linear_algebra$Math_Matrix4$makeScale3 = _elm_community$linear_algebra$Native_MJS.m4x4makeScale3;\nvar _elm_community$linear_algebra$Math_Matrix4$rotate = _elm_community$linear_algebra$Native_MJS.m4x4rotate;\nvar _elm_community$linear_algebra$Math_Matrix4$makeRotate = _elm_community$linear_algebra$Native_MJS.m4x4makeRotate;\nvar _elm_community$linear_algebra$Math_Matrix4$mulAffine = _elm_community$linear_algebra$Native_MJS.m4x4mulAffine;\nvar _elm_community$linear_algebra$Math_Matrix4$mul = _elm_community$linear_algebra$Native_MJS.m4x4mul;\nvar _elm_community$linear_algebra$Math_Matrix4$makeOrtho2D = _elm_community$linear_algebra$Native_MJS.m4x4makeOrtho2D;\nvar _elm_community$linear_algebra$Math_Matrix4$makeOrtho = _elm_community$linear_algebra$Native_MJS.m4x4makeOrtho;\nvar _elm_community$linear_algebra$Math_Matrix4$makePerspective = _elm_community$linear_algebra$Native_MJS.m4x4makePerspective;\nvar _elm_community$linear_algebra$Math_Matrix4$makeFrustum = _elm_community$linear_algebra$Native_MJS.m4x4makeFrustum;\nvar _elm_community$linear_algebra$Math_Matrix4$inverseOrthonormal = _elm_community$linear_algebra$Native_MJS.m4x4inverseOrthonormal;\nvar _elm_community$linear_algebra$Math_Matrix4$inverse = _elm_community$linear_algebra$Native_MJS.m4x4inverse;\nvar _elm_community$linear_algebra$Math_Matrix4$identity = _elm_community$linear_algebra$Native_MJS.m4x4identity;\nvar _elm_community$linear_algebra$Math_Matrix4$transform = _elm_community$linear_algebra$Native_MJS.v3mul4x4;\nvar _elm_community$linear_algebra$Math_Matrix4$Mat4 = {ctor: 'Mat4'};\n\n\n/*\n * Copyright (c) 2010 Mozilla Corporation\n * Copyright (c) 2010 Vladimir Vukicevic\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/*\n * File: mjs\n *\n * Vector and Matrix math utilities for JavaScript, optimized for WebGL.\n * Edited to work with the Elm Programming Language\n */\n\nvar _elm_community$linear_algebra$Native_Math_Vector4 = function() {\n\n    var MJS_FLOAT_ARRAY_TYPE = Float32Array;\n\n    var V4 = { };\n\n    if (MJS_FLOAT_ARRAY_TYPE == Array) {\n        V4.$ = function V4_$(x, y, z, w) {\n            return [x, y, z, w];\n        };\n    } else {\n        V4.$ = function V4_$(x, y, z, w) {\n            return new MJS_FLOAT_ARRAY_TYPE([x, y, z, w]);\n        };\n    }\n\n    V4.getX = function V4_getX(a) {\n        return a[0];\n    }\n    V4.getY = function V4_getY(a) {\n        return a[1];\n    }\n    V4.getZ = function V4_getZ(a) {\n        return a[2];\n    }\n    V4.getW = function V4_getW(a) {\n        return a[3];\n    }\n    V4.setX = function V4_setX(x, a) {\n        return new MJS_FLOAT_ARRAY_TYPE([x, a[1], a[2], a[3]]);\n    }\n    V4.setY = function V4_setY(y, a) {\n        return new MJS_FLOAT_ARRAY_TYPE([a[0], y, a[2], a[3]]);\n    }\n    V4.setZ = function V4_setZ(z, a) {\n        return new MJS_FLOAT_ARRAY_TYPE([a[0], a[1], z, a[3]]);\n    }\n    V4.setW = function V4_setW(w, a) {\n        return new MJS_FLOAT_ARRAY_TYPE([a[0], a[1], a[2], w]);\n    }\n\n    V4.toTuple = function V4_toTuple(a) {\n        return {\n            ctor:\"_Tuple4\",\n            _0:a[0],\n            _1:a[1],\n            _2:a[2],\n            _3:a[3]\n        };\n    };\n    V4.fromTuple = function V4_fromTuple(t) {\n        return new MJS_FLOAT_ARRAY_TYPE([t._0, t._1, t._2, t._3]);\n    };\n\n    V4.toRecord = function V4_toRecord(a) {\n        return {\n            _:{},\n            x:a[0],\n            y:a[1],\n            z:a[2],\n            w:a[3]\n        };\n    };\n    V4.fromRecord = function V4_fromRecord(r) {\n        return new MJS_FLOAT_ARRAY_TYPE([r.x, r.y, r.z, r.w]);\n    };\n\n    V4.add = function V4_add(a, b) {\n        var r = new MJS_FLOAT_ARRAY_TYPE(4);\n        r[0] = a[0] + b[0];\n        r[1] = a[1] + b[1];\n        r[2] = a[2] + b[2];\n        r[3] = a[3] + b[3];\n        return r;\n    };\n\n    V4.sub = function V4_sub(a, b) {\n        var r = new MJS_FLOAT_ARRAY_TYPE(4);\n        r[0] = a[0] - b[0];\n        r[1] = a[1] - b[1];\n        r[2] = a[2] - b[2];\n        r[3] = a[3] - b[3];\n        return r;\n    };\n\n    V4.neg = function V4_neg(a) {\n        var r = new MJS_FLOAT_ARRAY_TYPE(4);\n        r[0] = - a[0];\n        r[1] = - a[1];\n        r[2] = - a[2];\n        r[3] = - a[3];\n        return r;\n    };\n\n    V4.direction = function V4_direction(a, b) {\n        var r = new MJS_FLOAT_ARRAY_TYPE(4);\n        r[0] = a[0] - b[0];\n        r[1] = a[1] - b[1];\n        r[2] = a[2] - b[2];\n        r[3] = a[3] - b[3];\n        var im = 1.0 / V4.length(r);\n        r[0] = r[0] * im;\n        r[1] = r[1] * im;\n        r[2] = r[2] * im;\n        r[3] = r[3] * im;\n        return r;\n    };\n\n    V4.length = function V4_length(a) {\n        return Math.sqrt(a[0]*a[0] + a[1]*a[1] + a[2]*a[2] + a[3]*a[3]);\n    };\n\n    V4.lengthSquared = function V4_lengthSquared(a) {\n        return a[0]*a[0] + a[1]*a[1] + a[2]*a[2] + a[3]*a[3];\n    };\n\n    V4.distance = function V4_distance(a, b) {\n        var dx = a[0] - b[0];\n        var dy = a[1] - b[1];\n        var dz = a[2] - b[2];\n        var dw = a[3] - b[3];\n        return Math.sqrt(dx * dx + dy * dy + dz * dz + dw * dw);\n    };\n\n    V4.distanceSquared = function V4_distanceSquared(a, b) {\n        var dx = a[0] - b[0];\n        var dy = a[1] - b[1];\n        var dz = a[2] - b[2];\n        var dw = a[3] - b[3];\n        return dx * dx + dy * dy + dz * dz + dw * dw;\n    };\n\n    V4.normalize = function V4_normalize(a) {\n        var r = new MJS_FLOAT_ARRAY_TYPE(4);\n        var im = 1.0 / V4.length(a);\n        r[0] = a[0] * im;\n        r[1] = a[1] * im;\n        r[2] = a[2] * im;\n        r[3] = a[3] * im;\n        return r;\n    };\n\n    V4.scale = function V4_scale(k, a) {\n        var r = new MJS_FLOAT_ARRAY_TYPE(4);\n        r[0] = a[0] * k;\n        r[1] = a[1] * k;\n        r[2] = a[2] * k;\n        r[3] = a[3] * k;\n        return r;\n    };\n\n    V4.dot = function V4_dot(a, b) {\n        return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n    };\n\n    return {\n        vec4: F4(V4.$),\n        getX: V4.getX,\n        getY: V4.getY,\n        getZ: V4.getZ,\n        getW: V4.getW,\n        setX: F2(V4.setX),\n        setY: F2(V4.setY),\n        setZ: F2(V4.setZ),\n        setW: F2(V4.setW),\n        toTuple: V4.toTuple,\n        toRecord: V4.toRecord,\n        fromTuple: V4.fromTuple,\n        fromRecord: V4.fromRecord,\n        add: F2(V4.add),\n        sub: F2(V4.sub),\n        neg: V4.neg,\n        direction: F2(V4.direction),\n        length: V4.length,\n        lengthSquared: V4.lengthSquared,\n        distance: F2(V4.distance),\n        distanceSquared: F2(V4.distanceSquared),\n        normalize: V4.normalize,\n        scale: F2(V4.scale),\n        dot: F2(V4.dot)\n    };\n\n}();\n\nvar _elm_community$linear_algebra$Math_Vector4$dot = _elm_community$linear_algebra$Native_Math_Vector4.dot;\nvar _elm_community$linear_algebra$Math_Vector4$scale = _elm_community$linear_algebra$Native_Math_Vector4.scale;\nvar _elm_community$linear_algebra$Math_Vector4$normalize = _elm_community$linear_algebra$Native_Math_Vector4.normalize;\nvar _elm_community$linear_algebra$Math_Vector4$distanceSquared = _elm_community$linear_algebra$Native_Math_Vector4.distanceSquared;\nvar _elm_community$linear_algebra$Math_Vector4$distance = _elm_community$linear_algebra$Native_Math_Vector4.distance;\nvar _elm_community$linear_algebra$Math_Vector4$lengthSquared = _elm_community$linear_algebra$Native_Math_Vector4.lengthSquared;\nvar _elm_community$linear_algebra$Math_Vector4$length = _elm_community$linear_algebra$Native_Math_Vector4.length;\nvar _elm_community$linear_algebra$Math_Vector4$direction = _elm_community$linear_algebra$Native_Math_Vector4.direction;\nvar _elm_community$linear_algebra$Math_Vector4$negate = _elm_community$linear_algebra$Native_Math_Vector4.neg;\nvar _elm_community$linear_algebra$Math_Vector4$sub = _elm_community$linear_algebra$Native_Math_Vector4.sub;\nvar _elm_community$linear_algebra$Math_Vector4$add = _elm_community$linear_algebra$Native_Math_Vector4.add;\nvar _elm_community$linear_algebra$Math_Vector4$fromRecord = _elm_community$linear_algebra$Native_Math_Vector4.fromRecord;\nvar _elm_community$linear_algebra$Math_Vector4$fromTuple = _elm_community$linear_algebra$Native_Math_Vector4.fromTuple;\nvar _elm_community$linear_algebra$Math_Vector4$toRecord = _elm_community$linear_algebra$Native_Math_Vector4.toRecord;\nvar _elm_community$linear_algebra$Math_Vector4$toTuple = _elm_community$linear_algebra$Native_Math_Vector4.toTuple;\nvar _elm_community$linear_algebra$Math_Vector4$setW = _elm_community$linear_algebra$Native_Math_Vector4.setW;\nvar _elm_community$linear_algebra$Math_Vector4$setZ = _elm_community$linear_algebra$Native_Math_Vector4.setZ;\nvar _elm_community$linear_algebra$Math_Vector4$setY = _elm_community$linear_algebra$Native_Math_Vector4.setY;\nvar _elm_community$linear_algebra$Math_Vector4$setX = _elm_community$linear_algebra$Native_Math_Vector4.setX;\nvar _elm_community$linear_algebra$Math_Vector4$getW = _elm_community$linear_algebra$Native_Math_Vector4.getW;\nvar _elm_community$linear_algebra$Math_Vector4$getZ = _elm_community$linear_algebra$Native_Math_Vector4.getZ;\nvar _elm_community$linear_algebra$Math_Vector4$getY = _elm_community$linear_algebra$Native_Math_Vector4.getY;\nvar _elm_community$linear_algebra$Math_Vector4$getX = _elm_community$linear_algebra$Native_Math_Vector4.getX;\nvar _elm_community$linear_algebra$Math_Vector4$vec4 = _elm_community$linear_algebra$Native_Math_Vector4.vec4;\nvar _elm_community$linear_algebra$Math_Vector4$Vec4 = {ctor: 'Vec4'};\n\nvar _elm_lang$core$Random$onSelfMsg = F3(\n\tfunction (_p1, _p0, seed) {\n\t\treturn _elm_lang$core$Task$succeed(seed);\n\t});\nvar _elm_lang$core$Random$magicNum8 = 2147483562;\nvar _elm_lang$core$Random$range = function (_p2) {\n\treturn {ctor: '_Tuple2', _0: 0, _1: _elm_lang$core$Random$magicNum8};\n};\nvar _elm_lang$core$Random$magicNum7 = 2147483399;\nvar _elm_lang$core$Random$magicNum6 = 2147483563;\nvar _elm_lang$core$Random$magicNum5 = 3791;\nvar _elm_lang$core$Random$magicNum4 = 40692;\nvar _elm_lang$core$Random$magicNum3 = 52774;\nvar _elm_lang$core$Random$magicNum2 = 12211;\nvar _elm_lang$core$Random$magicNum1 = 53668;\nvar _elm_lang$core$Random$magicNum0 = 40014;\nvar _elm_lang$core$Random$step = F2(\n\tfunction (_p3, seed) {\n\t\tvar _p4 = _p3;\n\t\treturn _p4._0(seed);\n\t});\nvar _elm_lang$core$Random$onEffects = F3(\n\tfunction (router, commands, seed) {\n\t\tvar _p5 = commands;\n\t\tif (_p5.ctor === '[]') {\n\t\t\treturn _elm_lang$core$Task$succeed(seed);\n\t\t} else {\n\t\t\tvar _p6 = A2(_elm_lang$core$Random$step, _p5._0._0, seed);\n\t\t\tvar value = _p6._0;\n\t\t\tvar newSeed = _p6._1;\n\t\t\treturn A2(\n\t\t\t\t_elm_lang$core$Task$andThen,\n\t\t\t\tfunction (_p7) {\n\t\t\t\t\treturn A3(_elm_lang$core$Random$onEffects, router, _p5._1, newSeed);\n\t\t\t\t},\n\t\t\t\tA2(_elm_lang$core$Platform$sendToApp, router, value));\n\t\t}\n\t});\nvar _elm_lang$core$Random$listHelp = F4(\n\tfunction (list, n, generate, seed) {\n\t\tlistHelp:\n\t\twhile (true) {\n\t\t\tif (_elm_lang$core$Native_Utils.cmp(n, 1) < 0) {\n\t\t\t\treturn {\n\t\t\t\t\tctor: '_Tuple2',\n\t\t\t\t\t_0: _elm_lang$core$List$reverse(list),\n\t\t\t\t\t_1: seed\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tvar _p8 = generate(seed);\n\t\t\t\tvar value = _p8._0;\n\t\t\t\tvar newSeed = _p8._1;\n\t\t\t\tvar _v2 = {ctor: '::', _0: value, _1: list},\n\t\t\t\t\t_v3 = n - 1,\n\t\t\t\t\t_v4 = generate,\n\t\t\t\t\t_v5 = newSeed;\n\t\t\t\tlist = _v2;\n\t\t\t\tn = _v3;\n\t\t\t\tgenerate = _v4;\n\t\t\t\tseed = _v5;\n\t\t\t\tcontinue listHelp;\n\t\t\t}\n\t\t}\n\t});\nvar _elm_lang$core$Random$minInt = -2147483648;\nvar _elm_lang$core$Random$maxInt = 2147483647;\nvar _elm_lang$core$Random$iLogBase = F2(\n\tfunction (b, i) {\n\t\treturn (_elm_lang$core$Native_Utils.cmp(i, b) < 0) ? 1 : (1 + A2(_elm_lang$core$Random$iLogBase, b, (i / b) | 0));\n\t});\nvar _elm_lang$core$Random$command = _elm_lang$core$Native_Platform.leaf('Random');\nvar _elm_lang$core$Random$Generator = function (a) {\n\treturn {ctor: 'Generator', _0: a};\n};\nvar _elm_lang$core$Random$list = F2(\n\tfunction (n, _p9) {\n\t\tvar _p10 = _p9;\n\t\treturn _elm_lang$core$Random$Generator(\n\t\t\tfunction (seed) {\n\t\t\t\treturn A4(\n\t\t\t\t\t_elm_lang$core$Random$listHelp,\n\t\t\t\t\t{ctor: '[]'},\n\t\t\t\t\tn,\n\t\t\t\t\t_p10._0,\n\t\t\t\t\tseed);\n\t\t\t});\n\t});\nvar _elm_lang$core$Random$map = F2(\n\tfunction (func, _p11) {\n\t\tvar _p12 = _p11;\n\t\treturn _elm_lang$core$Random$Generator(\n\t\t\tfunction (seed0) {\n\t\t\t\tvar _p13 = _p12._0(seed0);\n\t\t\t\tvar a = _p13._0;\n\t\t\t\tvar seed1 = _p13._1;\n\t\t\t\treturn {\n\t\t\t\t\tctor: '_Tuple2',\n\t\t\t\t\t_0: func(a),\n\t\t\t\t\t_1: seed1\n\t\t\t\t};\n\t\t\t});\n\t});\nvar _elm_lang$core$Random$map2 = F3(\n\tfunction (func, _p15, _p14) {\n\t\tvar _p16 = _p15;\n\t\tvar _p17 = _p14;\n\t\treturn _elm_lang$core$Random$Generator(\n\t\t\tfunction (seed0) {\n\t\t\t\tvar _p18 = _p16._0(seed0);\n\t\t\t\tvar a = _p18._0;\n\t\t\t\tvar seed1 = _p18._1;\n\t\t\t\tvar _p19 = _p17._0(seed1);\n\t\t\t\tvar b = _p19._0;\n\t\t\t\tvar seed2 = _p19._1;\n\t\t\t\treturn {\n\t\t\t\t\tctor: '_Tuple2',\n\t\t\t\t\t_0: A2(func, a, b),\n\t\t\t\t\t_1: seed2\n\t\t\t\t};\n\t\t\t});\n\t});\nvar _elm_lang$core$Random$pair = F2(\n\tfunction (genA, genB) {\n\t\treturn A3(\n\t\t\t_elm_lang$core$Random$map2,\n\t\t\tF2(\n\t\t\t\tfunction (v0, v1) {\n\t\t\t\t\treturn {ctor: '_Tuple2', _0: v0, _1: v1};\n\t\t\t\t}),\n\t\t\tgenA,\n\t\t\tgenB);\n\t});\nvar _elm_lang$core$Random$map3 = F4(\n\tfunction (func, _p22, _p21, _p20) {\n\t\tvar _p23 = _p22;\n\t\tvar _p24 = _p21;\n\t\tvar _p25 = _p20;\n\t\treturn _elm_lang$core$Random$Generator(\n\t\t\tfunction (seed0) {\n\t\t\t\tvar _p26 = _p23._0(seed0);\n\t\t\t\tvar a = _p26._0;\n\t\t\t\tvar seed1 = _p26._1;\n\t\t\t\tvar _p27 = _p24._0(seed1);\n\t\t\t\tvar b = _p27._0;\n\t\t\t\tvar seed2 = _p27._1;\n\t\t\t\tvar _p28 = _p25._0(seed2);\n\t\t\t\tvar c = _p28._0;\n\t\t\t\tvar seed3 = _p28._1;\n\t\t\t\treturn {\n\t\t\t\t\tctor: '_Tuple2',\n\t\t\t\t\t_0: A3(func, a, b, c),\n\t\t\t\t\t_1: seed3\n\t\t\t\t};\n\t\t\t});\n\t});\nvar _elm_lang$core$Random$map4 = F5(\n\tfunction (func, _p32, _p31, _p30, _p29) {\n\t\tvar _p33 = _p32;\n\t\tvar _p34 = _p31;\n\t\tvar _p35 = _p30;\n\t\tvar _p36 = _p29;\n\t\treturn _elm_lang$core$Random$Generator(\n\t\t\tfunction (seed0) {\n\t\t\t\tvar _p37 = _p33._0(seed0);\n\t\t\t\tvar a = _p37._0;\n\t\t\t\tvar seed1 = _p37._1;\n\t\t\t\tvar _p38 = _p34._0(seed1);\n\t\t\t\tvar b = _p38._0;\n\t\t\t\tvar seed2 = _p38._1;\n\t\t\t\tvar _p39 = _p35._0(seed2);\n\t\t\t\tvar c = _p39._0;\n\t\t\t\tvar seed3 = _p39._1;\n\t\t\t\tvar _p40 = _p36._0(seed3);\n\t\t\t\tvar d = _p40._0;\n\t\t\t\tvar seed4 = _p40._1;\n\t\t\t\treturn {\n\t\t\t\t\tctor: '_Tuple2',\n\t\t\t\t\t_0: A4(func, a, b, c, d),\n\t\t\t\t\t_1: seed4\n\t\t\t\t};\n\t\t\t});\n\t});\nvar _elm_lang$core$Random$map5 = F6(\n\tfunction (func, _p45, _p44, _p43, _p42, _p41) {\n\t\tvar _p46 = _p45;\n\t\tvar _p47 = _p44;\n\t\tvar _p48 = _p43;\n\t\tvar _p49 = _p42;\n\t\tvar _p50 = _p41;\n\t\treturn _elm_lang$core$Random$Generator(\n\t\t\tfunction (seed0) {\n\t\t\t\tvar _p51 = _p46._0(seed0);\n\t\t\t\tvar a = _p51._0;\n\t\t\t\tvar seed1 = _p51._1;\n\t\t\t\tvar _p52 = _p47._0(seed1);\n\t\t\t\tvar b = _p52._0;\n\t\t\t\tvar seed2 = _p52._1;\n\t\t\t\tvar _p53 = _p48._0(seed2);\n\t\t\t\tvar c = _p53._0;\n\t\t\t\tvar seed3 = _p53._1;\n\t\t\t\tvar _p54 = _p49._0(seed3);\n\t\t\t\tvar d = _p54._0;\n\t\t\t\tvar seed4 = _p54._1;\n\t\t\t\tvar _p55 = _p50._0(seed4);\n\t\t\t\tvar e = _p55._0;\n\t\t\t\tvar seed5 = _p55._1;\n\t\t\t\treturn {\n\t\t\t\t\tctor: '_Tuple2',\n\t\t\t\t\t_0: A5(func, a, b, c, d, e),\n\t\t\t\t\t_1: seed5\n\t\t\t\t};\n\t\t\t});\n\t});\nvar _elm_lang$core$Random$andThen = F2(\n\tfunction (callback, _p56) {\n\t\tvar _p57 = _p56;\n\t\treturn _elm_lang$core$Random$Generator(\n\t\t\tfunction (seed) {\n\t\t\t\tvar _p58 = _p57._0(seed);\n\t\t\t\tvar result = _p58._0;\n\t\t\t\tvar newSeed = _p58._1;\n\t\t\t\tvar _p59 = callback(result);\n\t\t\t\tvar genB = _p59._0;\n\t\t\t\treturn genB(newSeed);\n\t\t\t});\n\t});\nvar _elm_lang$core$Random$State = F2(\n\tfunction (a, b) {\n\t\treturn {ctor: 'State', _0: a, _1: b};\n\t});\nvar _elm_lang$core$Random$initState = function (seed) {\n\tvar s = A2(_elm_lang$core$Basics$max, seed, 0 - seed);\n\tvar q = (s / (_elm_lang$core$Random$magicNum6 - 1)) | 0;\n\tvar s2 = A2(_elm_lang$core$Basics_ops['%'], q, _elm_lang$core$Random$magicNum7 - 1);\n\tvar s1 = A2(_elm_lang$core$Basics_ops['%'], s, _elm_lang$core$Random$magicNum6 - 1);\n\treturn A2(_elm_lang$core$Random$State, s1 + 1, s2 + 1);\n};\nvar _elm_lang$core$Random$next = function (_p60) {\n\tvar _p61 = _p60;\n\tvar _p63 = _p61._1;\n\tvar _p62 = _p61._0;\n\tvar k2 = (_p63 / _elm_lang$core$Random$magicNum3) | 0;\n\tvar rawState2 = (_elm_lang$core$Random$magicNum4 * (_p63 - (k2 * _elm_lang$core$Random$magicNum3))) - (k2 * _elm_lang$core$Random$magicNum5);\n\tvar newState2 = (_elm_lang$core$Native_Utils.cmp(rawState2, 0) < 0) ? (rawState2 + _elm_lang$core$Random$magicNum7) : rawState2;\n\tvar k1 = (_p62 / _elm_lang$core$Random$magicNum1) | 0;\n\tvar rawState1 = (_elm_lang$core$Random$magicNum0 * (_p62 - (k1 * _elm_lang$core$Random$magicNum1))) - (k1 * _elm_lang$core$Random$magicNum2);\n\tvar newState1 = (_elm_lang$core$Native_Utils.cmp(rawState1, 0) < 0) ? (rawState1 + _elm_lang$core$Random$magicNum6) : rawState1;\n\tvar z = newState1 - newState2;\n\tvar newZ = (_elm_lang$core$Native_Utils.cmp(z, 1) < 0) ? (z + _elm_lang$core$Random$magicNum8) : z;\n\treturn {\n\t\tctor: '_Tuple2',\n\t\t_0: newZ,\n\t\t_1: A2(_elm_lang$core$Random$State, newState1, newState2)\n\t};\n};\nvar _elm_lang$core$Random$split = function (_p64) {\n\tvar _p65 = _p64;\n\tvar _p68 = _p65._1;\n\tvar _p67 = _p65._0;\n\tvar _p66 = _elm_lang$core$Tuple$second(\n\t\t_elm_lang$core$Random$next(_p65));\n\tvar t1 = _p66._0;\n\tvar t2 = _p66._1;\n\tvar new_s2 = _elm_lang$core$Native_Utils.eq(_p68, 1) ? (_elm_lang$core$Random$magicNum7 - 1) : (_p68 - 1);\n\tvar new_s1 = _elm_lang$core$Native_Utils.eq(_p67, _elm_lang$core$Random$magicNum6 - 1) ? 1 : (_p67 + 1);\n\treturn {\n\t\tctor: '_Tuple2',\n\t\t_0: A2(_elm_lang$core$Random$State, new_s1, t2),\n\t\t_1: A2(_elm_lang$core$Random$State, t1, new_s2)\n\t};\n};\nvar _elm_lang$core$Random$Seed = function (a) {\n\treturn {ctor: 'Seed', _0: a};\n};\nvar _elm_lang$core$Random$int = F2(\n\tfunction (a, b) {\n\t\treturn _elm_lang$core$Random$Generator(\n\t\t\tfunction (_p69) {\n\t\t\t\tvar _p70 = _p69;\n\t\t\t\tvar _p75 = _p70._0;\n\t\t\t\tvar base = 2147483561;\n\t\t\t\tvar f = F3(\n\t\t\t\t\tfunction (n, acc, state) {\n\t\t\t\t\t\tf:\n\t\t\t\t\t\twhile (true) {\n\t\t\t\t\t\t\tvar _p71 = n;\n\t\t\t\t\t\t\tif (_p71 === 0) {\n\t\t\t\t\t\t\t\treturn {ctor: '_Tuple2', _0: acc, _1: state};\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tvar _p72 = _p75.next(state);\n\t\t\t\t\t\t\t\tvar x = _p72._0;\n\t\t\t\t\t\t\t\tvar nextState = _p72._1;\n\t\t\t\t\t\t\t\tvar _v27 = n - 1,\n\t\t\t\t\t\t\t\t\t_v28 = x + (acc * base),\n\t\t\t\t\t\t\t\t\t_v29 = nextState;\n\t\t\t\t\t\t\t\tn = _v27;\n\t\t\t\t\t\t\t\tacc = _v28;\n\t\t\t\t\t\t\t\tstate = _v29;\n\t\t\t\t\t\t\t\tcontinue f;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\tvar _p73 = (_elm_lang$core$Native_Utils.cmp(a, b) < 0) ? {ctor: '_Tuple2', _0: a, _1: b} : {ctor: '_Tuple2', _0: b, _1: a};\n\t\t\t\tvar lo = _p73._0;\n\t\t\t\tvar hi = _p73._1;\n\t\t\t\tvar k = (hi - lo) + 1;\n\t\t\t\tvar n = A2(_elm_lang$core$Random$iLogBase, base, k);\n\t\t\t\tvar _p74 = A3(f, n, 1, _p75.state);\n\t\t\t\tvar v = _p74._0;\n\t\t\t\tvar nextState = _p74._1;\n\t\t\t\treturn {\n\t\t\t\t\tctor: '_Tuple2',\n\t\t\t\t\t_0: lo + A2(_elm_lang$core$Basics_ops['%'], v, k),\n\t\t\t\t\t_1: _elm_lang$core$Random$Seed(\n\t\t\t\t\t\t_elm_lang$core$Native_Utils.update(\n\t\t\t\t\t\t\t_p75,\n\t\t\t\t\t\t\t{state: nextState}))\n\t\t\t\t};\n\t\t\t});\n\t});\nvar _elm_lang$core$Random$bool = A2(\n\t_elm_lang$core$Random$map,\n\tF2(\n\t\tfunction (x, y) {\n\t\t\treturn _elm_lang$core$Native_Utils.eq(x, y);\n\t\t})(1),\n\tA2(_elm_lang$core$Random$int, 0, 1));\nvar _elm_lang$core$Random$float = F2(\n\tfunction (a, b) {\n\t\treturn _elm_lang$core$Random$Generator(\n\t\t\tfunction (seed) {\n\t\t\t\tvar _p76 = A2(\n\t\t\t\t\t_elm_lang$core$Random$step,\n\t\t\t\t\tA2(_elm_lang$core$Random$int, _elm_lang$core$Random$minInt, _elm_lang$core$Random$maxInt),\n\t\t\t\t\tseed);\n\t\t\t\tvar number = _p76._0;\n\t\t\t\tvar newSeed = _p76._1;\n\t\t\t\tvar negativeOneToOne = _elm_lang$core$Basics$toFloat(number) / _elm_lang$core$Basics$toFloat(_elm_lang$core$Random$maxInt - _elm_lang$core$Random$minInt);\n\t\t\t\tvar _p77 = (_elm_lang$core$Native_Utils.cmp(a, b) < 0) ? {ctor: '_Tuple2', _0: a, _1: b} : {ctor: '_Tuple2', _0: b, _1: a};\n\t\t\t\tvar lo = _p77._0;\n\t\t\t\tvar hi = _p77._1;\n\t\t\t\tvar scaled = ((lo + hi) / 2) + ((hi - lo) * negativeOneToOne);\n\t\t\t\treturn {ctor: '_Tuple2', _0: scaled, _1: newSeed};\n\t\t\t});\n\t});\nvar _elm_lang$core$Random$initialSeed = function (n) {\n\treturn _elm_lang$core$Random$Seed(\n\t\t{\n\t\t\tstate: _elm_lang$core$Random$initState(n),\n\t\t\tnext: _elm_lang$core$Random$next,\n\t\t\tsplit: _elm_lang$core$Random$split,\n\t\t\trange: _elm_lang$core$Random$range\n\t\t});\n};\nvar _elm_lang$core$Random$init = A2(\n\t_elm_lang$core$Task$andThen,\n\tfunction (t) {\n\t\treturn _elm_lang$core$Task$succeed(\n\t\t\t_elm_lang$core$Random$initialSeed(\n\t\t\t\t_elm_lang$core$Basics$round(t)));\n\t},\n\t_elm_lang$core$Time$now);\nvar _elm_lang$core$Random$Generate = function (a) {\n\treturn {ctor: 'Generate', _0: a};\n};\nvar _elm_lang$core$Random$generate = F2(\n\tfunction (tagger, generator) {\n\t\treturn _elm_lang$core$Random$command(\n\t\t\t_elm_lang$core$Random$Generate(\n\t\t\t\tA2(_elm_lang$core$Random$map, tagger, generator)));\n\t});\nvar _elm_lang$core$Random$cmdMap = F2(\n\tfunction (func, _p78) {\n\t\tvar _p79 = _p78;\n\t\treturn _elm_lang$core$Random$Generate(\n\t\t\tA2(_elm_lang$core$Random$map, func, _p79._0));\n\t});\n_elm_lang$core$Native_Platform.effectManagers['Random'] = {pkg: 'elm-lang/core', init: _elm_lang$core$Random$init, onEffects: _elm_lang$core$Random$onEffects, onSelfMsg: _elm_lang$core$Random$onSelfMsg, tag: 'cmd', cmdMap: _elm_lang$core$Random$cmdMap};\n\nvar _elm_community$webgl$WebGL_Settings_Internal$SampleAlphaToCoverage = {ctor: 'SampleAlphaToCoverage'};\nvar _elm_community$webgl$WebGL_Settings_Internal$SampleCoverage = F2(\n\tfunction (a, b) {\n\t\treturn {ctor: 'SampleCoverage', _0: a, _1: b};\n\t});\nvar _elm_community$webgl$WebGL_Settings_Internal$PolygonOffset = F2(\n\tfunction (a, b) {\n\t\treturn {ctor: 'PolygonOffset', _0: a, _1: b};\n\t});\nvar _elm_community$webgl$WebGL_Settings_Internal$CullFace = function (a) {\n\treturn {ctor: 'CullFace', _0: a};\n};\nvar _elm_community$webgl$WebGL_Settings_Internal$ColorMask = F4(\n\tfunction (a, b, c, d) {\n\t\treturn {ctor: 'ColorMask', _0: a, _1: b, _2: c, _3: d};\n\t});\nvar _elm_community$webgl$WebGL_Settings_Internal$Scissor = F4(\n\tfunction (a, b, c, d) {\n\t\treturn {ctor: 'Scissor', _0: a, _1: b, _2: c, _3: d};\n\t});\nvar _elm_community$webgl$WebGL_Settings_Internal$StencilTest = function (a) {\n\treturn function (b) {\n\t\treturn function (c) {\n\t\t\treturn function (d) {\n\t\t\t\treturn function (e) {\n\t\t\t\t\treturn function (f) {\n\t\t\t\t\t\treturn function (g) {\n\t\t\t\t\t\t\treturn function (h) {\n\t\t\t\t\t\t\t\treturn function (i) {\n\t\t\t\t\t\t\t\t\treturn function (j) {\n\t\t\t\t\t\t\t\t\t\treturn function (k) {\n\t\t\t\t\t\t\t\t\t\t\treturn {ctor: 'StencilTest', _0: a, _1: b, _2: c, _3: d, _4: e, _5: f, _6: g, _7: h, _8: i, _9: j, _10: k};\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t};\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t};\n\t\t};\n\t};\n};\nvar _elm_community$webgl$WebGL_Settings_Internal$DepthTest = F4(\n\tfunction (a, b, c, d) {\n\t\treturn {ctor: 'DepthTest', _0: a, _1: b, _2: c, _3: d};\n\t});\nvar _elm_community$webgl$WebGL_Settings_Internal$Blend = function (a) {\n\treturn function (b) {\n\t\treturn function (c) {\n\t\t\treturn function (d) {\n\t\t\t\treturn function (e) {\n\t\t\t\t\treturn function (f) {\n\t\t\t\t\t\treturn function (g) {\n\t\t\t\t\t\t\treturn function (h) {\n\t\t\t\t\t\t\t\treturn function (i) {\n\t\t\t\t\t\t\t\t\treturn function (j) {\n\t\t\t\t\t\t\t\t\t\treturn {ctor: 'Blend', _0: a, _1: b, _2: c, _3: d, _4: e, _5: f, _6: g, _7: h, _8: i, _9: j};\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t};\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t};\n\t\t};\n\t};\n};\n\nvar _elm_community$webgl$WebGL_Settings$cullFace = function (_p0) {\n\tvar _p1 = _p0;\n\treturn _elm_community$webgl$WebGL_Settings_Internal$CullFace(_p1._0);\n};\nvar _elm_community$webgl$WebGL_Settings$sampleCoverage = _elm_community$webgl$WebGL_Settings_Internal$SampleCoverage;\nvar _elm_community$webgl$WebGL_Settings$sampleAlphaToCoverage = _elm_community$webgl$WebGL_Settings_Internal$SampleAlphaToCoverage;\nvar _elm_community$webgl$WebGL_Settings$polygonOffset = _elm_community$webgl$WebGL_Settings_Internal$PolygonOffset;\nvar _elm_community$webgl$WebGL_Settings$colorMask = _elm_community$webgl$WebGL_Settings_Internal$ColorMask;\nvar _elm_community$webgl$WebGL_Settings$scissor = _elm_community$webgl$WebGL_Settings_Internal$Scissor;\nvar _elm_community$webgl$WebGL_Settings$FaceMode = function (a) {\n\treturn {ctor: 'FaceMode', _0: a};\n};\nvar _elm_community$webgl$WebGL_Settings$front = _elm_community$webgl$WebGL_Settings$FaceMode(1028);\nvar _elm_community$webgl$WebGL_Settings$back = _elm_community$webgl$WebGL_Settings$FaceMode(1029);\nvar _elm_community$webgl$WebGL_Settings$frontAndBack = _elm_community$webgl$WebGL_Settings$FaceMode(1032);\n\nvar _elm_community$webgl$WebGL_Settings_DepthTest$greaterOrEqual = function (_p0) {\n\tvar _p1 = _p0;\n\treturn A4(_elm_community$webgl$WebGL_Settings_Internal$DepthTest, 518, _p1.write, _p1.near, _p1.far);\n};\nvar _elm_community$webgl$WebGL_Settings_DepthTest$lessOrEqual = function (_p2) {\n\tvar _p3 = _p2;\n\treturn A4(_elm_community$webgl$WebGL_Settings_Internal$DepthTest, 515, _p3.write, _p3.near, _p3.far);\n};\nvar _elm_community$webgl$WebGL_Settings_DepthTest$notEqual = function (_p4) {\n\tvar _p5 = _p4;\n\treturn A4(_elm_community$webgl$WebGL_Settings_Internal$DepthTest, 517, _p5.write, _p5.near, _p5.far);\n};\nvar _elm_community$webgl$WebGL_Settings_DepthTest$greater = function (_p6) {\n\tvar _p7 = _p6;\n\treturn A4(_elm_community$webgl$WebGL_Settings_Internal$DepthTest, 516, _p7.write, _p7.near, _p7.far);\n};\nvar _elm_community$webgl$WebGL_Settings_DepthTest$equal = function (_p8) {\n\tvar _p9 = _p8;\n\treturn A4(_elm_community$webgl$WebGL_Settings_Internal$DepthTest, 514, _p9.write, _p9.near, _p9.far);\n};\nvar _elm_community$webgl$WebGL_Settings_DepthTest$always = function (_p10) {\n\tvar _p11 = _p10;\n\treturn A4(_elm_community$webgl$WebGL_Settings_Internal$DepthTest, 519, _p11.write, _p11.near, _p11.far);\n};\nvar _elm_community$webgl$WebGL_Settings_DepthTest$never = function (_p12) {\n\tvar _p13 = _p12;\n\treturn A4(_elm_community$webgl$WebGL_Settings_Internal$DepthTest, 512, _p13.write, _p13.near, _p13.far);\n};\nvar _elm_community$webgl$WebGL_Settings_DepthTest$less = function (_p14) {\n\tvar _p15 = _p14;\n\treturn A4(_elm_community$webgl$WebGL_Settings_Internal$DepthTest, 513, _p15.write, _p15.near, _p15.far);\n};\nvar _elm_community$webgl$WebGL_Settings_DepthTest$default = _elm_community$webgl$WebGL_Settings_DepthTest$less(\n\t{write: true, near: 0, far: 1});\nvar _elm_community$webgl$WebGL_Settings_DepthTest$Options = F3(\n\tfunction (a, b, c) {\n\t\treturn {write: a, near: b, far: c};\n\t});\n\n// eslint-disable-next-line no-unused-vars, camelcase\nvar _elm_community$webgl$Native_WebGL = function () {\n\n  // setup logging\n  // eslint-disable-next-line no-unused-vars\n  function LOG(msg) {\n    // console.log(msg);\n  }\n\n  function guid() {\n    // eslint-disable-next-line camelcase\n    return _elm_lang$core$Native_Utils.guid();\n  }\n  function listEach(fn, list) {\n    while (list.ctor !== '[]') {\n      fn(list._0);\n      list = list._1;\n    }\n  }\n  function listLength(list) {\n    var length = 0;\n    while (list.ctor !== '[]') {\n      length++;\n      list = list._1;\n    }\n    return length;\n  }\n\n  var rAF = typeof requestAnimationFrame !== 'undefined' ?\n    requestAnimationFrame :\n    function (cb) { setTimeout(cb, 1000 / 60); };\n\n  function unsafeCoerceGLSL(src) {\n    return { src: src };\n  }\n\n  function entity(settings, vert, frag, buffer, uniforms) {\n\n    if (!buffer.guid) {\n      buffer.guid = guid();\n    }\n\n    return {\n      ctor: 'Entity',\n      vert: vert,\n      frag: frag,\n      buffer: buffer,\n      uniforms: uniforms,\n      settings: settings\n    };\n\n  }\n\n /**\n  *  Apply setting to the gl context\n  *\n  *  @param {WebGLRenderingContext} gl context\n  *  @param {Setting} setting coming in from Elm\n  */\n  function applySetting(gl, setting) {\n    switch (setting.ctor) {\n      case 'Blend':\n        gl.enable(gl.BLEND);\n        // eq1 f11 f12 eq2 f21 f22 r g b a\n        gl.blendEquationSeparate(setting._0, setting._3);\n        gl.blendFuncSeparate(setting._1, setting._2, setting._4, setting._5);\n        gl.blendColor(setting._6, setting._7, setting._8, setting._9);\n        break;\n      case 'DepthTest':\n        gl.enable(gl.DEPTH_TEST);\n        // func mask near far\n        gl.depthFunc(setting._0);\n        gl.depthMask(setting._1);\n        gl.depthRange(setting._2, setting._3);\n        break;\n      case 'StencilTest':\n        gl.enable(gl.STENCIL_TEST);\n        // ref mask writeMask test1 fail1 zfail1 zpass1 test2 fail2 zfail2 zpass2\n        gl.stencilFuncSeparate(gl.FRONT, setting._3, setting._0, setting._1);\n        gl.stencilOpSeparate(gl.FRONT, setting._4, setting._5, setting._6);\n        gl.stencilMaskSeparate(gl.FRONT, setting._2);\n        gl.stencilFuncSeparate(gl.BACK, setting._7, setting._0, setting._1);\n        gl.stencilOpSeparate(gl.BACK, setting._8, setting._9, setting._10);\n        gl.stencilMaskSeparate(gl.BACK, setting._2);\n        break;\n      case 'Scissor':\n        gl.enable(gl.SCISSOR_TEST);\n        gl.scissor(setting._0, setting._1, setting._2, setting._3);\n        break;\n      case 'ColorMask':\n        gl.colorMask(setting._0, setting._1, setting._2, setting._3);\n        break;\n      case 'CullFace':\n        gl.enable(gl.CULL_FACE);\n        gl.cullFace(setting._0);\n        break;\n      case 'PolygonOffset':\n        gl.enable(gl.POLYGON_OFFSET_FILL);\n        gl.polygonOffset(setting._0, setting._1);\n        break;\n      case 'SampleCoverage':\n        gl.enable(gl.SAMPLE_COVERAGE);\n        gl.sampleCoverage(setting._0, setting._1);\n        break;\n      case 'SampleAlphaToCoverage':\n        gl.enable(gl.SAMPLE_ALPHA_TO_COVERAGE);\n        break;\n    }\n  }\n\n /**\n  *  Revert setting that was applied to the gl context\n  *\n  *  @param {WebGLRenderingContext} gl context\n  *  @param {Setting} setting coming in from Elm\n  */\n  function revertSetting(gl, setting) {\n    switch (setting.ctor) {\n      case 'Blend':\n        gl.disable(gl.BLEND);\n        break;\n      case 'DepthTest':\n        gl.disable(gl.DEPTH_TEST);\n        break;\n      case 'StencilTest':\n        gl.disable(gl.STENCIL_TEST);\n        break;\n      case 'Scissor':\n        gl.disable(gl.SCISSOR_TEST);\n        break;\n      case 'ColorMask':\n        gl.colorMask(true, true, true, true);\n        break;\n      case 'CullFace':\n        gl.disable(gl.CULL_FACE);\n        break;\n      case 'PolygonOffset':\n        gl.disable(gl.POLYGON_OFFSET_FILL);\n        break;\n      case 'SampleCoverage':\n        gl.disable(gl.SAMPLE_COVERAGE);\n        break;\n      case 'SampleAlphaToCoverage':\n        gl.disable(gl.SAMPLE_ALPHA_TO_COVERAGE);\n        break;\n    }\n  }\n\n  function doCompile(gl, src, type) {\n\n    var shader = gl.createShader(type);\n    LOG('Created shader');\n\n    gl.shaderSource(shader, src);\n    gl.compileShader(shader);\n    if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n      throw gl.getShaderInfoLog(shader);\n    }\n\n    return shader;\n\n  }\n\n  function doLink(gl, vshader, fshader) {\n\n    var program = gl.createProgram();\n    LOG('Created program');\n\n    gl.attachShader(program, vshader);\n    gl.attachShader(program, fshader);\n    gl.linkProgram(program);\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n      throw gl.getProgramInfoLog(program);\n    }\n\n    return program;\n\n  }\n\n  function getRenderInfo(gl, renderType) {\n    switch (renderType) {\n      case 'Triangles':\n        return { mode: gl.TRIANGLES, elemSize: 3, indexSize: 0 };\n      case 'LineStrip':\n        return { mode: gl.LINE_STRIP, elemSize: 1, indexSize: 0 };\n      case 'LineLoop':\n        return { mode: gl.LINE_LOOP, elemSize: 1, indexSize: 0 };\n      case 'Points':\n        return { mode: gl.POINTS, elemSize: 1, indexSize: 0 };\n      case 'Lines':\n        return { mode: gl.LINES, elemSize: 2, indexSize: 0 };\n      case 'TriangleStrip':\n        return { mode: gl.TRIANGLE_STRIP, elemSize: 1, indexSize: 0 };\n      case 'TriangleFan':\n        return { mode: gl.TRIANGLE_FAN, elemSize: 1, indexSize: 0 };\n      case 'IndexedTriangles':\n        return { mode: gl.TRIANGLES, elemSize: 1, indexSize: 3 };\n    }\n  }\n\n  function getAttributeInfo(gl, type) {\n    switch (type) {\n      case gl.FLOAT:\n        return { size: 1, type: Float32Array, baseType: gl.FLOAT };\n      case gl.FLOAT_VEC2:\n        return { size: 2, type: Float32Array, baseType: gl.FLOAT };\n      case gl.FLOAT_VEC3:\n        return { size: 3, type: Float32Array, baseType: gl.FLOAT };\n      case gl.FLOAT_VEC4:\n        return { size: 4, type: Float32Array, baseType: gl.FLOAT };\n      case gl.INT:\n        return { size: 1, type: Int32Array, baseType: gl.INT };\n      case gl.INT_VEC2:\n        return { size: 2, type: Int32Array, baseType: gl.INT };\n      case gl.INT_VEC3:\n        return { size: 3, type: Int32Array, baseType: gl.INT };\n      case gl.INT_VEC4:\n        return { size: 4, type: Int32Array, baseType: gl.INT };\n    }\n  }\n\n /**\n  *  Form the buffer for a given attribute.\n  *\n  *  @param {WebGLRenderingContext} gl context\n  *  @param {WebGLActiveInfo} attribute the attribute to bind to.\n  *         We use its name to grab the record by name and also to know\n  *         how many elements we need to grab.\n  *  @param {List} bufferElems The list coming in from Elm.\n  *  @param {Number} elemSize The length of the number of vertices that\n  *         complete one 'thing' based on the drawing mode.\n  *         ie, 2 for Lines, 3 for Triangles, etc.\n  *  @return {WebGLBuffer}\n  */\n  function doBindAttribute(gl, attribute, bufferElems, elemSize) {\n    var idxKeys = [];\n    for (var i = 0; i < elemSize; i++) {\n      idxKeys.push('_' + i);\n    }\n\n    function dataFill(data, cnt, fillOffset, elem, key) {\n      if (elemSize === 1) {\n        for (var i = 0; i < cnt; i++) {\n          data[fillOffset++] = cnt === 1 ? elem[key] : elem[key][i];\n        }\n      } else {\n        idxKeys.forEach(function (idx) {\n          for (var i = 0; i < cnt; i++) {\n            data[fillOffset++] = cnt === 1 ? elem[idx][key] : elem[idx][key][i];\n          }\n        });\n      }\n    }\n\n    var attributeInfo = getAttributeInfo(gl, attribute.type);\n\n    if (attributeInfo === undefined) {\n      throw new Error('No info available for: ' + attribute.type);\n    }\n\n    var dataIdx = 0;\n    var array = new attributeInfo.type(listLength(bufferElems) * attributeInfo.size * elemSize);\n\n    listEach(function (elem) {\n      dataFill(array, attributeInfo.size, dataIdx, elem, attribute.name);\n      dataIdx += attributeInfo.size * elemSize;\n    }, bufferElems);\n\n    var buffer = gl.createBuffer();\n    LOG('Created attribute buffer ' + attribute.name);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n    gl.bufferData(gl.ARRAY_BUFFER, array, gl.STATIC_DRAW);\n    return buffer;\n  }\n\n /**\n  *  This sets up the binding caching buffers.\n  *\n  *  We don't actually bind any buffers now except for the indices buffer.\n  *  The problem with filling the buffers here is that it is possible to\n  *  have a buffer shared between two webgl shaders;\n  *  which could have different active attributes. If we bind it here against\n  *  a particular program, we might not bind them all. That final bind is now\n  *  done right before drawing.\n  *\n  *  @param {WebGLRenderingContext} gl context\n  *  @param {Object} renderType\n  *  @param {Number} renderType.indexSize size of the index\n  *  @param {Number} renderType.elemSize size of the element\n  *  @param {Drawable} drawable a drawable object from Elm\n  *         that contains elements and optionally indices\n  *  @return {Object} buffer - an object with the following properties\n  *  @return {Number} buffer.numIndices\n  *  @return {WebGLBuffer} buffer.indexBuffer\n  *  @return {Object} buffer.buffers - will be used to buffer attributes\n  */\n  function doBindSetup(gl, renderType, drawable) {\n    LOG('Created index buffer');\n    var indexBuffer = gl.createBuffer();\n    var indices = (renderType.indexSize === 0)\n      ? makeSequentialBuffer(renderType.elemSize * listLength(drawable._0))\n      : makeIndexedBuffer(drawable._1, renderType.indexSize);\n\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indexBuffer);\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, indices, gl.STATIC_DRAW);\n\n    return {\n      numIndices: indices.length,\n      indexBuffer: indexBuffer,\n      buffers: {}\n    };\n  }\n\n /**\n  *  Create an indices array and fill it with 0..n\n  *\n  *  @param {Number} numIndices The number of indices\n  *  @return {Uint16Array} indices\n  */\n  function makeSequentialBuffer(numIndices) {\n    var indices = new Uint16Array(numIndices);\n    for (var i = 0; i < numIndices; i++) {\n      indices[i] = i;\n    }\n    return indices;\n  }\n\n /**\n  *  Create an indices array and fill it from indices\n  *  based on the size of the index\n  *\n  *  @param {List} indicesList the list of indices\n  *  @param {Number} indexSize the size of the index\n  *  @return {Uint16Array} indices\n  */\n  function makeIndexedBuffer(indicesList, indexSize) {\n    var indices = new Uint16Array(listLength(indicesList) * indexSize);\n    var fillOffset = 0;\n    var i;\n    listEach(function (elem) {\n      if (indexSize === 1) {\n        indices[fillOffset++] = elem;\n      } else {\n        for (i = 0; i < indexSize; i++) {\n          indices[fillOffset++] = elem['_' + i.toString()];\n        }\n      }\n    }, indicesList);\n    return indices;\n  }\n\n  function getProgID(vertID, fragID) {\n    return vertID + '#' + fragID;\n  }\n\n  function drawGL(domNode, data) {\n\n    var model = data.model;\n    var gl = model.cache.gl;\n\n    if (!gl) {\n      return domNode;\n    }\n\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT | gl.STENCIL_BUFFER_BIT);\n    LOG('Drawing');\n\n    function drawEntity(entity) {\n      if (listLength(entity.buffer._0) === 0) {\n        return;\n      }\n\n      var progid;\n      var program;\n      if (entity.vert.id && entity.frag.id) {\n        progid = getProgID(entity.vert.id, entity.frag.id);\n        program = model.cache.programs[progid];\n      }\n\n      if (!program) {\n\n        var vshader;\n        if (entity.vert.id) {\n          vshader = model.cache.shaders[entity.vert.id];\n        } else {\n          entity.vert.id = guid();\n        }\n\n        if (!vshader) {\n          vshader = doCompile(gl, entity.vert.src, gl.VERTEX_SHADER);\n          model.cache.shaders[entity.vert.id] = vshader;\n        }\n\n        var fshader;\n        if (entity.frag.id) {\n          fshader = model.cache.shaders[entity.frag.id];\n        } else {\n          entity.frag.id = guid();\n        }\n\n        if (!fshader) {\n          fshader = doCompile(gl, entity.frag.src, gl.FRAGMENT_SHADER);\n          model.cache.shaders[entity.frag.id] = fshader;\n        }\n\n        program = doLink(gl, vshader, fshader);\n        progid = getProgID(entity.vert.id, entity.frag.id);\n        model.cache.programs[progid] = program;\n\n      }\n\n      gl.useProgram(program);\n\n      progid = progid || getProgID(entity.vert.id, entity.frag.id);\n      var setters = model.cache.uniformSetters[progid];\n      if (!setters) {\n        setters = createUniformSetters(gl, model, program);\n        model.cache.uniformSetters[progid] = setters;\n      }\n\n      setUniforms(setters, entity.uniforms);\n\n      var entityType = getRenderInfo(gl, entity.buffer.ctor);\n      var buffer = model.cache.buffers[entity.buffer.guid];\n\n      if (!buffer) {\n        buffer = doBindSetup(gl, entityType, entity.buffer);\n        model.cache.buffers[entity.buffer.guid] = buffer;\n      }\n\n      gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffer.indexBuffer);\n\n      var numAttributes = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n\n      for (var i = 0; i < numAttributes; i++) {\n        var attribute = gl.getActiveAttrib(program, i);\n\n        var attribLocation = gl.getAttribLocation(program, attribute.name);\n        gl.enableVertexAttribArray(attribLocation);\n\n        if (buffer.buffers[attribute.name] === undefined) {\n          buffer.buffers[attribute.name] = doBindAttribute(gl, attribute, entity.buffer._0, entityType.elemSize);\n        }\n        var attributeBuffer = buffer.buffers[attribute.name];\n        var attributeInfo = getAttributeInfo(gl, attribute.type);\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, attributeBuffer);\n        gl.vertexAttribPointer(attribLocation, attributeInfo.size, attributeInfo.baseType, false, 0, 0);\n      }\n\n      listEach(function (setting) {\n        applySetting(gl, setting);\n      }, entity.settings);\n\n      gl.drawElements(entityType.mode, buffer.numIndices, gl.UNSIGNED_SHORT, 0);\n\n      listEach(function (setting) {\n        revertSetting(gl, setting);\n      }, entity.settings);\n\n    }\n\n    listEach(drawEntity, model.entities);\n    return domNode;\n  }\n\n  function createUniformSetters(gl, model, program) {\n    var textureCounter = 0;\n    function createUniformSetter(program, uniform) {\n      var uniformLocation = gl.getUniformLocation(program, uniform.name);\n      switch (uniform.type) {\n        case gl.INT:\n          return function (value) {\n            gl.uniform1i(uniformLocation, value);\n          };\n        case gl.FLOAT:\n          return function (value) {\n            gl.uniform1f(uniformLocation, value);\n          };\n        case gl.FLOAT_VEC2:\n          return function (value) {\n            gl.uniform2fv(uniformLocation, new Float32Array(value));\n          };\n        case gl.FLOAT_VEC3:\n          return function (value) {\n            gl.uniform3fv(uniformLocation, new Float32Array(value));\n          };\n        case gl.FLOAT_VEC4:\n          return function (value) {\n            gl.uniform4fv(uniformLocation, new Float32Array(value));\n          };\n        case gl.FLOAT_MAT4:\n          return function (value) {\n            gl.uniformMatrix4fv(uniformLocation, false, new Float32Array(value));\n          };\n        case gl.SAMPLER_2D:\n          var currentTexture = textureCounter++;\n          return function (texture) {\n            gl.activeTexture(gl.TEXTURE0 + currentTexture);\n            var tex = model.cache.textures[texture.id];\n            if (!tex) {\n              LOG('Created texture');\n              tex = texture.createTexture(gl);\n              model.cache.textures[texture.id] = tex;\n            }\n            gl.bindTexture(gl.TEXTURE_2D, tex);\n            gl.uniform1i(uniformLocation, currentTexture);\n          };\n        case gl.BOOL:\n          return function (value) {\n            gl.uniform1i(uniformLocation, value);\n          };\n        default:\n          LOG('Unsupported uniform type: ' + uniform.type);\n          return function () {};\n      }\n    }\n\n    var uniformSetters = {};\n    var numUniforms = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n    for (var i = 0; i < numUniforms; i++) {\n      var uniform = gl.getActiveUniform(program, i);\n      uniformSetters[uniform.name] = createUniformSetter(program, uniform);\n    }\n\n    return uniformSetters;\n  }\n\n  function setUniforms(setters, values) {\n    Object.keys(values).forEach(function (name) {\n      var setter = setters[name];\n      if (setter) {\n        setter(values[name]);\n      }\n    });\n  }\n\n  // VIRTUAL-DOM WIDGET\n\n  function toHtml(options, factList, entities) {\n    var model = {\n      entities: entities,\n      cache: {},\n      options: options\n    };\n    // eslint-disable-next-line camelcase\n    return _elm_lang$virtual_dom$Native_VirtualDom.custom(factList, model, implementation);\n  }\n\n  var implementation = {\n    render: render,\n    diff: diff\n  };\n\n  /**\n   *  Creates canvas and schedules initial drawGL\n   *  @param {Object} model\n   *  @param {Object} model.cache that may contain the following properties:\n             gl, shaders, programs, uniformSetters, buffers, textures\n   *  @param {List<Option>} model.options list of options coming from Elm\n   *  @param {List<Entity>} model.entities list of entities coming from Elm\n   *  @return {HTMLElement} <canvas> if WebGL is supported, otherwise a <div>\n   */\n  function render(model) {\n\n    var contextAttributes = {\n      alpha: false,\n      depth: false,\n      stencil: false,\n      antialias: false,\n      premultipliedAlpha: false\n    };\n    var sceneSettings = [];\n\n    listEach(function (option) {\n      var s1 = option._0;\n      switch (option.ctor) {\n        case 'Alpha':\n          contextAttributes.alpha = true;\n          contextAttributes.premultipliedAlpha = s1;\n          break;\n        case 'Antialias':\n          contextAttributes.antialias = true;\n          break;\n        case 'Depth':\n          contextAttributes.depth = true;\n          sceneSettings.push(function (gl) {\n            gl.clearDepth(s1);\n          });\n          break;\n        case 'ClearColor':\n          sceneSettings.push(function (gl) {\n            gl.clearColor(option._0, option._1, option._2, option._3);\n          });\n          break;\n        case 'Stencil':\n          contextAttributes.stencil = true;\n          sceneSettings.push(function (gl) {\n            gl.clearStencil(s1);\n          });\n          break;\n      }\n    }, model.options);\n\n    LOG('Render canvas');\n    var canvas = document.createElement('canvas');\n    var gl = canvas.getContext && (\n      canvas.getContext('webgl', contextAttributes) ||\n      canvas.getContext('experimental-webgl', contextAttributes)\n    );\n\n    if (gl) {\n      sceneSettings.forEach(function (sceneSetting) {\n        sceneSetting(gl);\n      });\n    } else {\n      canvas = document.createElement('div');\n      canvas.innerHTML = '<a href=\"http://get.webgl.org/\">Enable WebGL</a> to see this content!';\n    }\n\n    model.cache.gl = gl;\n    model.cache.shaders = [];\n    model.cache.programs = {};\n    model.cache.uniformSetters = {};\n    model.cache.buffers = [];\n    model.cache.textures = [];\n\n    // Render for the first time.\n    // This has to be done in animation frame,\n    // because the canvas is not in the DOM yet,\n    // when renderCanvas is called by virtual-dom\n    rAF(function () {\n      drawGL(canvas, {model: model});\n    });\n\n    return canvas;\n  }\n\n\n  function diff(oldModel, newModel) {\n    newModel.model.cache = oldModel.model.cache;\n    return {\n      applyPatch: drawGL,\n      data: newModel\n    };\n  }\n\n  return {\n    unsafeCoerceGLSL: unsafeCoerceGLSL,\n    entity: F5(entity),\n    toHtml: F3(toHtml)\n  };\n\n}();\n\nvar _elm_community$webgl$WebGL$toHtmlWith = F3(\n\tfunction (options, attributes, entities) {\n\t\treturn A3(_elm_community$webgl$Native_WebGL.toHtml, options, attributes, entities);\n\t});\nvar _elm_community$webgl$WebGL$entityWith = _elm_community$webgl$Native_WebGL.entity;\nvar _elm_community$webgl$WebGL$entity = _elm_community$webgl$WebGL$entityWith(\n\t{\n\t\tctor: '::',\n\t\t_0: _elm_community$webgl$WebGL_Settings_DepthTest$default,\n\t\t_1: {ctor: '[]'}\n\t});\nvar _elm_community$webgl$WebGL$unsafeShader = _elm_community$webgl$Native_WebGL.unsafeCoerceGLSL;\nvar _elm_community$webgl$WebGL$IndexedTriangles = F2(\n\tfunction (a, b) {\n\t\treturn {ctor: 'IndexedTriangles', _0: a, _1: b};\n\t});\nvar _elm_community$webgl$WebGL$indexedTriangles = _elm_community$webgl$WebGL$IndexedTriangles;\nvar _elm_community$webgl$WebGL$TriangleStrip = function (a) {\n\treturn {ctor: 'TriangleStrip', _0: a};\n};\nvar _elm_community$webgl$WebGL$triangleStrip = _elm_community$webgl$WebGL$TriangleStrip;\nvar _elm_community$webgl$WebGL$TriangleFan = function (a) {\n\treturn {ctor: 'TriangleFan', _0: a};\n};\nvar _elm_community$webgl$WebGL$triangleFan = _elm_community$webgl$WebGL$TriangleFan;\nvar _elm_community$webgl$WebGL$Points = function (a) {\n\treturn {ctor: 'Points', _0: a};\n};\nvar _elm_community$webgl$WebGL$points = _elm_community$webgl$WebGL$Points;\nvar _elm_community$webgl$WebGL$LineLoop = function (a) {\n\treturn {ctor: 'LineLoop', _0: a};\n};\nvar _elm_community$webgl$WebGL$lineLoop = _elm_community$webgl$WebGL$LineLoop;\nvar _elm_community$webgl$WebGL$LineStrip = function (a) {\n\treturn {ctor: 'LineStrip', _0: a};\n};\nvar _elm_community$webgl$WebGL$lineStrip = _elm_community$webgl$WebGL$LineStrip;\nvar _elm_community$webgl$WebGL$Lines = function (a) {\n\treturn {ctor: 'Lines', _0: a};\n};\nvar _elm_community$webgl$WebGL$lines = _elm_community$webgl$WebGL$Lines;\nvar _elm_community$webgl$WebGL$Triangles = function (a) {\n\treturn {ctor: 'Triangles', _0: a};\n};\nvar _elm_community$webgl$WebGL$triangles = _elm_community$webgl$WebGL$Triangles;\nvar _elm_community$webgl$WebGL$Shader = {ctor: 'Shader'};\nvar _elm_community$webgl$WebGL$Texture = {ctor: 'Texture'};\nvar _elm_community$webgl$WebGL$Entity = {ctor: 'Entity'};\nvar _elm_community$webgl$WebGL$ClearColor = F4(\n\tfunction (a, b, c, d) {\n\t\treturn {ctor: 'ClearColor', _0: a, _1: b, _2: c, _3: d};\n\t});\nvar _elm_community$webgl$WebGL$clearColor = _elm_community$webgl$WebGL$ClearColor;\nvar _elm_community$webgl$WebGL$Antialias = {ctor: 'Antialias'};\nvar _elm_community$webgl$WebGL$antialias = _elm_community$webgl$WebGL$Antialias;\nvar _elm_community$webgl$WebGL$Stencil = function (a) {\n\treturn {ctor: 'Stencil', _0: a};\n};\nvar _elm_community$webgl$WebGL$stencil = _elm_community$webgl$WebGL$Stencil;\nvar _elm_community$webgl$WebGL$Depth = function (a) {\n\treturn {ctor: 'Depth', _0: a};\n};\nvar _elm_community$webgl$WebGL$depth = _elm_community$webgl$WebGL$Depth;\nvar _elm_community$webgl$WebGL$Alpha = function (a) {\n\treturn {ctor: 'Alpha', _0: a};\n};\nvar _elm_community$webgl$WebGL$alpha = _elm_community$webgl$WebGL$Alpha;\nvar _elm_community$webgl$WebGL$toHtml = _elm_community$webgl$WebGL$toHtmlWith(\n\t{\n\t\tctor: '::',\n\t\t_0: _elm_community$webgl$WebGL$alpha(true),\n\t\t_1: {\n\t\t\tctor: '::',\n\t\t\t_0: _elm_community$webgl$WebGL$antialias,\n\t\t\t_1: {\n\t\t\t\tctor: '::',\n\t\t\t\t_0: _elm_community$webgl$WebGL$depth(1),\n\t\t\t\t_1: {ctor: '[]'}\n\t\t\t}\n\t\t}\n\t});\n\nvar _elm_lang$dom$Native_Dom = function() {\n\nvar fakeNode = {\n\taddEventListener: function() {},\n\tremoveEventListener: function() {}\n};\n\nvar onDocument = on(typeof document !== 'undefined' ? document : fakeNode);\nvar onWindow = on(typeof window !== 'undefined' ? window : fakeNode);\n\nfunction on(node)\n{\n\treturn function(eventName, decoder, toTask)\n\t{\n\t\treturn _elm_lang$core$Native_Scheduler.nativeBinding(function(callback) {\n\n\t\t\tfunction performTask(event)\n\t\t\t{\n\t\t\t\tvar result = A2(_elm_lang$core$Json_Decode$decodeValue, decoder, event);\n\t\t\t\tif (result.ctor === 'Ok')\n\t\t\t\t{\n\t\t\t\t\t_elm_lang$core$Native_Scheduler.rawSpawn(toTask(result._0));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tnode.addEventListener(eventName, performTask);\n\n\t\t\treturn function()\n\t\t\t{\n\t\t\t\tnode.removeEventListener(eventName, performTask);\n\t\t\t};\n\t\t});\n\t};\n}\n\nvar rAF = typeof requestAnimationFrame !== 'undefined'\n\t? requestAnimationFrame\n\t: function(callback) { callback(); };\n\nfunction withNode(id, doStuff)\n{\n\treturn _elm_lang$core$Native_Scheduler.nativeBinding(function(callback)\n\t{\n\t\trAF(function()\n\t\t{\n\t\t\tvar node = document.getElementById(id);\n\t\t\tif (node === null)\n\t\t\t{\n\t\t\t\tcallback(_elm_lang$core$Native_Scheduler.fail({ ctor: 'NotFound', _0: id }));\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcallback(_elm_lang$core$Native_Scheduler.succeed(doStuff(node)));\n\t\t});\n\t});\n}\n\n\n// FOCUS\n\nfunction focus(id)\n{\n\treturn withNode(id, function(node) {\n\t\tnode.focus();\n\t\treturn _elm_lang$core$Native_Utils.Tuple0;\n\t});\n}\n\nfunction blur(id)\n{\n\treturn withNode(id, function(node) {\n\t\tnode.blur();\n\t\treturn _elm_lang$core$Native_Utils.Tuple0;\n\t});\n}\n\n\n// SCROLLING\n\nfunction getScrollTop(id)\n{\n\treturn withNode(id, function(node) {\n\t\treturn node.scrollTop;\n\t});\n}\n\nfunction setScrollTop(id, desiredScrollTop)\n{\n\treturn withNode(id, function(node) {\n\t\tnode.scrollTop = desiredScrollTop;\n\t\treturn _elm_lang$core$Native_Utils.Tuple0;\n\t});\n}\n\nfunction toBottom(id)\n{\n\treturn withNode(id, function(node) {\n\t\tnode.scrollTop = node.scrollHeight;\n\t\treturn _elm_lang$core$Native_Utils.Tuple0;\n\t});\n}\n\nfunction getScrollLeft(id)\n{\n\treturn withNode(id, function(node) {\n\t\treturn node.scrollLeft;\n\t});\n}\n\nfunction setScrollLeft(id, desiredScrollLeft)\n{\n\treturn withNode(id, function(node) {\n\t\tnode.scrollLeft = desiredScrollLeft;\n\t\treturn _elm_lang$core$Native_Utils.Tuple0;\n\t});\n}\n\nfunction toRight(id)\n{\n\treturn withNode(id, function(node) {\n\t\tnode.scrollLeft = node.scrollWidth;\n\t\treturn _elm_lang$core$Native_Utils.Tuple0;\n\t});\n}\n\n\n// SIZE\n\nfunction width(options, id)\n{\n\treturn withNode(id, function(node) {\n\t\tswitch (options.ctor)\n\t\t{\n\t\t\tcase 'Content':\n\t\t\t\treturn node.scrollWidth;\n\t\t\tcase 'VisibleContent':\n\t\t\t\treturn node.clientWidth;\n\t\t\tcase 'VisibleContentWithBorders':\n\t\t\t\treturn node.offsetWidth;\n\t\t\tcase 'VisibleContentWithBordersAndMargins':\n\t\t\t\tvar rect = node.getBoundingClientRect();\n\t\t\t\treturn rect.right - rect.left;\n\t\t}\n\t});\n}\n\nfunction height(options, id)\n{\n\treturn withNode(id, function(node) {\n\t\tswitch (options.ctor)\n\t\t{\n\t\t\tcase 'Content':\n\t\t\t\treturn node.scrollHeight;\n\t\t\tcase 'VisibleContent':\n\t\t\t\treturn node.clientHeight;\n\t\t\tcase 'VisibleContentWithBorders':\n\t\t\t\treturn node.offsetHeight;\n\t\t\tcase 'VisibleContentWithBordersAndMargins':\n\t\t\t\tvar rect = node.getBoundingClientRect();\n\t\t\t\treturn rect.bottom - rect.top;\n\t\t}\n\t});\n}\n\nreturn {\n\tonDocument: F3(onDocument),\n\tonWindow: F3(onWindow),\n\n\tfocus: focus,\n\tblur: blur,\n\n\tgetScrollTop: getScrollTop,\n\tsetScrollTop: F2(setScrollTop),\n\tgetScrollLeft: getScrollLeft,\n\tsetScrollLeft: F2(setScrollLeft),\n\ttoBottom: toBottom,\n\ttoRight: toRight,\n\n\theight: F2(height),\n\twidth: F2(width)\n};\n\n}();\n\nvar _elm_lang$dom$Dom_LowLevel$onWindow = _elm_lang$dom$Native_Dom.onWindow;\nvar _elm_lang$dom$Dom_LowLevel$onDocument = _elm_lang$dom$Native_Dom.onDocument;\n\nvar _elm_lang$window$Native_Window = function()\n{\n\nvar size = _elm_lang$core$Native_Scheduler.nativeBinding(function(callback)\t{\n\tcallback(_elm_lang$core$Native_Scheduler.succeed({\n\t\twidth: window.innerWidth,\n\t\theight: window.innerHeight\n\t}));\n});\n\nreturn {\n\tsize: size\n};\n\n}();\nvar _elm_lang$window$Window_ops = _elm_lang$window$Window_ops || {};\n_elm_lang$window$Window_ops['&>'] = F2(\n\tfunction (task1, task2) {\n\t\treturn A2(\n\t\t\t_elm_lang$core$Task$andThen,\n\t\t\tfunction (_p0) {\n\t\t\t\treturn task2;\n\t\t\t},\n\t\t\ttask1);\n\t});\nvar _elm_lang$window$Window$onSelfMsg = F3(\n\tfunction (router, dimensions, state) {\n\t\tvar _p1 = state;\n\t\tif (_p1.ctor === 'Nothing') {\n\t\t\treturn _elm_lang$core$Task$succeed(state);\n\t\t} else {\n\t\t\tvar send = function (_p2) {\n\t\t\t\tvar _p3 = _p2;\n\t\t\t\treturn A2(\n\t\t\t\t\t_elm_lang$core$Platform$sendToApp,\n\t\t\t\t\trouter,\n\t\t\t\t\t_p3._0(dimensions));\n\t\t\t};\n\t\t\treturn A2(\n\t\t\t\t_elm_lang$window$Window_ops['&>'],\n\t\t\t\t_elm_lang$core$Task$sequence(\n\t\t\t\t\tA2(_elm_lang$core$List$map, send, _p1._0.subs)),\n\t\t\t\t_elm_lang$core$Task$succeed(state));\n\t\t}\n\t});\nvar _elm_lang$window$Window$init = _elm_lang$core$Task$succeed(_elm_lang$core$Maybe$Nothing);\nvar _elm_lang$window$Window$size = _elm_lang$window$Native_Window.size;\nvar _elm_lang$window$Window$width = A2(\n\t_elm_lang$core$Task$map,\n\tfunction (_) {\n\t\treturn _.width;\n\t},\n\t_elm_lang$window$Window$size);\nvar _elm_lang$window$Window$height = A2(\n\t_elm_lang$core$Task$map,\n\tfunction (_) {\n\t\treturn _.height;\n\t},\n\t_elm_lang$window$Window$size);\nvar _elm_lang$window$Window$onEffects = F3(\n\tfunction (router, newSubs, oldState) {\n\t\tvar _p4 = {ctor: '_Tuple2', _0: oldState, _1: newSubs};\n\t\tif (_p4._0.ctor === 'Nothing') {\n\t\t\tif (_p4._1.ctor === '[]') {\n\t\t\t\treturn _elm_lang$core$Task$succeed(_elm_lang$core$Maybe$Nothing);\n\t\t\t} else {\n\t\t\t\treturn A2(\n\t\t\t\t\t_elm_lang$core$Task$andThen,\n\t\t\t\t\tfunction (pid) {\n\t\t\t\t\t\treturn _elm_lang$core$Task$succeed(\n\t\t\t\t\t\t\t_elm_lang$core$Maybe$Just(\n\t\t\t\t\t\t\t\t{subs: newSubs, pid: pid}));\n\t\t\t\t\t},\n\t\t\t\t\t_elm_lang$core$Process$spawn(\n\t\t\t\t\t\tA3(\n\t\t\t\t\t\t\t_elm_lang$dom$Dom_LowLevel$onWindow,\n\t\t\t\t\t\t\t'resize',\n\t\t\t\t\t\t\t_elm_lang$core$Json_Decode$succeed(\n\t\t\t\t\t\t\t\t{ctor: '_Tuple0'}),\n\t\t\t\t\t\t\tfunction (_p5) {\n\t\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t\t_elm_lang$core$Task$andThen,\n\t\t\t\t\t\t\t\t\t_elm_lang$core$Platform$sendToSelf(router),\n\t\t\t\t\t\t\t\t\t_elm_lang$window$Window$size);\n\t\t\t\t\t\t\t})));\n\t\t\t}\n\t\t} else {\n\t\t\tif (_p4._1.ctor === '[]') {\n\t\t\t\treturn A2(\n\t\t\t\t\t_elm_lang$window$Window_ops['&>'],\n\t\t\t\t\t_elm_lang$core$Process$kill(_p4._0._0.pid),\n\t\t\t\t\t_elm_lang$core$Task$succeed(_elm_lang$core$Maybe$Nothing));\n\t\t\t} else {\n\t\t\t\treturn _elm_lang$core$Task$succeed(\n\t\t\t\t\t_elm_lang$core$Maybe$Just(\n\t\t\t\t\t\t{subs: newSubs, pid: _p4._0._0.pid}));\n\t\t\t}\n\t\t}\n\t});\nvar _elm_lang$window$Window$subscription = _elm_lang$core$Native_Platform.leaf('Window');\nvar _elm_lang$window$Window$Size = F2(\n\tfunction (a, b) {\n\t\treturn {width: a, height: b};\n\t});\nvar _elm_lang$window$Window$MySub = function (a) {\n\treturn {ctor: 'MySub', _0: a};\n};\nvar _elm_lang$window$Window$resizes = function (tagger) {\n\treturn _elm_lang$window$Window$subscription(\n\t\t_elm_lang$window$Window$MySub(tagger));\n};\nvar _elm_lang$window$Window$subMap = F2(\n\tfunction (func, _p6) {\n\t\tvar _p7 = _p6;\n\t\treturn _elm_lang$window$Window$MySub(\n\t\t\tfunction (_p8) {\n\t\t\t\treturn func(\n\t\t\t\t\t_p7._0(_p8));\n\t\t\t});\n\t});\n_elm_lang$core$Native_Platform.effectManagers['Window'] = {pkg: 'elm-lang/window', init: _elm_lang$window$Window$init, onEffects: _elm_lang$window$Window$onEffects, onSelfMsg: _elm_lang$window$Window$onSelfMsg, tag: 'sub', subMap: _elm_lang$window$Window$subMap};\n\nvar _dtcristo$elm_screensaver$Main$fragmentShader = {'src': '\\n\\n        precision mediump float;\\n\\n        varying vec3 vColor;\\n\\n        void main () {\\n            gl_FragColor = vec4(vColor, 1);\\n        }\\n\\n    '};\nvar _dtcristo$elm_screensaver$Main$vertexShader = {'src': '\\n\\n        attribute vec3 position;\\n        attribute vec3 color;\\n\\n        uniform mat4 transformation;\\n\\n        varying vec3 vColor;\\n\\n        void main () {\\n            gl_Position = transformation * vec4(position, 1);\\n            vColor = color;\\n        }\\n\\n    '};\nvar _dtcristo$elm_screensaver$Main$meshScale = 50;\nvar _dtcristo$elm_screensaver$Main$projection = function (size) {\n\treturn A6(\n\t\t_elm_community$linear_algebra$Math_Matrix4$makeOrtho,\n\t\t0,\n\t\t_elm_lang$core$Basics$toFloat(size.width),\n\t\t_elm_lang$core$Basics$toFloat(size.height),\n\t\t0,\n\t\t-2 * _dtcristo$elm_screensaver$Main$meshScale,\n\t\t2 * _dtcristo$elm_screensaver$Main$meshScale);\n};\nvar _dtcristo$elm_screensaver$Main$transformation = function (model) {\n\treturn A2(\n\t\t_elm_community$linear_algebra$Math_Matrix4$scale,\n\t\tA3(_elm_community$linear_algebra$Math_Vector3$vec3, _dtcristo$elm_screensaver$Main$meshScale, _dtcristo$elm_screensaver$Main$meshScale, _dtcristo$elm_screensaver$Main$meshScale),\n\t\tA3(\n\t\t\t_elm_community$linear_algebra$Math_Matrix4$rotate,\n\t\t\t2 * model.theta,\n\t\t\tA3(_elm_community$linear_algebra$Math_Vector3$vec3, 0, 0, 1),\n\t\t\tA3(\n\t\t\t\t_elm_community$linear_algebra$Math_Matrix4$rotate,\n\t\t\t\t2 * model.theta,\n\t\t\t\tA3(_elm_community$linear_algebra$Math_Vector3$vec3, 0, 1, 0),\n\t\t\t\tA3(\n\t\t\t\t\t_elm_community$linear_algebra$Math_Matrix4$rotate,\n\t\t\t\t\t4 * model.theta,\n\t\t\t\t\tA3(_elm_community$linear_algebra$Math_Vector3$vec3, 1, 0, 0),\n\t\t\t\t\tA2(\n\t\t\t\t\t\t_elm_community$linear_algebra$Math_Matrix4$translate,\n\t\t\t\t\t\tA3(_elm_community$linear_algebra$Math_Vector3$vec3, model.position.x, model.position.y, 0),\n\t\t\t\t\t\t_dtcristo$elm_screensaver$Main$projection(model.size))))));\n};\nvar _dtcristo$elm_screensaver$Main$Position = F2(\n\tfunction (a, b) {\n\t\treturn {x: a, y: b};\n\t});\nvar _dtcristo$elm_screensaver$Main$Model = F4(\n\tfunction (a, b, c, d) {\n\t\treturn {position: a, direction: b, theta: c, size: d};\n\t});\nvar _dtcristo$elm_screensaver$Main$Vertex = F2(\n\tfunction (a, b) {\n\t\treturn {color: a, position: b};\n\t});\nvar _dtcristo$elm_screensaver$Main$face = F5(\n\tfunction (rawColor, a, b, c, d) {\n\t\tvar color = function () {\n\t\t\tvar c = _elm_lang$core$Color$toRgb(rawColor);\n\t\t\treturn A3(\n\t\t\t\t_elm_community$linear_algebra$Math_Vector3$vec3,\n\t\t\t\t_elm_lang$core$Basics$toFloat(c.red) / 255,\n\t\t\t\t_elm_lang$core$Basics$toFloat(c.green) / 255,\n\t\t\t\t_elm_lang$core$Basics$toFloat(c.blue) / 255);\n\t\t}();\n\t\tvar vertex = function (position) {\n\t\t\treturn A2(_dtcristo$elm_screensaver$Main$Vertex, color, position);\n\t\t};\n\t\treturn {\n\t\t\tctor: '::',\n\t\t\t_0: {\n\t\t\t\tctor: '_Tuple3',\n\t\t\t\t_0: vertex(a),\n\t\t\t\t_1: vertex(b),\n\t\t\t\t_2: vertex(c)\n\t\t\t},\n\t\t\t_1: {\n\t\t\t\tctor: '::',\n\t\t\t\t_0: {\n\t\t\t\t\tctor: '_Tuple3',\n\t\t\t\t\t_0: vertex(c),\n\t\t\t\t\t_1: vertex(d),\n\t\t\t\t\t_2: vertex(a)\n\t\t\t\t},\n\t\t\t\t_1: {ctor: '[]'}\n\t\t\t}\n\t\t};\n\t});\nvar _dtcristo$elm_screensaver$Main$mesh = function () {\n\tvar lbb = A3(_elm_community$linear_algebra$Math_Vector3$vec3, -1, -1, -1);\n\tvar lfb = A3(_elm_community$linear_algebra$Math_Vector3$vec3, -1, 1, -1);\n\tvar rfb = A3(_elm_community$linear_algebra$Math_Vector3$vec3, 1, 1, -1);\n\tvar rbb = A3(_elm_community$linear_algebra$Math_Vector3$vec3, 1, -1, -1);\n\tvar rbt = A3(_elm_community$linear_algebra$Math_Vector3$vec3, 1, -1, 1);\n\tvar lbt = A3(_elm_community$linear_algebra$Math_Vector3$vec3, -1, -1, 1);\n\tvar lft = A3(_elm_community$linear_algebra$Math_Vector3$vec3, -1, 1, 1);\n\tvar rft = A3(_elm_community$linear_algebra$Math_Vector3$vec3, 1, 1, 1);\n\treturn _elm_community$webgl$WebGL$triangles(\n\t\t_elm_lang$core$List$concat(\n\t\t\t{\n\t\t\t\tctor: '::',\n\t\t\t\t_0: A5(_dtcristo$elm_screensaver$Main$face, _elm_lang$core$Color$green, rft, rfb, rbb, rbt),\n\t\t\t\t_1: {\n\t\t\t\t\tctor: '::',\n\t\t\t\t\t_0: A5(_dtcristo$elm_screensaver$Main$face, _elm_lang$core$Color$blue, rft, rfb, lfb, lft),\n\t\t\t\t\t_1: {\n\t\t\t\t\t\tctor: '::',\n\t\t\t\t\t\t_0: A5(_dtcristo$elm_screensaver$Main$face, _elm_lang$core$Color$yellow, rft, lft, lbt, rbt),\n\t\t\t\t\t\t_1: {\n\t\t\t\t\t\t\tctor: '::',\n\t\t\t\t\t\t\t_0: A5(_dtcristo$elm_screensaver$Main$face, _elm_lang$core$Color$red, rfb, lfb, lbb, rbb),\n\t\t\t\t\t\t\t_1: {\n\t\t\t\t\t\t\t\tctor: '::',\n\t\t\t\t\t\t\t\t_0: A5(_dtcristo$elm_screensaver$Main$face, _elm_lang$core$Color$purple, lft, lfb, lbb, lbt),\n\t\t\t\t\t\t\t\t_1: {\n\t\t\t\t\t\t\t\t\tctor: '::',\n\t\t\t\t\t\t\t\t\t_0: A5(_dtcristo$elm_screensaver$Main$face, _elm_lang$core$Color$orange, rbt, rbb, lbb, lbt),\n\t\t\t\t\t\t\t\t\t_1: {ctor: '[]'}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}));\n}();\nvar _dtcristo$elm_screensaver$Main$view = function (model) {\n\treturn A3(\n\t\t_elm_community$webgl$WebGL$toHtmlWith,\n\t\t{\n\t\t\tctor: '::',\n\t\t\t_0: A4(_elm_community$webgl$WebGL$clearColor, 0, 0, 0, 1),\n\t\t\t_1: {\n\t\t\t\tctor: '::',\n\t\t\t\t_0: _elm_community$webgl$WebGL$depth(1),\n\t\t\t\t_1: {ctor: '[]'}\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tctor: '::',\n\t\t\t_0: _elm_lang$html$Html_Attributes$width(model.size.width),\n\t\t\t_1: {\n\t\t\t\tctor: '::',\n\t\t\t\t_0: _elm_lang$html$Html_Attributes$height(model.size.height),\n\t\t\t\t_1: {\n\t\t\t\t\tctor: '::',\n\t\t\t\t\t_0: _elm_lang$html$Html_Attributes$style(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tctor: '::',\n\t\t\t\t\t\t\t_0: {ctor: '_Tuple2', _0: 'display', _1: 'block'},\n\t\t\t\t\t\t\t_1: {ctor: '[]'}\n\t\t\t\t\t\t}),\n\t\t\t\t\t_1: {ctor: '[]'}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tctor: '::',\n\t\t\t_0: A4(\n\t\t\t\t_elm_community$webgl$WebGL$entity,\n\t\t\t\t_dtcristo$elm_screensaver$Main$vertexShader,\n\t\t\t\t_dtcristo$elm_screensaver$Main$fragmentShader,\n\t\t\t\t_dtcristo$elm_screensaver$Main$mesh,\n\t\t\t\t{\n\t\t\t\t\ttransformation: _dtcristo$elm_screensaver$Main$transformation(model)\n\t\t\t\t}),\n\t\t\t_1: {ctor: '[]'}\n\t\t});\n};\nvar _dtcristo$elm_screensaver$Main$Uniforms = function (a) {\n\treturn {transformation: a};\n};\nvar _dtcristo$elm_screensaver$Main$Varyings = function (a) {\n\treturn {vColor: a};\n};\nvar _dtcristo$elm_screensaver$Main$Negative = {ctor: 'Negative'};\nvar _dtcristo$elm_screensaver$Main$Positive = {ctor: 'Positive'};\nvar _dtcristo$elm_screensaver$Main$stepDirection = F4(\n\tfunction (size, direction, initial, ds) {\n\t\tvar _p0 = direction;\n\t\tif (_p0.ctor === 'Positive') {\n\t\t\tvar $new = initial + ds;\n\t\t\treturn (_elm_lang$core$Native_Utils.cmp(\n\t\t\t\t$new + (2 * _dtcristo$elm_screensaver$Main$meshScale),\n\t\t\t\t_elm_lang$core$Basics$toFloat(size)) > 0) ? {ctor: '_Tuple3', _0: $new, _1: _dtcristo$elm_screensaver$Main$Negative, _2: true} : {ctor: '_Tuple3', _0: $new, _1: _dtcristo$elm_screensaver$Main$Positive, _2: false};\n\t\t} else {\n\t\t\tvar $new = initial - ds;\n\t\t\treturn (_elm_lang$core$Native_Utils.cmp($new - (2 * _dtcristo$elm_screensaver$Main$meshScale), 0) < 0) ? {ctor: '_Tuple3', _0: $new, _1: _dtcristo$elm_screensaver$Main$Positive, _2: true} : {ctor: '_Tuple3', _0: $new, _1: _dtcristo$elm_screensaver$Main$Negative, _2: false};\n\t\t}\n\t});\nvar _dtcristo$elm_screensaver$Main$step = F2(\n\tfunction (model, dt) {\n\t\tvar ds = 1;\n\t\tvar _p1 = A4(_dtcristo$elm_screensaver$Main$stepDirection, model.size.width, model.direction.x, model.position.x, ds);\n\t\tvar xNew = _p1._0;\n\t\tvar xDirectionNew = _p1._1;\n\t\tvar xBounce = _p1._2;\n\t\tvar _p2 = A4(_dtcristo$elm_screensaver$Main$stepDirection, model.size.height, model.direction.y, model.position.y, ds);\n\t\tvar yNew = _p2._0;\n\t\tvar yDirectionNew = _p2._1;\n\t\tvar yBounce = _p2._2;\n\t\tvar cmd = (xBounce || yBounce) ? _elm_lang$core$Platform_Cmd$none : _elm_lang$core$Platform_Cmd$none;\n\t\treturn {\n\t\t\tctor: '_Tuple2',\n\t\t\t_0: _elm_lang$core$Native_Utils.update(\n\t\t\t\tmodel,\n\t\t\t\t{\n\t\t\t\t\tposition: A2(_dtcristo$elm_screensaver$Main$Position, xNew, yNew),\n\t\t\t\t\tdirection: {x: xDirectionNew, y: yDirectionNew},\n\t\t\t\t\ttheta: model.theta + (dt / 5000)\n\t\t\t\t}),\n\t\t\t_1: cmd\n\t\t};\n\t});\nvar _dtcristo$elm_screensaver$Main$update = F2(\n\tfunction (msg, model) {\n\t\tvar _p3 = msg;\n\t\tif (_p3.ctor === 'Resize') {\n\t\t\treturn {\n\t\t\t\tctor: '_Tuple2',\n\t\t\t\t_0: _elm_lang$core$Native_Utils.update(\n\t\t\t\t\tmodel,\n\t\t\t\t\t{size: _p3._0}),\n\t\t\t\t_1: _elm_lang$core$Platform_Cmd$none\n\t\t\t};\n\t\t} else {\n\t\t\treturn A2(_dtcristo$elm_screensaver$Main$step, model, _p3._0);\n\t\t}\n\t});\nvar _dtcristo$elm_screensaver$Main$Frame = function (a) {\n\treturn {ctor: 'Frame', _0: a};\n};\nvar _dtcristo$elm_screensaver$Main$Resize = function (a) {\n\treturn {ctor: 'Resize', _0: a};\n};\nvar _dtcristo$elm_screensaver$Main$init = {\n\tctor: '_Tuple2',\n\t_0: {\n\t\tposition: A2(_dtcristo$elm_screensaver$Main$Position, 100, 100),\n\t\tdirection: {x: _dtcristo$elm_screensaver$Main$Positive, y: _dtcristo$elm_screensaver$Main$Positive},\n\t\ttheta: 0,\n\t\tsize: A2(_elm_lang$window$Window$Size, 0, 0)\n\t},\n\t_1: A2(_elm_lang$core$Task$perform, _dtcristo$elm_screensaver$Main$Resize, _elm_lang$window$Window$size)\n};\nvar _dtcristo$elm_screensaver$Main$subscriptions = function (model) {\n\treturn _elm_lang$core$Platform_Sub$batch(\n\t\t{\n\t\t\tctor: '::',\n\t\t\t_0: _elm_lang$window$Window$resizes(_dtcristo$elm_screensaver$Main$Resize),\n\t\t\t_1: {\n\t\t\t\tctor: '::',\n\t\t\t\t_0: _elm_lang$animation_frame$AnimationFrame$diffs(_dtcristo$elm_screensaver$Main$Frame),\n\t\t\t\t_1: {ctor: '[]'}\n\t\t\t}\n\t\t});\n};\nvar _dtcristo$elm_screensaver$Main$main = _elm_lang$html$Html$program(\n\t{init: _dtcristo$elm_screensaver$Main$init, view: _dtcristo$elm_screensaver$Main$view, subscriptions: _dtcristo$elm_screensaver$Main$subscriptions, update: _dtcristo$elm_screensaver$Main$update})();\n\nvar Elm = {};\nElm['Main'] = Elm['Main'] || {};\nif (typeof _dtcristo$elm_screensaver$Main$main !== 'undefined') {\n    _dtcristo$elm_screensaver$Main$main(Elm['Main'], 'Main', undefined);\n}\n\nif (true)\n{\n  !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function() { return Elm; }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  return;\n}\n\nif (true)\n{\n  module['exports'] = Elm;\n  return;\n}\n\nvar globalElm = this['Elm'];\nif (typeof globalElm === \"undefined\")\n{\n  this['Elm'] = Elm;\n  return;\n}\n\nfor (var publicModule in Elm)\n{\n  if (publicModule in globalElm)\n  {\n    throw new Error('There are two Elm modules called `' + publicModule + '` on this page! Rename one of them.');\n  }\n  globalElm[publicModule] = Elm[publicModule];\n}\n\n}).call(this);\n\n\n\n/***/ }),\n\n/***/ 0:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(\"lVK7\");\n\n\n/***/ }),\n\n/***/ \"cilB\":\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ \"lVK7\":\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(\"cilB\");\n\nvar Elm = __webpack_require__(\"/xT0\");\nvar app = Elm.Main.embed(document.querySelector('#app'));\n\n/***/ })\n\n},[0]);\n\n\n// WEBPACK FOOTER //\n// app.a59f0879.js","\n(function() {\n'use strict';\n\nfunction F2(fun)\n{\n  function wrapper(a) { return function(b) { return fun(a,b); }; }\n  wrapper.arity = 2;\n  wrapper.func = fun;\n  return wrapper;\n}\n\nfunction F3(fun)\n{\n  function wrapper(a) {\n    return function(b) { return function(c) { return fun(a, b, c); }; };\n  }\n  wrapper.arity = 3;\n  wrapper.func = fun;\n  return wrapper;\n}\n\nfunction F4(fun)\n{\n  function wrapper(a) { return function(b) { return function(c) {\n    return function(d) { return fun(a, b, c, d); }; }; };\n  }\n  wrapper.arity = 4;\n  wrapper.func = fun;\n  return wrapper;\n}\n\nfunction F5(fun)\n{\n  function wrapper(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return fun(a, b, c, d, e); }; }; }; };\n  }\n  wrapper.arity = 5;\n  wrapper.func = fun;\n  return wrapper;\n}\n\nfunction F6(fun)\n{\n  function wrapper(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return fun(a, b, c, d, e, f); }; }; }; }; };\n  }\n  wrapper.arity = 6;\n  wrapper.func = fun;\n  return wrapper;\n}\n\nfunction F7(fun)\n{\n  function wrapper(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return function(g) { return fun(a, b, c, d, e, f, g); }; }; }; }; }; };\n  }\n  wrapper.arity = 7;\n  wrapper.func = fun;\n  return wrapper;\n}\n\nfunction F8(fun)\n{\n  function wrapper(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return function(g) { return function(h) {\n    return fun(a, b, c, d, e, f, g, h); }; }; }; }; }; }; };\n  }\n  wrapper.arity = 8;\n  wrapper.func = fun;\n  return wrapper;\n}\n\nfunction F9(fun)\n{\n  function wrapper(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return function(g) { return function(h) { return function(i) {\n    return fun(a, b, c, d, e, f, g, h, i); }; }; }; }; }; }; }; };\n  }\n  wrapper.arity = 9;\n  wrapper.func = fun;\n  return wrapper;\n}\n\nfunction A2(fun, a, b)\n{\n  return fun.arity === 2\n    ? fun.func(a, b)\n    : fun(a)(b);\n}\nfunction A3(fun, a, b, c)\n{\n  return fun.arity === 3\n    ? fun.func(a, b, c)\n    : fun(a)(b)(c);\n}\nfunction A4(fun, a, b, c, d)\n{\n  return fun.arity === 4\n    ? fun.func(a, b, c, d)\n    : fun(a)(b)(c)(d);\n}\nfunction A5(fun, a, b, c, d, e)\n{\n  return fun.arity === 5\n    ? fun.func(a, b, c, d, e)\n    : fun(a)(b)(c)(d)(e);\n}\nfunction A6(fun, a, b, c, d, e, f)\n{\n  return fun.arity === 6\n    ? fun.func(a, b, c, d, e, f)\n    : fun(a)(b)(c)(d)(e)(f);\n}\nfunction A7(fun, a, b, c, d, e, f, g)\n{\n  return fun.arity === 7\n    ? fun.func(a, b, c, d, e, f, g)\n    : fun(a)(b)(c)(d)(e)(f)(g);\n}\nfunction A8(fun, a, b, c, d, e, f, g, h)\n{\n  return fun.arity === 8\n    ? fun.func(a, b, c, d, e, f, g, h)\n    : fun(a)(b)(c)(d)(e)(f)(g)(h);\n}\nfunction A9(fun, a, b, c, d, e, f, g, h, i)\n{\n  return fun.arity === 9\n    ? fun.func(a, b, c, d, e, f, g, h, i)\n    : fun(a)(b)(c)(d)(e)(f)(g)(h)(i);\n}\n\nvar _elm_lang$animation_frame$Native_AnimationFrame = function()\n{\n\nfunction create()\n{\n\treturn _elm_lang$core$Native_Scheduler.nativeBinding(function(callback)\n\t{\n\t\tvar id = requestAnimationFrame(function() {\n\t\t\tcallback(_elm_lang$core$Native_Scheduler.succeed(Date.now()));\n\t\t});\n\n\t\treturn function() {\n\t\t\tcancelAnimationFrame(id);\n\t\t};\n\t});\n}\n\nreturn {\n\tcreate: create\n};\n\n}();\n\n//import Native.Utils //\n\nvar _elm_lang$core$Native_Basics = function() {\n\nfunction div(a, b)\n{\n\treturn (a / b) | 0;\n}\nfunction rem(a, b)\n{\n\treturn a % b;\n}\nfunction mod(a, b)\n{\n\tif (b === 0)\n\t{\n\t\tthrow new Error('Cannot perform mod 0. Division by zero error.');\n\t}\n\tvar r = a % b;\n\tvar m = a === 0 ? 0 : (b > 0 ? (a >= 0 ? r : r + b) : -mod(-a, -b));\n\n\treturn m === b ? 0 : m;\n}\nfunction logBase(base, n)\n{\n\treturn Math.log(n) / Math.log(base);\n}\nfunction negate(n)\n{\n\treturn -n;\n}\nfunction abs(n)\n{\n\treturn n < 0 ? -n : n;\n}\n\nfunction min(a, b)\n{\n\treturn _elm_lang$core$Native_Utils.cmp(a, b) < 0 ? a : b;\n}\nfunction max(a, b)\n{\n\treturn _elm_lang$core$Native_Utils.cmp(a, b) > 0 ? a : b;\n}\nfunction clamp(lo, hi, n)\n{\n\treturn _elm_lang$core$Native_Utils.cmp(n, lo) < 0\n\t\t? lo\n\t\t: _elm_lang$core$Native_Utils.cmp(n, hi) > 0\n\t\t\t? hi\n\t\t\t: n;\n}\n\nvar ord = ['LT', 'EQ', 'GT'];\n\nfunction compare(x, y)\n{\n\treturn { ctor: ord[_elm_lang$core$Native_Utils.cmp(x, y) + 1] };\n}\n\nfunction xor(a, b)\n{\n\treturn a !== b;\n}\nfunction not(b)\n{\n\treturn !b;\n}\nfunction isInfinite(n)\n{\n\treturn n === Infinity || n === -Infinity;\n}\n\nfunction truncate(n)\n{\n\treturn n | 0;\n}\n\nfunction degrees(d)\n{\n\treturn d * Math.PI / 180;\n}\nfunction turns(t)\n{\n\treturn 2 * Math.PI * t;\n}\nfunction fromPolar(point)\n{\n\tvar r = point._0;\n\tvar t = point._1;\n\treturn _elm_lang$core$Native_Utils.Tuple2(r * Math.cos(t), r * Math.sin(t));\n}\nfunction toPolar(point)\n{\n\tvar x = point._0;\n\tvar y = point._1;\n\treturn _elm_lang$core$Native_Utils.Tuple2(Math.sqrt(x * x + y * y), Math.atan2(y, x));\n}\n\nreturn {\n\tdiv: F2(div),\n\trem: F2(rem),\n\tmod: F2(mod),\n\n\tpi: Math.PI,\n\te: Math.E,\n\tcos: Math.cos,\n\tsin: Math.sin,\n\ttan: Math.tan,\n\tacos: Math.acos,\n\tasin: Math.asin,\n\tatan: Math.atan,\n\tatan2: F2(Math.atan2),\n\n\tdegrees: degrees,\n\tturns: turns,\n\tfromPolar: fromPolar,\n\ttoPolar: toPolar,\n\n\tsqrt: Math.sqrt,\n\tlogBase: F2(logBase),\n\tnegate: negate,\n\tabs: abs,\n\tmin: F2(min),\n\tmax: F2(max),\n\tclamp: F3(clamp),\n\tcompare: F2(compare),\n\n\txor: F2(xor),\n\tnot: not,\n\n\ttruncate: truncate,\n\tceiling: Math.ceil,\n\tfloor: Math.floor,\n\tround: Math.round,\n\ttoFloat: function(x) { return x; },\n\tisNaN: isNaN,\n\tisInfinite: isInfinite\n};\n\n}();\n//import //\n\nvar _elm_lang$core$Native_Utils = function() {\n\n// COMPARISONS\n\nfunction eq(x, y)\n{\n\tvar stack = [];\n\tvar isEqual = eqHelp(x, y, 0, stack);\n\tvar pair;\n\twhile (isEqual && (pair = stack.pop()))\n\t{\n\t\tisEqual = eqHelp(pair.x, pair.y, 0, stack);\n\t}\n\treturn isEqual;\n}\n\n\nfunction eqHelp(x, y, depth, stack)\n{\n\tif (depth > 100)\n\t{\n\t\tstack.push({ x: x, y: y });\n\t\treturn true;\n\t}\n\n\tif (x === y)\n\t{\n\t\treturn true;\n\t}\n\n\tif (typeof x !== 'object')\n\t{\n\t\tif (typeof x === 'function')\n\t\t{\n\t\t\tthrow new Error(\n\t\t\t\t'Trying to use `(==)` on functions. There is no way to know if functions are \"the same\" in the Elm sense.'\n\t\t\t\t+ ' Read more about this at http://package.elm-lang.org/packages/elm-lang/core/latest/Basics#=='\n\t\t\t\t+ ' which describes why it is this way and what the better version will look like.'\n\t\t\t);\n\t\t}\n\t\treturn false;\n\t}\n\n\tif (x === null || y === null)\n\t{\n\t\treturn false\n\t}\n\n\tif (x instanceof Date)\n\t{\n\t\treturn x.getTime() === y.getTime();\n\t}\n\n\tif (!('ctor' in x))\n\t{\n\t\tfor (var key in x)\n\t\t{\n\t\t\tif (!eqHelp(x[key], y[key], depth + 1, stack))\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\t// convert Dicts and Sets to lists\n\tif (x.ctor === 'RBNode_elm_builtin' || x.ctor === 'RBEmpty_elm_builtin')\n\t{\n\t\tx = _elm_lang$core$Dict$toList(x);\n\t\ty = _elm_lang$core$Dict$toList(y);\n\t}\n\tif (x.ctor === 'Set_elm_builtin')\n\t{\n\t\tx = _elm_lang$core$Set$toList(x);\n\t\ty = _elm_lang$core$Set$toList(y);\n\t}\n\n\t// check if lists are equal without recursion\n\tif (x.ctor === '::')\n\t{\n\t\tvar a = x;\n\t\tvar b = y;\n\t\twhile (a.ctor === '::' && b.ctor === '::')\n\t\t{\n\t\t\tif (!eqHelp(a._0, b._0, depth + 1, stack))\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\ta = a._1;\n\t\t\tb = b._1;\n\t\t}\n\t\treturn a.ctor === b.ctor;\n\t}\n\n\t// check if Arrays are equal\n\tif (x.ctor === '_Array')\n\t{\n\t\tvar xs = _elm_lang$core$Native_Array.toJSArray(x);\n\t\tvar ys = _elm_lang$core$Native_Array.toJSArray(y);\n\t\tif (xs.length !== ys.length)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tfor (var i = 0; i < xs.length; i++)\n\t\t{\n\t\t\tif (!eqHelp(xs[i], ys[i], depth + 1, stack))\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tif (!eqHelp(x.ctor, y.ctor, depth + 1, stack))\n\t{\n\t\treturn false;\n\t}\n\n\tfor (var key in x)\n\t{\n\t\tif (!eqHelp(x[key], y[key], depth + 1, stack))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n// Code in Generate/JavaScript.hs, Basics.js, and List.js depends on\n// the particular integer values assigned to LT, EQ, and GT.\n\nvar LT = -1, EQ = 0, GT = 1;\n\nfunction cmp(x, y)\n{\n\tif (typeof x !== 'object')\n\t{\n\t\treturn x === y ? EQ : x < y ? LT : GT;\n\t}\n\n\tif (x instanceof String)\n\t{\n\t\tvar a = x.valueOf();\n\t\tvar b = y.valueOf();\n\t\treturn a === b ? EQ : a < b ? LT : GT;\n\t}\n\n\tif (x.ctor === '::' || x.ctor === '[]')\n\t{\n\t\twhile (x.ctor === '::' && y.ctor === '::')\n\t\t{\n\t\t\tvar ord = cmp(x._0, y._0);\n\t\t\tif (ord !== EQ)\n\t\t\t{\n\t\t\t\treturn ord;\n\t\t\t}\n\t\t\tx = x._1;\n\t\t\ty = y._1;\n\t\t}\n\t\treturn x.ctor === y.ctor ? EQ : x.ctor === '[]' ? LT : GT;\n\t}\n\n\tif (x.ctor.slice(0, 6) === '_Tuple')\n\t{\n\t\tvar ord;\n\t\tvar n = x.ctor.slice(6) - 0;\n\t\tvar err = 'cannot compare tuples with more than 6 elements.';\n\t\tif (n === 0) return EQ;\n\t\tif (n >= 1) { ord = cmp(x._0, y._0); if (ord !== EQ) return ord;\n\t\tif (n >= 2) { ord = cmp(x._1, y._1); if (ord !== EQ) return ord;\n\t\tif (n >= 3) { ord = cmp(x._2, y._2); if (ord !== EQ) return ord;\n\t\tif (n >= 4) { ord = cmp(x._3, y._3); if (ord !== EQ) return ord;\n\t\tif (n >= 5) { ord = cmp(x._4, y._4); if (ord !== EQ) return ord;\n\t\tif (n >= 6) { ord = cmp(x._5, y._5); if (ord !== EQ) return ord;\n\t\tif (n >= 7) throw new Error('Comparison error: ' + err); } } } } } }\n\t\treturn EQ;\n\t}\n\n\tthrow new Error(\n\t\t'Comparison error: comparison is only defined on ints, '\n\t\t+ 'floats, times, chars, strings, lists of comparable values, '\n\t\t+ 'and tuples of comparable values.'\n\t);\n}\n\n\n// COMMON VALUES\n\nvar Tuple0 = {\n\tctor: '_Tuple0'\n};\n\nfunction Tuple2(x, y)\n{\n\treturn {\n\t\tctor: '_Tuple2',\n\t\t_0: x,\n\t\t_1: y\n\t};\n}\n\nfunction chr(c)\n{\n\treturn new String(c);\n}\n\n\n// GUID\n\nvar count = 0;\nfunction guid(_)\n{\n\treturn count++;\n}\n\n\n// RECORDS\n\nfunction update(oldRecord, updatedFields)\n{\n\tvar newRecord = {};\n\n\tfor (var key in oldRecord)\n\t{\n\t\tnewRecord[key] = oldRecord[key];\n\t}\n\n\tfor (var key in updatedFields)\n\t{\n\t\tnewRecord[key] = updatedFields[key];\n\t}\n\n\treturn newRecord;\n}\n\n\n//// LIST STUFF ////\n\nvar Nil = { ctor: '[]' };\n\nfunction Cons(hd, tl)\n{\n\treturn {\n\t\tctor: '::',\n\t\t_0: hd,\n\t\t_1: tl\n\t};\n}\n\nfunction append(xs, ys)\n{\n\t// append Strings\n\tif (typeof xs === 'string')\n\t{\n\t\treturn xs + ys;\n\t}\n\n\t// append Lists\n\tif (xs.ctor === '[]')\n\t{\n\t\treturn ys;\n\t}\n\tvar root = Cons(xs._0, Nil);\n\tvar curr = root;\n\txs = xs._1;\n\twhile (xs.ctor !== '[]')\n\t{\n\t\tcurr._1 = Cons(xs._0, Nil);\n\t\txs = xs._1;\n\t\tcurr = curr._1;\n\t}\n\tcurr._1 = ys;\n\treturn root;\n}\n\n\n// CRASHES\n\nfunction crash(moduleName, region)\n{\n\treturn function(message) {\n\t\tthrow new Error(\n\t\t\t'Ran into a `Debug.crash` in module `' + moduleName + '` ' + regionToString(region) + '\\n'\n\t\t\t+ 'The message provided by the code author is:\\n\\n    '\n\t\t\t+ message\n\t\t);\n\t};\n}\n\nfunction crashCase(moduleName, region, value)\n{\n\treturn function(message) {\n\t\tthrow new Error(\n\t\t\t'Ran into a `Debug.crash` in module `' + moduleName + '`\\n\\n'\n\t\t\t+ 'This was caused by the `case` expression ' + regionToString(region) + '.\\n'\n\t\t\t+ 'One of the branches ended with a crash and the following value got through:\\n\\n    ' + toString(value) + '\\n\\n'\n\t\t\t+ 'The message provided by the code author is:\\n\\n    '\n\t\t\t+ message\n\t\t);\n\t};\n}\n\nfunction regionToString(region)\n{\n\tif (region.start.line == region.end.line)\n\t{\n\t\treturn 'on line ' + region.start.line;\n\t}\n\treturn 'between lines ' + region.start.line + ' and ' + region.end.line;\n}\n\n\n// TO STRING\n\nfunction toString(v)\n{\n\tvar type = typeof v;\n\tif (type === 'function')\n\t{\n\t\treturn '<function>';\n\t}\n\n\tif (type === 'boolean')\n\t{\n\t\treturn v ? 'True' : 'False';\n\t}\n\n\tif (type === 'number')\n\t{\n\t\treturn v + '';\n\t}\n\n\tif (v instanceof String)\n\t{\n\t\treturn '\\'' + addSlashes(v, true) + '\\'';\n\t}\n\n\tif (type === 'string')\n\t{\n\t\treturn '\"' + addSlashes(v, false) + '\"';\n\t}\n\n\tif (v === null)\n\t{\n\t\treturn 'null';\n\t}\n\n\tif (type === 'object' && 'ctor' in v)\n\t{\n\t\tvar ctorStarter = v.ctor.substring(0, 5);\n\n\t\tif (ctorStarter === '_Tupl')\n\t\t{\n\t\t\tvar output = [];\n\t\t\tfor (var k in v)\n\t\t\t{\n\t\t\t\tif (k === 'ctor') continue;\n\t\t\t\toutput.push(toString(v[k]));\n\t\t\t}\n\t\t\treturn '(' + output.join(',') + ')';\n\t\t}\n\n\t\tif (ctorStarter === '_Task')\n\t\t{\n\t\t\treturn '<task>'\n\t\t}\n\n\t\tif (v.ctor === '_Array')\n\t\t{\n\t\t\tvar list = _elm_lang$core$Array$toList(v);\n\t\t\treturn 'Array.fromList ' + toString(list);\n\t\t}\n\n\t\tif (v.ctor === '<decoder>')\n\t\t{\n\t\t\treturn '<decoder>';\n\t\t}\n\n\t\tif (v.ctor === '_Process')\n\t\t{\n\t\t\treturn '<process:' + v.id + '>';\n\t\t}\n\n\t\tif (v.ctor === '::')\n\t\t{\n\t\t\tvar output = '[' + toString(v._0);\n\t\t\tv = v._1;\n\t\t\twhile (v.ctor === '::')\n\t\t\t{\n\t\t\t\toutput += ',' + toString(v._0);\n\t\t\t\tv = v._1;\n\t\t\t}\n\t\t\treturn output + ']';\n\t\t}\n\n\t\tif (v.ctor === '[]')\n\t\t{\n\t\t\treturn '[]';\n\t\t}\n\n\t\tif (v.ctor === 'Set_elm_builtin')\n\t\t{\n\t\t\treturn 'Set.fromList ' + toString(_elm_lang$core$Set$toList(v));\n\t\t}\n\n\t\tif (v.ctor === 'RBNode_elm_builtin' || v.ctor === 'RBEmpty_elm_builtin')\n\t\t{\n\t\t\treturn 'Dict.fromList ' + toString(_elm_lang$core$Dict$toList(v));\n\t\t}\n\n\t\tvar output = '';\n\t\tfor (var i in v)\n\t\t{\n\t\t\tif (i === 'ctor') continue;\n\t\t\tvar str = toString(v[i]);\n\t\t\tvar c0 = str[0];\n\t\t\tvar parenless = c0 === '{' || c0 === '(' || c0 === '<' || c0 === '\"' || str.indexOf(' ') < 0;\n\t\t\toutput += ' ' + (parenless ? str : '(' + str + ')');\n\t\t}\n\t\treturn v.ctor + output;\n\t}\n\n\tif (type === 'object')\n\t{\n\t\tif (v instanceof Date)\n\t\t{\n\t\t\treturn '<' + v.toString() + '>';\n\t\t}\n\n\t\tif (v.elm_web_socket)\n\t\t{\n\t\t\treturn '<websocket>';\n\t\t}\n\n\t\tvar output = [];\n\t\tfor (var k in v)\n\t\t{\n\t\t\toutput.push(k + ' = ' + toString(v[k]));\n\t\t}\n\t\tif (output.length === 0)\n\t\t{\n\t\t\treturn '{}';\n\t\t}\n\t\treturn '{ ' + output.join(', ') + ' }';\n\t}\n\n\treturn '<internal structure>';\n}\n\nfunction addSlashes(str, isChar)\n{\n\tvar s = str.replace(/\\\\/g, '\\\\\\\\')\n\t\t\t  .replace(/\\n/g, '\\\\n')\n\t\t\t  .replace(/\\t/g, '\\\\t')\n\t\t\t  .replace(/\\r/g, '\\\\r')\n\t\t\t  .replace(/\\v/g, '\\\\v')\n\t\t\t  .replace(/\\0/g, '\\\\0');\n\tif (isChar)\n\t{\n\t\treturn s.replace(/\\'/g, '\\\\\\'');\n\t}\n\telse\n\t{\n\t\treturn s.replace(/\\\"/g, '\\\\\"');\n\t}\n}\n\n\nreturn {\n\teq: eq,\n\tcmp: cmp,\n\tTuple0: Tuple0,\n\tTuple2: Tuple2,\n\tchr: chr,\n\tupdate: update,\n\tguid: guid,\n\n\tappend: F2(append),\n\n\tcrash: crash,\n\tcrashCase: crashCase,\n\n\ttoString: toString\n};\n\n}();\nvar _elm_lang$core$Basics$never = function (_p0) {\n\tnever:\n\twhile (true) {\n\t\tvar _p1 = _p0;\n\t\tvar _v1 = _p1._0;\n\t\t_p0 = _v1;\n\t\tcontinue never;\n\t}\n};\nvar _elm_lang$core$Basics$uncurry = F2(\n\tfunction (f, _p2) {\n\t\tvar _p3 = _p2;\n\t\treturn A2(f, _p3._0, _p3._1);\n\t});\nvar _elm_lang$core$Basics$curry = F3(\n\tfunction (f, a, b) {\n\t\treturn f(\n\t\t\t{ctor: '_Tuple2', _0: a, _1: b});\n\t});\nvar _elm_lang$core$Basics$flip = F3(\n\tfunction (f, b, a) {\n\t\treturn A2(f, a, b);\n\t});\nvar _elm_lang$core$Basics$always = F2(\n\tfunction (a, _p4) {\n\t\treturn a;\n\t});\nvar _elm_lang$core$Basics$identity = function (x) {\n\treturn x;\n};\nvar _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};\n_elm_lang$core$Basics_ops['<|'] = F2(\n\tfunction (f, x) {\n\t\treturn f(x);\n\t});\nvar _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};\n_elm_lang$core$Basics_ops['|>'] = F2(\n\tfunction (x, f) {\n\t\treturn f(x);\n\t});\nvar _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};\n_elm_lang$core$Basics_ops['>>'] = F3(\n\tfunction (f, g, x) {\n\t\treturn g(\n\t\t\tf(x));\n\t});\nvar _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};\n_elm_lang$core$Basics_ops['<<'] = F3(\n\tfunction (g, f, x) {\n\t\treturn g(\n\t\t\tf(x));\n\t});\nvar _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};\n_elm_lang$core$Basics_ops['++'] = _elm_lang$core$Native_Utils.append;\nvar _elm_lang$core$Basics$toString = _elm_lang$core$Native_Utils.toString;\nvar _elm_lang$core$Basics$isInfinite = _elm_lang$core$Native_Basics.isInfinite;\nvar _elm_lang$core$Basics$isNaN = _elm_lang$core$Native_Basics.isNaN;\nvar _elm_lang$core$Basics$toFloat = _elm_lang$core$Native_Basics.toFloat;\nvar _elm_lang$core$Basics$ceiling = _elm_lang$core$Native_Basics.ceiling;\nvar _elm_lang$core$Basics$floor = _elm_lang$core$Native_Basics.floor;\nvar _elm_lang$core$Basics$truncate = _elm_lang$core$Native_Basics.truncate;\nvar _elm_lang$core$Basics$round = _elm_lang$core$Native_Basics.round;\nvar _elm_lang$core$Basics$not = _elm_lang$core$Native_Basics.not;\nvar _elm_lang$core$Basics$xor = _elm_lang$core$Native_Basics.xor;\nvar _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};\n_elm_lang$core$Basics_ops['||'] = _elm_lang$core$Native_Basics.or;\nvar _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};\n_elm_lang$core$Basics_ops['&&'] = _elm_lang$core$Native_Basics.and;\nvar _elm_lang$core$Basics$max = _elm_lang$core$Native_Basics.max;\nvar _elm_lang$core$Basics$min = _elm_lang$core$Native_Basics.min;\nvar _elm_lang$core$Basics$compare = _elm_lang$core$Native_Basics.compare;\nvar _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};\n_elm_lang$core$Basics_ops['>='] = _elm_lang$core$Native_Basics.ge;\nvar _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};\n_elm_lang$core$Basics_ops['<='] = _elm_lang$core$Native_Basics.le;\nvar _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};\n_elm_lang$core$Basics_ops['>'] = _elm_lang$core$Native_Basics.gt;\nvar _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};\n_elm_lang$core$Basics_ops['<'] = _elm_lang$core$Native_Basics.lt;\nvar _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};\n_elm_lang$core$Basics_ops['/='] = _elm_lang$core$Native_Basics.neq;\nvar _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};\n_elm_lang$core$Basics_ops['=='] = _elm_lang$core$Native_Basics.eq;\nvar _elm_lang$core$Basics$e = _elm_lang$core$Native_Basics.e;\nvar _elm_lang$core$Basics$pi = _elm_lang$core$Native_Basics.pi;\nvar _elm_lang$core$Basics$clamp = _elm_lang$core$Native_Basics.clamp;\nvar _elm_lang$core$Basics$logBase = _elm_lang$core$Native_Basics.logBase;\nvar _elm_lang$core$Basics$abs = _elm_lang$core$Native_Basics.abs;\nvar _elm_lang$core$Basics$negate = _elm_lang$core$Native_Basics.negate;\nvar _elm_lang$core$Basics$sqrt = _elm_lang$core$Native_Basics.sqrt;\nvar _elm_lang$core$Basics$atan2 = _elm_lang$core$Native_Basics.atan2;\nvar _elm_lang$core$Basics$atan = _elm_lang$core$Native_Basics.atan;\nvar _elm_lang$core$Basics$asin = _elm_lang$core$Native_Basics.asin;\nvar _elm_lang$core$Basics$acos = _elm_lang$core$Native_Basics.acos;\nvar _elm_lang$core$Basics$tan = _elm_lang$core$Native_Basics.tan;\nvar _elm_lang$core$Basics$sin = _elm_lang$core$Native_Basics.sin;\nvar _elm_lang$core$Basics$cos = _elm_lang$core$Native_Basics.cos;\nvar _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};\n_elm_lang$core$Basics_ops['^'] = _elm_lang$core$Native_Basics.exp;\nvar _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};\n_elm_lang$core$Basics_ops['%'] = _elm_lang$core$Native_Basics.mod;\nvar _elm_lang$core$Basics$rem = _elm_lang$core$Native_Basics.rem;\nvar _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};\n_elm_lang$core$Basics_ops['//'] = _elm_lang$core$Native_Basics.div;\nvar _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};\n_elm_lang$core$Basics_ops['/'] = _elm_lang$core$Native_Basics.floatDiv;\nvar _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};\n_elm_lang$core$Basics_ops['*'] = _elm_lang$core$Native_Basics.mul;\nvar _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};\n_elm_lang$core$Basics_ops['-'] = _elm_lang$core$Native_Basics.sub;\nvar _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};\n_elm_lang$core$Basics_ops['+'] = _elm_lang$core$Native_Basics.add;\nvar _elm_lang$core$Basics$toPolar = _elm_lang$core$Native_Basics.toPolar;\nvar _elm_lang$core$Basics$fromPolar = _elm_lang$core$Native_Basics.fromPolar;\nvar _elm_lang$core$Basics$turns = _elm_lang$core$Native_Basics.turns;\nvar _elm_lang$core$Basics$degrees = _elm_lang$core$Native_Basics.degrees;\nvar _elm_lang$core$Basics$radians = function (t) {\n\treturn t;\n};\nvar _elm_lang$core$Basics$GT = {ctor: 'GT'};\nvar _elm_lang$core$Basics$EQ = {ctor: 'EQ'};\nvar _elm_lang$core$Basics$LT = {ctor: 'LT'};\nvar _elm_lang$core$Basics$JustOneMore = function (a) {\n\treturn {ctor: 'JustOneMore', _0: a};\n};\n\n//import Native.Utils //\n\nvar _elm_lang$core$Native_Scheduler = function() {\n\nvar MAX_STEPS = 10000;\n\n\n// TASKS\n\nfunction succeed(value)\n{\n\treturn {\n\t\tctor: '_Task_succeed',\n\t\tvalue: value\n\t};\n}\n\nfunction fail(error)\n{\n\treturn {\n\t\tctor: '_Task_fail',\n\t\tvalue: error\n\t};\n}\n\nfunction nativeBinding(callback)\n{\n\treturn {\n\t\tctor: '_Task_nativeBinding',\n\t\tcallback: callback,\n\t\tcancel: null\n\t};\n}\n\nfunction andThen(callback, task)\n{\n\treturn {\n\t\tctor: '_Task_andThen',\n\t\tcallback: callback,\n\t\ttask: task\n\t};\n}\n\nfunction onError(callback, task)\n{\n\treturn {\n\t\tctor: '_Task_onError',\n\t\tcallback: callback,\n\t\ttask: task\n\t};\n}\n\nfunction receive(callback)\n{\n\treturn {\n\t\tctor: '_Task_receive',\n\t\tcallback: callback\n\t};\n}\n\n\n// PROCESSES\n\nfunction rawSpawn(task)\n{\n\tvar process = {\n\t\tctor: '_Process',\n\t\tid: _elm_lang$core$Native_Utils.guid(),\n\t\troot: task,\n\t\tstack: null,\n\t\tmailbox: []\n\t};\n\n\tenqueue(process);\n\n\treturn process;\n}\n\nfunction spawn(task)\n{\n\treturn nativeBinding(function(callback) {\n\t\tvar process = rawSpawn(task);\n\t\tcallback(succeed(process));\n\t});\n}\n\nfunction rawSend(process, msg)\n{\n\tprocess.mailbox.push(msg);\n\tenqueue(process);\n}\n\nfunction send(process, msg)\n{\n\treturn nativeBinding(function(callback) {\n\t\trawSend(process, msg);\n\t\tcallback(succeed(_elm_lang$core$Native_Utils.Tuple0));\n\t});\n}\n\nfunction kill(process)\n{\n\treturn nativeBinding(function(callback) {\n\t\tvar root = process.root;\n\t\tif (root.ctor === '_Task_nativeBinding' && root.cancel)\n\t\t{\n\t\t\troot.cancel();\n\t\t}\n\n\t\tprocess.root = null;\n\n\t\tcallback(succeed(_elm_lang$core$Native_Utils.Tuple0));\n\t});\n}\n\nfunction sleep(time)\n{\n\treturn nativeBinding(function(callback) {\n\t\tvar id = setTimeout(function() {\n\t\t\tcallback(succeed(_elm_lang$core$Native_Utils.Tuple0));\n\t\t}, time);\n\n\t\treturn function() { clearTimeout(id); };\n\t});\n}\n\n\n// STEP PROCESSES\n\nfunction step(numSteps, process)\n{\n\twhile (numSteps < MAX_STEPS)\n\t{\n\t\tvar ctor = process.root.ctor;\n\n\t\tif (ctor === '_Task_succeed')\n\t\t{\n\t\t\twhile (process.stack && process.stack.ctor === '_Task_onError')\n\t\t\t{\n\t\t\t\tprocess.stack = process.stack.rest;\n\t\t\t}\n\t\t\tif (process.stack === null)\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tprocess.root = process.stack.callback(process.root.value);\n\t\t\tprocess.stack = process.stack.rest;\n\t\t\t++numSteps;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (ctor === '_Task_fail')\n\t\t{\n\t\t\twhile (process.stack && process.stack.ctor === '_Task_andThen')\n\t\t\t{\n\t\t\t\tprocess.stack = process.stack.rest;\n\t\t\t}\n\t\t\tif (process.stack === null)\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tprocess.root = process.stack.callback(process.root.value);\n\t\t\tprocess.stack = process.stack.rest;\n\t\t\t++numSteps;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (ctor === '_Task_andThen')\n\t\t{\n\t\t\tprocess.stack = {\n\t\t\t\tctor: '_Task_andThen',\n\t\t\t\tcallback: process.root.callback,\n\t\t\t\trest: process.stack\n\t\t\t};\n\t\t\tprocess.root = process.root.task;\n\t\t\t++numSteps;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (ctor === '_Task_onError')\n\t\t{\n\t\t\tprocess.stack = {\n\t\t\t\tctor: '_Task_onError',\n\t\t\t\tcallback: process.root.callback,\n\t\t\t\trest: process.stack\n\t\t\t};\n\t\t\tprocess.root = process.root.task;\n\t\t\t++numSteps;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (ctor === '_Task_nativeBinding')\n\t\t{\n\t\t\tprocess.root.cancel = process.root.callback(function(newRoot) {\n\t\t\t\tprocess.root = newRoot;\n\t\t\t\tenqueue(process);\n\t\t\t});\n\n\t\t\tbreak;\n\t\t}\n\n\t\tif (ctor === '_Task_receive')\n\t\t{\n\t\t\tvar mailbox = process.mailbox;\n\t\t\tif (mailbox.length === 0)\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tprocess.root = process.root.callback(mailbox.shift());\n\t\t\t++numSteps;\n\t\t\tcontinue;\n\t\t}\n\n\t\tthrow new Error(ctor);\n\t}\n\n\tif (numSteps < MAX_STEPS)\n\t{\n\t\treturn numSteps + 1;\n\t}\n\tenqueue(process);\n\n\treturn numSteps;\n}\n\n\n// WORK QUEUE\n\nvar working = false;\nvar workQueue = [];\n\nfunction enqueue(process)\n{\n\tworkQueue.push(process);\n\n\tif (!working)\n\t{\n\t\tsetTimeout(work, 0);\n\t\tworking = true;\n\t}\n}\n\nfunction work()\n{\n\tvar numSteps = 0;\n\tvar process;\n\twhile (numSteps < MAX_STEPS && (process = workQueue.shift()))\n\t{\n\t\tif (process.root)\n\t\t{\n\t\t\tnumSteps = step(numSteps, process);\n\t\t}\n\t}\n\tif (!process)\n\t{\n\t\tworking = false;\n\t\treturn;\n\t}\n\tsetTimeout(work, 0);\n}\n\n\nreturn {\n\tsucceed: succeed,\n\tfail: fail,\n\tnativeBinding: nativeBinding,\n\tandThen: F2(andThen),\n\tonError: F2(onError),\n\treceive: receive,\n\n\tspawn: spawn,\n\tkill: kill,\n\tsleep: sleep,\n\tsend: F2(send),\n\n\trawSpawn: rawSpawn,\n\trawSend: rawSend\n};\n\n}();\n//import //\n\nvar _elm_lang$core$Native_Platform = function() {\n\n\n// PROGRAMS\n\nfunction program(impl)\n{\n\treturn function(flagDecoder)\n\t{\n\t\treturn function(object, moduleName)\n\t\t{\n\t\t\tobject['worker'] = function worker(flags)\n\t\t\t{\n\t\t\t\tif (typeof flags !== 'undefined')\n\t\t\t\t{\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t'The `' + moduleName + '` module does not need flags.\\n'\n\t\t\t\t\t\t+ 'Call ' + moduleName + '.worker() with no arguments and you should be all set!'\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\treturn initialize(\n\t\t\t\t\timpl.init,\n\t\t\t\t\timpl.update,\n\t\t\t\t\timpl.subscriptions,\n\t\t\t\t\trenderer\n\t\t\t\t);\n\t\t\t};\n\t\t};\n\t};\n}\n\nfunction programWithFlags(impl)\n{\n\treturn function(flagDecoder)\n\t{\n\t\treturn function(object, moduleName)\n\t\t{\n\t\t\tobject['worker'] = function worker(flags)\n\t\t\t{\n\t\t\t\tif (typeof flagDecoder === 'undefined')\n\t\t\t\t{\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t'Are you trying to sneak a Never value into Elm? Trickster!\\n'\n\t\t\t\t\t\t+ 'It looks like ' + moduleName + '.main is defined with `programWithFlags` but has type `Program Never`.\\n'\n\t\t\t\t\t\t+ 'Use `program` instead if you do not want flags.'\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tvar result = A2(_elm_lang$core$Native_Json.run, flagDecoder, flags);\n\t\t\t\tif (result.ctor === 'Err')\n\t\t\t\t{\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\tmoduleName + '.worker(...) was called with an unexpected argument.\\n'\n\t\t\t\t\t\t+ 'I tried to convert it to an Elm value, but ran into this problem:\\n\\n'\n\t\t\t\t\t\t+ result._0\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\treturn initialize(\n\t\t\t\t\timpl.init(result._0),\n\t\t\t\t\timpl.update,\n\t\t\t\t\timpl.subscriptions,\n\t\t\t\t\trenderer\n\t\t\t\t);\n\t\t\t};\n\t\t};\n\t};\n}\n\nfunction renderer(enqueue, _)\n{\n\treturn function(_) {};\n}\n\n\n// HTML TO PROGRAM\n\nfunction htmlToProgram(vnode)\n{\n\tvar emptyBag = batch(_elm_lang$core$Native_List.Nil);\n\tvar noChange = _elm_lang$core$Native_Utils.Tuple2(\n\t\t_elm_lang$core$Native_Utils.Tuple0,\n\t\temptyBag\n\t);\n\n\treturn _elm_lang$virtual_dom$VirtualDom$program({\n\t\tinit: noChange,\n\t\tview: function(model) { return main; },\n\t\tupdate: F2(function(msg, model) { return noChange; }),\n\t\tsubscriptions: function (model) { return emptyBag; }\n\t});\n}\n\n\n// INITIALIZE A PROGRAM\n\nfunction initialize(init, update, subscriptions, renderer)\n{\n\t// ambient state\n\tvar managers = {};\n\tvar updateView;\n\n\t// init and update state in main process\n\tvar initApp = _elm_lang$core$Native_Scheduler.nativeBinding(function(callback) {\n\t\tvar model = init._0;\n\t\tupdateView = renderer(enqueue, model);\n\t\tvar cmds = init._1;\n\t\tvar subs = subscriptions(model);\n\t\tdispatchEffects(managers, cmds, subs);\n\t\tcallback(_elm_lang$core$Native_Scheduler.succeed(model));\n\t});\n\n\tfunction onMessage(msg, model)\n\t{\n\t\treturn _elm_lang$core$Native_Scheduler.nativeBinding(function(callback) {\n\t\t\tvar results = A2(update, msg, model);\n\t\t\tmodel = results._0;\n\t\t\tupdateView(model);\n\t\t\tvar cmds = results._1;\n\t\t\tvar subs = subscriptions(model);\n\t\t\tdispatchEffects(managers, cmds, subs);\n\t\t\tcallback(_elm_lang$core$Native_Scheduler.succeed(model));\n\t\t});\n\t}\n\n\tvar mainProcess = spawnLoop(initApp, onMessage);\n\n\tfunction enqueue(msg)\n\t{\n\t\t_elm_lang$core$Native_Scheduler.rawSend(mainProcess, msg);\n\t}\n\n\tvar ports = setupEffects(managers, enqueue);\n\n\treturn ports ? { ports: ports } : {};\n}\n\n\n// EFFECT MANAGERS\n\nvar effectManagers = {};\n\nfunction setupEffects(managers, callback)\n{\n\tvar ports;\n\n\t// setup all necessary effect managers\n\tfor (var key in effectManagers)\n\t{\n\t\tvar manager = effectManagers[key];\n\n\t\tif (manager.isForeign)\n\t\t{\n\t\t\tports = ports || {};\n\t\t\tports[key] = manager.tag === 'cmd'\n\t\t\t\t? setupOutgoingPort(key)\n\t\t\t\t: setupIncomingPort(key, callback);\n\t\t}\n\n\t\tmanagers[key] = makeManager(manager, callback);\n\t}\n\n\treturn ports;\n}\n\nfunction makeManager(info, callback)\n{\n\tvar router = {\n\t\tmain: callback,\n\t\tself: undefined\n\t};\n\n\tvar tag = info.tag;\n\tvar onEffects = info.onEffects;\n\tvar onSelfMsg = info.onSelfMsg;\n\n\tfunction onMessage(msg, state)\n\t{\n\t\tif (msg.ctor === 'self')\n\t\t{\n\t\t\treturn A3(onSelfMsg, router, msg._0, state);\n\t\t}\n\n\t\tvar fx = msg._0;\n\t\tswitch (tag)\n\t\t{\n\t\t\tcase 'cmd':\n\t\t\t\treturn A3(onEffects, router, fx.cmds, state);\n\n\t\t\tcase 'sub':\n\t\t\t\treturn A3(onEffects, router, fx.subs, state);\n\n\t\t\tcase 'fx':\n\t\t\t\treturn A4(onEffects, router, fx.cmds, fx.subs, state);\n\t\t}\n\t}\n\n\tvar process = spawnLoop(info.init, onMessage);\n\trouter.self = process;\n\treturn process;\n}\n\nfunction sendToApp(router, msg)\n{\n\treturn _elm_lang$core$Native_Scheduler.nativeBinding(function(callback)\n\t{\n\t\trouter.main(msg);\n\t\tcallback(_elm_lang$core$Native_Scheduler.succeed(_elm_lang$core$Native_Utils.Tuple0));\n\t});\n}\n\nfunction sendToSelf(router, msg)\n{\n\treturn A2(_elm_lang$core$Native_Scheduler.send, router.self, {\n\t\tctor: 'self',\n\t\t_0: msg\n\t});\n}\n\n\n// HELPER for STATEFUL LOOPS\n\nfunction spawnLoop(init, onMessage)\n{\n\tvar andThen = _elm_lang$core$Native_Scheduler.andThen;\n\n\tfunction loop(state)\n\t{\n\t\tvar handleMsg = _elm_lang$core$Native_Scheduler.receive(function(msg) {\n\t\t\treturn onMessage(msg, state);\n\t\t});\n\t\treturn A2(andThen, loop, handleMsg);\n\t}\n\n\tvar task = A2(andThen, loop, init);\n\n\treturn _elm_lang$core$Native_Scheduler.rawSpawn(task);\n}\n\n\n// BAGS\n\nfunction leaf(home)\n{\n\treturn function(value)\n\t{\n\t\treturn {\n\t\t\ttype: 'leaf',\n\t\t\thome: home,\n\t\t\tvalue: value\n\t\t};\n\t};\n}\n\nfunction batch(list)\n{\n\treturn {\n\t\ttype: 'node',\n\t\tbranches: list\n\t};\n}\n\nfunction map(tagger, bag)\n{\n\treturn {\n\t\ttype: 'map',\n\t\ttagger: tagger,\n\t\ttree: bag\n\t}\n}\n\n\n// PIPE BAGS INTO EFFECT MANAGERS\n\nfunction dispatchEffects(managers, cmdBag, subBag)\n{\n\tvar effectsDict = {};\n\tgatherEffects(true, cmdBag, effectsDict, null);\n\tgatherEffects(false, subBag, effectsDict, null);\n\n\tfor (var home in managers)\n\t{\n\t\tvar fx = home in effectsDict\n\t\t\t? effectsDict[home]\n\t\t\t: {\n\t\t\t\tcmds: _elm_lang$core$Native_List.Nil,\n\t\t\t\tsubs: _elm_lang$core$Native_List.Nil\n\t\t\t};\n\n\t\t_elm_lang$core$Native_Scheduler.rawSend(managers[home], { ctor: 'fx', _0: fx });\n\t}\n}\n\nfunction gatherEffects(isCmd, bag, effectsDict, taggers)\n{\n\tswitch (bag.type)\n\t{\n\t\tcase 'leaf':\n\t\t\tvar home = bag.home;\n\t\t\tvar effect = toEffect(isCmd, home, taggers, bag.value);\n\t\t\teffectsDict[home] = insert(isCmd, effect, effectsDict[home]);\n\t\t\treturn;\n\n\t\tcase 'node':\n\t\t\tvar list = bag.branches;\n\t\t\twhile (list.ctor !== '[]')\n\t\t\t{\n\t\t\t\tgatherEffects(isCmd, list._0, effectsDict, taggers);\n\t\t\t\tlist = list._1;\n\t\t\t}\n\t\t\treturn;\n\n\t\tcase 'map':\n\t\t\tgatherEffects(isCmd, bag.tree, effectsDict, {\n\t\t\t\ttagger: bag.tagger,\n\t\t\t\trest: taggers\n\t\t\t});\n\t\t\treturn;\n\t}\n}\n\nfunction toEffect(isCmd, home, taggers, value)\n{\n\tfunction applyTaggers(x)\n\t{\n\t\tvar temp = taggers;\n\t\twhile (temp)\n\t\t{\n\t\t\tx = temp.tagger(x);\n\t\t\ttemp = temp.rest;\n\t\t}\n\t\treturn x;\n\t}\n\n\tvar map = isCmd\n\t\t? effectManagers[home].cmdMap\n\t\t: effectManagers[home].subMap;\n\n\treturn A2(map, applyTaggers, value)\n}\n\nfunction insert(isCmd, newEffect, effects)\n{\n\teffects = effects || {\n\t\tcmds: _elm_lang$core$Native_List.Nil,\n\t\tsubs: _elm_lang$core$Native_List.Nil\n\t};\n\tif (isCmd)\n\t{\n\t\teffects.cmds = _elm_lang$core$Native_List.Cons(newEffect, effects.cmds);\n\t\treturn effects;\n\t}\n\teffects.subs = _elm_lang$core$Native_List.Cons(newEffect, effects.subs);\n\treturn effects;\n}\n\n\n// PORTS\n\nfunction checkPortName(name)\n{\n\tif (name in effectManagers)\n\t{\n\t\tthrow new Error('There can only be one port named `' + name + '`, but your program has multiple.');\n\t}\n}\n\n\n// OUTGOING PORTS\n\nfunction outgoingPort(name, converter)\n{\n\tcheckPortName(name);\n\teffectManagers[name] = {\n\t\ttag: 'cmd',\n\t\tcmdMap: outgoingPortMap,\n\t\tconverter: converter,\n\t\tisForeign: true\n\t};\n\treturn leaf(name);\n}\n\nvar outgoingPortMap = F2(function cmdMap(tagger, value) {\n\treturn value;\n});\n\nfunction setupOutgoingPort(name)\n{\n\tvar subs = [];\n\tvar converter = effectManagers[name].converter;\n\n\t// CREATE MANAGER\n\n\tvar init = _elm_lang$core$Native_Scheduler.succeed(null);\n\n\tfunction onEffects(router, cmdList, state)\n\t{\n\t\twhile (cmdList.ctor !== '[]')\n\t\t{\n\t\t\t// grab a separate reference to subs in case unsubscribe is called\n\t\t\tvar currentSubs = subs;\n\t\t\tvar value = converter(cmdList._0);\n\t\t\tfor (var i = 0; i < currentSubs.length; i++)\n\t\t\t{\n\t\t\t\tcurrentSubs[i](value);\n\t\t\t}\n\t\t\tcmdList = cmdList._1;\n\t\t}\n\t\treturn init;\n\t}\n\n\teffectManagers[name].init = init;\n\teffectManagers[name].onEffects = F3(onEffects);\n\n\t// PUBLIC API\n\n\tfunction subscribe(callback)\n\t{\n\t\tsubs.push(callback);\n\t}\n\n\tfunction unsubscribe(callback)\n\t{\n\t\t// copy subs into a new array in case unsubscribe is called within a\n\t\t// subscribed callback\n\t\tsubs = subs.slice();\n\t\tvar index = subs.indexOf(callback);\n\t\tif (index >= 0)\n\t\t{\n\t\t\tsubs.splice(index, 1);\n\t\t}\n\t}\n\n\treturn {\n\t\tsubscribe: subscribe,\n\t\tunsubscribe: unsubscribe\n\t};\n}\n\n\n// INCOMING PORTS\n\nfunction incomingPort(name, converter)\n{\n\tcheckPortName(name);\n\teffectManagers[name] = {\n\t\ttag: 'sub',\n\t\tsubMap: incomingPortMap,\n\t\tconverter: converter,\n\t\tisForeign: true\n\t};\n\treturn leaf(name);\n}\n\nvar incomingPortMap = F2(function subMap(tagger, finalTagger)\n{\n\treturn function(value)\n\t{\n\t\treturn tagger(finalTagger(value));\n\t};\n});\n\nfunction setupIncomingPort(name, callback)\n{\n\tvar sentBeforeInit = [];\n\tvar subs = _elm_lang$core$Native_List.Nil;\n\tvar converter = effectManagers[name].converter;\n\tvar currentOnEffects = preInitOnEffects;\n\tvar currentSend = preInitSend;\n\n\t// CREATE MANAGER\n\n\tvar init = _elm_lang$core$Native_Scheduler.succeed(null);\n\n\tfunction preInitOnEffects(router, subList, state)\n\t{\n\t\tvar postInitResult = postInitOnEffects(router, subList, state);\n\n\t\tfor(var i = 0; i < sentBeforeInit.length; i++)\n\t\t{\n\t\t\tpostInitSend(sentBeforeInit[i]);\n\t\t}\n\n\t\tsentBeforeInit = null; // to release objects held in queue\n\t\tcurrentSend = postInitSend;\n\t\tcurrentOnEffects = postInitOnEffects;\n\t\treturn postInitResult;\n\t}\n\n\tfunction postInitOnEffects(router, subList, state)\n\t{\n\t\tsubs = subList;\n\t\treturn init;\n\t}\n\n\tfunction onEffects(router, subList, state)\n\t{\n\t\treturn currentOnEffects(router, subList, state);\n\t}\n\n\teffectManagers[name].init = init;\n\teffectManagers[name].onEffects = F3(onEffects);\n\n\t// PUBLIC API\n\n\tfunction preInitSend(value)\n\t{\n\t\tsentBeforeInit.push(value);\n\t}\n\n\tfunction postInitSend(value)\n\t{\n\t\tvar temp = subs;\n\t\twhile (temp.ctor !== '[]')\n\t\t{\n\t\t\tcallback(temp._0(value));\n\t\t\ttemp = temp._1;\n\t\t}\n\t}\n\n\tfunction send(incomingValue)\n\t{\n\t\tvar result = A2(_elm_lang$core$Json_Decode$decodeValue, converter, incomingValue);\n\t\tif (result.ctor === 'Err')\n\t\t{\n\t\t\tthrow new Error('Trying to send an unexpected type of value through port `' + name + '`:\\n' + result._0);\n\t\t}\n\n\t\tcurrentSend(result._0);\n\t}\n\n\treturn { send: send };\n}\n\nreturn {\n\t// routers\n\tsendToApp: F2(sendToApp),\n\tsendToSelf: F2(sendToSelf),\n\n\t// global setup\n\teffectManagers: effectManagers,\n\toutgoingPort: outgoingPort,\n\tincomingPort: incomingPort,\n\n\thtmlToProgram: htmlToProgram,\n\tprogram: program,\n\tprogramWithFlags: programWithFlags,\n\tinitialize: initialize,\n\n\t// effect bags\n\tleaf: leaf,\n\tbatch: batch,\n\tmap: F2(map)\n};\n\n}();\n\nvar _elm_lang$core$Platform_Cmd$batch = _elm_lang$core$Native_Platform.batch;\nvar _elm_lang$core$Platform_Cmd$none = _elm_lang$core$Platform_Cmd$batch(\n\t{ctor: '[]'});\nvar _elm_lang$core$Platform_Cmd_ops = _elm_lang$core$Platform_Cmd_ops || {};\n_elm_lang$core$Platform_Cmd_ops['!'] = F2(\n\tfunction (model, commands) {\n\t\treturn {\n\t\t\tctor: '_Tuple2',\n\t\t\t_0: model,\n\t\t\t_1: _elm_lang$core$Platform_Cmd$batch(commands)\n\t\t};\n\t});\nvar _elm_lang$core$Platform_Cmd$map = _elm_lang$core$Native_Platform.map;\nvar _elm_lang$core$Platform_Cmd$Cmd = {ctor: 'Cmd'};\n\nvar _elm_lang$core$Platform_Sub$batch = _elm_lang$core$Native_Platform.batch;\nvar _elm_lang$core$Platform_Sub$none = _elm_lang$core$Platform_Sub$batch(\n\t{ctor: '[]'});\nvar _elm_lang$core$Platform_Sub$map = _elm_lang$core$Native_Platform.map;\nvar _elm_lang$core$Platform_Sub$Sub = {ctor: 'Sub'};\n\nvar _elm_lang$core$Platform$hack = _elm_lang$core$Native_Scheduler.succeed;\nvar _elm_lang$core$Platform$sendToSelf = _elm_lang$core$Native_Platform.sendToSelf;\nvar _elm_lang$core$Platform$sendToApp = _elm_lang$core$Native_Platform.sendToApp;\nvar _elm_lang$core$Platform$programWithFlags = _elm_lang$core$Native_Platform.programWithFlags;\nvar _elm_lang$core$Platform$program = _elm_lang$core$Native_Platform.program;\nvar _elm_lang$core$Platform$Program = {ctor: 'Program'};\nvar _elm_lang$core$Platform$Task = {ctor: 'Task'};\nvar _elm_lang$core$Platform$ProcessId = {ctor: 'ProcessId'};\nvar _elm_lang$core$Platform$Router = {ctor: 'Router'};\n\nvar _elm_lang$core$Maybe$withDefault = F2(\n\tfunction ($default, maybe) {\n\t\tvar _p0 = maybe;\n\t\tif (_p0.ctor === 'Just') {\n\t\t\treturn _p0._0;\n\t\t} else {\n\t\t\treturn $default;\n\t\t}\n\t});\nvar _elm_lang$core$Maybe$Nothing = {ctor: 'Nothing'};\nvar _elm_lang$core$Maybe$andThen = F2(\n\tfunction (callback, maybeValue) {\n\t\tvar _p1 = maybeValue;\n\t\tif (_p1.ctor === 'Just') {\n\t\t\treturn callback(_p1._0);\n\t\t} else {\n\t\t\treturn _elm_lang$core$Maybe$Nothing;\n\t\t}\n\t});\nvar _elm_lang$core$Maybe$Just = function (a) {\n\treturn {ctor: 'Just', _0: a};\n};\nvar _elm_lang$core$Maybe$map = F2(\n\tfunction (f, maybe) {\n\t\tvar _p2 = maybe;\n\t\tif (_p2.ctor === 'Just') {\n\t\t\treturn _elm_lang$core$Maybe$Just(\n\t\t\t\tf(_p2._0));\n\t\t} else {\n\t\t\treturn _elm_lang$core$Maybe$Nothing;\n\t\t}\n\t});\nvar _elm_lang$core$Maybe$map2 = F3(\n\tfunction (func, ma, mb) {\n\t\tvar _p3 = {ctor: '_Tuple2', _0: ma, _1: mb};\n\t\tif (((_p3.ctor === '_Tuple2') && (_p3._0.ctor === 'Just')) && (_p3._1.ctor === 'Just')) {\n\t\t\treturn _elm_lang$core$Maybe$Just(\n\t\t\t\tA2(func, _p3._0._0, _p3._1._0));\n\t\t} else {\n\t\t\treturn _elm_lang$core$Maybe$Nothing;\n\t\t}\n\t});\nvar _elm_lang$core$Maybe$map3 = F4(\n\tfunction (func, ma, mb, mc) {\n\t\tvar _p4 = {ctor: '_Tuple3', _0: ma, _1: mb, _2: mc};\n\t\tif ((((_p4.ctor === '_Tuple3') && (_p4._0.ctor === 'Just')) && (_p4._1.ctor === 'Just')) && (_p4._2.ctor === 'Just')) {\n\t\t\treturn _elm_lang$core$Maybe$Just(\n\t\t\t\tA3(func, _p4._0._0, _p4._1._0, _p4._2._0));\n\t\t} else {\n\t\t\treturn _elm_lang$core$Maybe$Nothing;\n\t\t}\n\t});\nvar _elm_lang$core$Maybe$map4 = F5(\n\tfunction (func, ma, mb, mc, md) {\n\t\tvar _p5 = {ctor: '_Tuple4', _0: ma, _1: mb, _2: mc, _3: md};\n\t\tif (((((_p5.ctor === '_Tuple4') && (_p5._0.ctor === 'Just')) && (_p5._1.ctor === 'Just')) && (_p5._2.ctor === 'Just')) && (_p5._3.ctor === 'Just')) {\n\t\t\treturn _elm_lang$core$Maybe$Just(\n\t\t\t\tA4(func, _p5._0._0, _p5._1._0, _p5._2._0, _p5._3._0));\n\t\t} else {\n\t\t\treturn _elm_lang$core$Maybe$Nothing;\n\t\t}\n\t});\nvar _elm_lang$core$Maybe$map5 = F6(\n\tfunction (func, ma, mb, mc, md, me) {\n\t\tvar _p6 = {ctor: '_Tuple5', _0: ma, _1: mb, _2: mc, _3: md, _4: me};\n\t\tif ((((((_p6.ctor === '_Tuple5') && (_p6._0.ctor === 'Just')) && (_p6._1.ctor === 'Just')) && (_p6._2.ctor === 'Just')) && (_p6._3.ctor === 'Just')) && (_p6._4.ctor === 'Just')) {\n\t\t\treturn _elm_lang$core$Maybe$Just(\n\t\t\t\tA5(func, _p6._0._0, _p6._1._0, _p6._2._0, _p6._3._0, _p6._4._0));\n\t\t} else {\n\t\t\treturn _elm_lang$core$Maybe$Nothing;\n\t\t}\n\t});\n\n//import Native.Utils //\n\nvar _elm_lang$core$Native_List = function() {\n\nvar Nil = { ctor: '[]' };\n\nfunction Cons(hd, tl)\n{\n\treturn { ctor: '::', _0: hd, _1: tl };\n}\n\nfunction fromArray(arr)\n{\n\tvar out = Nil;\n\tfor (var i = arr.length; i--; )\n\t{\n\t\tout = Cons(arr[i], out);\n\t}\n\treturn out;\n}\n\nfunction toArray(xs)\n{\n\tvar out = [];\n\twhile (xs.ctor !== '[]')\n\t{\n\t\tout.push(xs._0);\n\t\txs = xs._1;\n\t}\n\treturn out;\n}\n\nfunction foldr(f, b, xs)\n{\n\tvar arr = toArray(xs);\n\tvar acc = b;\n\tfor (var i = arr.length; i--; )\n\t{\n\t\tacc = A2(f, arr[i], acc);\n\t}\n\treturn acc;\n}\n\nfunction map2(f, xs, ys)\n{\n\tvar arr = [];\n\twhile (xs.ctor !== '[]' && ys.ctor !== '[]')\n\t{\n\t\tarr.push(A2(f, xs._0, ys._0));\n\t\txs = xs._1;\n\t\tys = ys._1;\n\t}\n\treturn fromArray(arr);\n}\n\nfunction map3(f, xs, ys, zs)\n{\n\tvar arr = [];\n\twhile (xs.ctor !== '[]' && ys.ctor !== '[]' && zs.ctor !== '[]')\n\t{\n\t\tarr.push(A3(f, xs._0, ys._0, zs._0));\n\t\txs = xs._1;\n\t\tys = ys._1;\n\t\tzs = zs._1;\n\t}\n\treturn fromArray(arr);\n}\n\nfunction map4(f, ws, xs, ys, zs)\n{\n\tvar arr = [];\n\twhile (   ws.ctor !== '[]'\n\t\t   && xs.ctor !== '[]'\n\t\t   && ys.ctor !== '[]'\n\t\t   && zs.ctor !== '[]')\n\t{\n\t\tarr.push(A4(f, ws._0, xs._0, ys._0, zs._0));\n\t\tws = ws._1;\n\t\txs = xs._1;\n\t\tys = ys._1;\n\t\tzs = zs._1;\n\t}\n\treturn fromArray(arr);\n}\n\nfunction map5(f, vs, ws, xs, ys, zs)\n{\n\tvar arr = [];\n\twhile (   vs.ctor !== '[]'\n\t\t   && ws.ctor !== '[]'\n\t\t   && xs.ctor !== '[]'\n\t\t   && ys.ctor !== '[]'\n\t\t   && zs.ctor !== '[]')\n\t{\n\t\tarr.push(A5(f, vs._0, ws._0, xs._0, ys._0, zs._0));\n\t\tvs = vs._1;\n\t\tws = ws._1;\n\t\txs = xs._1;\n\t\tys = ys._1;\n\t\tzs = zs._1;\n\t}\n\treturn fromArray(arr);\n}\n\nfunction sortBy(f, xs)\n{\n\treturn fromArray(toArray(xs).sort(function(a, b) {\n\t\treturn _elm_lang$core$Native_Utils.cmp(f(a), f(b));\n\t}));\n}\n\nfunction sortWith(f, xs)\n{\n\treturn fromArray(toArray(xs).sort(function(a, b) {\n\t\tvar ord = f(a)(b).ctor;\n\t\treturn ord === 'EQ' ? 0 : ord === 'LT' ? -1 : 1;\n\t}));\n}\n\nreturn {\n\tNil: Nil,\n\tCons: Cons,\n\tcons: F2(Cons),\n\ttoArray: toArray,\n\tfromArray: fromArray,\n\n\tfoldr: F3(foldr),\n\n\tmap2: F3(map2),\n\tmap3: F4(map3),\n\tmap4: F5(map4),\n\tmap5: F6(map5),\n\tsortBy: F2(sortBy),\n\tsortWith: F2(sortWith)\n};\n\n}();\nvar _elm_lang$core$List$sortWith = _elm_lang$core$Native_List.sortWith;\nvar _elm_lang$core$List$sortBy = _elm_lang$core$Native_List.sortBy;\nvar _elm_lang$core$List$sort = function (xs) {\n\treturn A2(_elm_lang$core$List$sortBy, _elm_lang$core$Basics$identity, xs);\n};\nvar _elm_lang$core$List$singleton = function (value) {\n\treturn {\n\t\tctor: '::',\n\t\t_0: value,\n\t\t_1: {ctor: '[]'}\n\t};\n};\nvar _elm_lang$core$List$drop = F2(\n\tfunction (n, list) {\n\t\tdrop:\n\t\twhile (true) {\n\t\t\tif (_elm_lang$core$Native_Utils.cmp(n, 0) < 1) {\n\t\t\t\treturn list;\n\t\t\t} else {\n\t\t\t\tvar _p0 = list;\n\t\t\t\tif (_p0.ctor === '[]') {\n\t\t\t\t\treturn list;\n\t\t\t\t} else {\n\t\t\t\t\tvar _v1 = n - 1,\n\t\t\t\t\t\t_v2 = _p0._1;\n\t\t\t\t\tn = _v1;\n\t\t\t\t\tlist = _v2;\n\t\t\t\t\tcontinue drop;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar _elm_lang$core$List$map5 = _elm_lang$core$Native_List.map5;\nvar _elm_lang$core$List$map4 = _elm_lang$core$Native_List.map4;\nvar _elm_lang$core$List$map3 = _elm_lang$core$Native_List.map3;\nvar _elm_lang$core$List$map2 = _elm_lang$core$Native_List.map2;\nvar _elm_lang$core$List$any = F2(\n\tfunction (isOkay, list) {\n\t\tany:\n\t\twhile (true) {\n\t\t\tvar _p1 = list;\n\t\t\tif (_p1.ctor === '[]') {\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\tif (isOkay(_p1._0)) {\n\t\t\t\t\treturn true;\n\t\t\t\t} else {\n\t\t\t\t\tvar _v4 = isOkay,\n\t\t\t\t\t\t_v5 = _p1._1;\n\t\t\t\t\tisOkay = _v4;\n\t\t\t\t\tlist = _v5;\n\t\t\t\t\tcontinue any;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar _elm_lang$core$List$all = F2(\n\tfunction (isOkay, list) {\n\t\treturn !A2(\n\t\t\t_elm_lang$core$List$any,\n\t\t\tfunction (_p2) {\n\t\t\t\treturn !isOkay(_p2);\n\t\t\t},\n\t\t\tlist);\n\t});\nvar _elm_lang$core$List$foldr = _elm_lang$core$Native_List.foldr;\nvar _elm_lang$core$List$foldl = F3(\n\tfunction (func, acc, list) {\n\t\tfoldl:\n\t\twhile (true) {\n\t\t\tvar _p3 = list;\n\t\t\tif (_p3.ctor === '[]') {\n\t\t\t\treturn acc;\n\t\t\t} else {\n\t\t\t\tvar _v7 = func,\n\t\t\t\t\t_v8 = A2(func, _p3._0, acc),\n\t\t\t\t\t_v9 = _p3._1;\n\t\t\t\tfunc = _v7;\n\t\t\t\tacc = _v8;\n\t\t\t\tlist = _v9;\n\t\t\t\tcontinue foldl;\n\t\t\t}\n\t\t}\n\t});\nvar _elm_lang$core$List$length = function (xs) {\n\treturn A3(\n\t\t_elm_lang$core$List$foldl,\n\t\tF2(\n\t\t\tfunction (_p4, i) {\n\t\t\t\treturn i + 1;\n\t\t\t}),\n\t\t0,\n\t\txs);\n};\nvar _elm_lang$core$List$sum = function (numbers) {\n\treturn A3(\n\t\t_elm_lang$core$List$foldl,\n\t\tF2(\n\t\t\tfunction (x, y) {\n\t\t\t\treturn x + y;\n\t\t\t}),\n\t\t0,\n\t\tnumbers);\n};\nvar _elm_lang$core$List$product = function (numbers) {\n\treturn A3(\n\t\t_elm_lang$core$List$foldl,\n\t\tF2(\n\t\t\tfunction (x, y) {\n\t\t\t\treturn x * y;\n\t\t\t}),\n\t\t1,\n\t\tnumbers);\n};\nvar _elm_lang$core$List$maximum = function (list) {\n\tvar _p5 = list;\n\tif (_p5.ctor === '::') {\n\t\treturn _elm_lang$core$Maybe$Just(\n\t\t\tA3(_elm_lang$core$List$foldl, _elm_lang$core$Basics$max, _p5._0, _p5._1));\n\t} else {\n\t\treturn _elm_lang$core$Maybe$Nothing;\n\t}\n};\nvar _elm_lang$core$List$minimum = function (list) {\n\tvar _p6 = list;\n\tif (_p6.ctor === '::') {\n\t\treturn _elm_lang$core$Maybe$Just(\n\t\t\tA3(_elm_lang$core$List$foldl, _elm_lang$core$Basics$min, _p6._0, _p6._1));\n\t} else {\n\t\treturn _elm_lang$core$Maybe$Nothing;\n\t}\n};\nvar _elm_lang$core$List$member = F2(\n\tfunction (x, xs) {\n\t\treturn A2(\n\t\t\t_elm_lang$core$List$any,\n\t\t\tfunction (a) {\n\t\t\t\treturn _elm_lang$core$Native_Utils.eq(a, x);\n\t\t\t},\n\t\t\txs);\n\t});\nvar _elm_lang$core$List$isEmpty = function (xs) {\n\tvar _p7 = xs;\n\tif (_p7.ctor === '[]') {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n};\nvar _elm_lang$core$List$tail = function (list) {\n\tvar _p8 = list;\n\tif (_p8.ctor === '::') {\n\t\treturn _elm_lang$core$Maybe$Just(_p8._1);\n\t} else {\n\t\treturn _elm_lang$core$Maybe$Nothing;\n\t}\n};\nvar _elm_lang$core$List$head = function (list) {\n\tvar _p9 = list;\n\tif (_p9.ctor === '::') {\n\t\treturn _elm_lang$core$Maybe$Just(_p9._0);\n\t} else {\n\t\treturn _elm_lang$core$Maybe$Nothing;\n\t}\n};\nvar _elm_lang$core$List_ops = _elm_lang$core$List_ops || {};\n_elm_lang$core$List_ops['::'] = _elm_lang$core$Native_List.cons;\nvar _elm_lang$core$List$map = F2(\n\tfunction (f, xs) {\n\t\treturn A3(\n\t\t\t_elm_lang$core$List$foldr,\n\t\t\tF2(\n\t\t\t\tfunction (x, acc) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tctor: '::',\n\t\t\t\t\t\t_0: f(x),\n\t\t\t\t\t\t_1: acc\n\t\t\t\t\t};\n\t\t\t\t}),\n\t\t\t{ctor: '[]'},\n\t\t\txs);\n\t});\nvar _elm_lang$core$List$filter = F2(\n\tfunction (pred, xs) {\n\t\tvar conditionalCons = F2(\n\t\t\tfunction (front, back) {\n\t\t\t\treturn pred(front) ? {ctor: '::', _0: front, _1: back} : back;\n\t\t\t});\n\t\treturn A3(\n\t\t\t_elm_lang$core$List$foldr,\n\t\t\tconditionalCons,\n\t\t\t{ctor: '[]'},\n\t\t\txs);\n\t});\nvar _elm_lang$core$List$maybeCons = F3(\n\tfunction (f, mx, xs) {\n\t\tvar _p10 = f(mx);\n\t\tif (_p10.ctor === 'Just') {\n\t\t\treturn {ctor: '::', _0: _p10._0, _1: xs};\n\t\t} else {\n\t\t\treturn xs;\n\t\t}\n\t});\nvar _elm_lang$core$List$filterMap = F2(\n\tfunction (f, xs) {\n\t\treturn A3(\n\t\t\t_elm_lang$core$List$foldr,\n\t\t\t_elm_lang$core$List$maybeCons(f),\n\t\t\t{ctor: '[]'},\n\t\t\txs);\n\t});\nvar _elm_lang$core$List$reverse = function (list) {\n\treturn A3(\n\t\t_elm_lang$core$List$foldl,\n\t\tF2(\n\t\t\tfunction (x, y) {\n\t\t\t\treturn {ctor: '::', _0: x, _1: y};\n\t\t\t}),\n\t\t{ctor: '[]'},\n\t\tlist);\n};\nvar _elm_lang$core$List$scanl = F3(\n\tfunction (f, b, xs) {\n\t\tvar scan1 = F2(\n\t\t\tfunction (x, accAcc) {\n\t\t\t\tvar _p11 = accAcc;\n\t\t\t\tif (_p11.ctor === '::') {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tctor: '::',\n\t\t\t\t\t\t_0: A2(f, x, _p11._0),\n\t\t\t\t\t\t_1: accAcc\n\t\t\t\t\t};\n\t\t\t\t} else {\n\t\t\t\t\treturn {ctor: '[]'};\n\t\t\t\t}\n\t\t\t});\n\t\treturn _elm_lang$core$List$reverse(\n\t\t\tA3(\n\t\t\t\t_elm_lang$core$List$foldl,\n\t\t\t\tscan1,\n\t\t\t\t{\n\t\t\t\t\tctor: '::',\n\t\t\t\t\t_0: b,\n\t\t\t\t\t_1: {ctor: '[]'}\n\t\t\t\t},\n\t\t\t\txs));\n\t});\nvar _elm_lang$core$List$append = F2(\n\tfunction (xs, ys) {\n\t\tvar _p12 = ys;\n\t\tif (_p12.ctor === '[]') {\n\t\t\treturn xs;\n\t\t} else {\n\t\t\treturn A3(\n\t\t\t\t_elm_lang$core$List$foldr,\n\t\t\t\tF2(\n\t\t\t\t\tfunction (x, y) {\n\t\t\t\t\t\treturn {ctor: '::', _0: x, _1: y};\n\t\t\t\t\t}),\n\t\t\t\tys,\n\t\t\t\txs);\n\t\t}\n\t});\nvar _elm_lang$core$List$concat = function (lists) {\n\treturn A3(\n\t\t_elm_lang$core$List$foldr,\n\t\t_elm_lang$core$List$append,\n\t\t{ctor: '[]'},\n\t\tlists);\n};\nvar _elm_lang$core$List$concatMap = F2(\n\tfunction (f, list) {\n\t\treturn _elm_lang$core$List$concat(\n\t\t\tA2(_elm_lang$core$List$map, f, list));\n\t});\nvar _elm_lang$core$List$partition = F2(\n\tfunction (pred, list) {\n\t\tvar step = F2(\n\t\t\tfunction (x, _p13) {\n\t\t\t\tvar _p14 = _p13;\n\t\t\t\tvar _p16 = _p14._0;\n\t\t\t\tvar _p15 = _p14._1;\n\t\t\t\treturn pred(x) ? {\n\t\t\t\t\tctor: '_Tuple2',\n\t\t\t\t\t_0: {ctor: '::', _0: x, _1: _p16},\n\t\t\t\t\t_1: _p15\n\t\t\t\t} : {\n\t\t\t\t\tctor: '_Tuple2',\n\t\t\t\t\t_0: _p16,\n\t\t\t\t\t_1: {ctor: '::', _0: x, _1: _p15}\n\t\t\t\t};\n\t\t\t});\n\t\treturn A3(\n\t\t\t_elm_lang$core$List$foldr,\n\t\t\tstep,\n\t\t\t{\n\t\t\t\tctor: '_Tuple2',\n\t\t\t\t_0: {ctor: '[]'},\n\t\t\t\t_1: {ctor: '[]'}\n\t\t\t},\n\t\t\tlist);\n\t});\nvar _elm_lang$core$List$unzip = function (pairs) {\n\tvar step = F2(\n\t\tfunction (_p18, _p17) {\n\t\t\tvar _p19 = _p18;\n\t\t\tvar _p20 = _p17;\n\t\t\treturn {\n\t\t\t\tctor: '_Tuple2',\n\t\t\t\t_0: {ctor: '::', _0: _p19._0, _1: _p20._0},\n\t\t\t\t_1: {ctor: '::', _0: _p19._1, _1: _p20._1}\n\t\t\t};\n\t\t});\n\treturn A3(\n\t\t_elm_lang$core$List$foldr,\n\t\tstep,\n\t\t{\n\t\t\tctor: '_Tuple2',\n\t\t\t_0: {ctor: '[]'},\n\t\t\t_1: {ctor: '[]'}\n\t\t},\n\t\tpairs);\n};\nvar _elm_lang$core$List$intersperse = F2(\n\tfunction (sep, xs) {\n\t\tvar _p21 = xs;\n\t\tif (_p21.ctor === '[]') {\n\t\t\treturn {ctor: '[]'};\n\t\t} else {\n\t\t\tvar step = F2(\n\t\t\t\tfunction (x, rest) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tctor: '::',\n\t\t\t\t\t\t_0: sep,\n\t\t\t\t\t\t_1: {ctor: '::', _0: x, _1: rest}\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\tvar spersed = A3(\n\t\t\t\t_elm_lang$core$List$foldr,\n\t\t\t\tstep,\n\t\t\t\t{ctor: '[]'},\n\t\t\t\t_p21._1);\n\t\t\treturn {ctor: '::', _0: _p21._0, _1: spersed};\n\t\t}\n\t});\nvar _elm_lang$core$List$takeReverse = F3(\n\tfunction (n, list, taken) {\n\t\ttakeReverse:\n\t\twhile (true) {\n\t\t\tif (_elm_lang$core$Native_Utils.cmp(n, 0) < 1) {\n\t\t\t\treturn taken;\n\t\t\t} else {\n\t\t\t\tvar _p22 = list;\n\t\t\t\tif (_p22.ctor === '[]') {\n\t\t\t\t\treturn taken;\n\t\t\t\t} else {\n\t\t\t\t\tvar _v23 = n - 1,\n\t\t\t\t\t\t_v24 = _p22._1,\n\t\t\t\t\t\t_v25 = {ctor: '::', _0: _p22._0, _1: taken};\n\t\t\t\t\tn = _v23;\n\t\t\t\t\tlist = _v24;\n\t\t\t\t\ttaken = _v25;\n\t\t\t\t\tcontinue takeReverse;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar _elm_lang$core$List$takeTailRec = F2(\n\tfunction (n, list) {\n\t\treturn _elm_lang$core$List$reverse(\n\t\t\tA3(\n\t\t\t\t_elm_lang$core$List$takeReverse,\n\t\t\t\tn,\n\t\t\t\tlist,\n\t\t\t\t{ctor: '[]'}));\n\t});\nvar _elm_lang$core$List$takeFast = F3(\n\tfunction (ctr, n, list) {\n\t\tif (_elm_lang$core$Native_Utils.cmp(n, 0) < 1) {\n\t\t\treturn {ctor: '[]'};\n\t\t} else {\n\t\t\tvar _p23 = {ctor: '_Tuple2', _0: n, _1: list};\n\t\t\t_v26_5:\n\t\t\tdo {\n\t\t\t\t_v26_1:\n\t\t\t\tdo {\n\t\t\t\t\tif (_p23.ctor === '_Tuple2') {\n\t\t\t\t\t\tif (_p23._1.ctor === '[]') {\n\t\t\t\t\t\t\treturn list;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (_p23._1._1.ctor === '::') {\n\t\t\t\t\t\t\t\tswitch (_p23._0) {\n\t\t\t\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\t\t\t\tbreak _v26_1;\n\t\t\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\t\tctor: '::',\n\t\t\t\t\t\t\t\t\t\t\t_0: _p23._1._0,\n\t\t\t\t\t\t\t\t\t\t\t_1: {\n\t\t\t\t\t\t\t\t\t\t\t\tctor: '::',\n\t\t\t\t\t\t\t\t\t\t\t\t_0: _p23._1._1._0,\n\t\t\t\t\t\t\t\t\t\t\t\t_1: {ctor: '[]'}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\t\t\tif (_p23._1._1._1.ctor === '::') {\n\t\t\t\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\t\t\tctor: '::',\n\t\t\t\t\t\t\t\t\t\t\t\t_0: _p23._1._0,\n\t\t\t\t\t\t\t\t\t\t\t\t_1: {\n\t\t\t\t\t\t\t\t\t\t\t\t\tctor: '::',\n\t\t\t\t\t\t\t\t\t\t\t\t\t_0: _p23._1._1._0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t_1: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tctor: '::',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t_0: _p23._1._1._1._0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t_1: {ctor: '[]'}\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tbreak _v26_5;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\tif ((_p23._1._1._1.ctor === '::') && (_p23._1._1._1._1.ctor === '::')) {\n\t\t\t\t\t\t\t\t\t\t\tvar _p28 = _p23._1._1._1._0;\n\t\t\t\t\t\t\t\t\t\t\tvar _p27 = _p23._1._1._0;\n\t\t\t\t\t\t\t\t\t\t\tvar _p26 = _p23._1._0;\n\t\t\t\t\t\t\t\t\t\t\tvar _p25 = _p23._1._1._1._1._0;\n\t\t\t\t\t\t\t\t\t\t\tvar _p24 = _p23._1._1._1._1._1;\n\t\t\t\t\t\t\t\t\t\t\treturn (_elm_lang$core$Native_Utils.cmp(ctr, 1000) > 0) ? {\n\t\t\t\t\t\t\t\t\t\t\t\tctor: '::',\n\t\t\t\t\t\t\t\t\t\t\t\t_0: _p26,\n\t\t\t\t\t\t\t\t\t\t\t\t_1: {\n\t\t\t\t\t\t\t\t\t\t\t\t\tctor: '::',\n\t\t\t\t\t\t\t\t\t\t\t\t\t_0: _p27,\n\t\t\t\t\t\t\t\t\t\t\t\t\t_1: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tctor: '::',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t_0: _p28,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t_1: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tctor: '::',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_0: _p25,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_1: A2(_elm_lang$core$List$takeTailRec, n - 4, _p24)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t} : {\n\t\t\t\t\t\t\t\t\t\t\t\tctor: '::',\n\t\t\t\t\t\t\t\t\t\t\t\t_0: _p26,\n\t\t\t\t\t\t\t\t\t\t\t\t_1: {\n\t\t\t\t\t\t\t\t\t\t\t\t\tctor: '::',\n\t\t\t\t\t\t\t\t\t\t\t\t\t_0: _p27,\n\t\t\t\t\t\t\t\t\t\t\t\t\t_1: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tctor: '::',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t_0: _p28,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t_1: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tctor: '::',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_0: _p25,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_1: A3(_elm_lang$core$List$takeFast, ctr + 1, n - 4, _p24)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tbreak _v26_5;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tif (_p23._0 === 1) {\n\t\t\t\t\t\t\t\t\tbreak _v26_1;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tbreak _v26_5;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbreak _v26_5;\n\t\t\t\t\t}\n\t\t\t\t} while(false);\n\t\t\t\treturn {\n\t\t\t\t\tctor: '::',\n\t\t\t\t\t_0: _p23._1._0,\n\t\t\t\t\t_1: {ctor: '[]'}\n\t\t\t\t};\n\t\t\t} while(false);\n\t\t\treturn list;\n\t\t}\n\t});\nvar _elm_lang$core$List$take = F2(\n\tfunction (n, list) {\n\t\treturn A3(_elm_lang$core$List$takeFast, 0, n, list);\n\t});\nvar _elm_lang$core$List$repeatHelp = F3(\n\tfunction (result, n, value) {\n\t\trepeatHelp:\n\t\twhile (true) {\n\t\t\tif (_elm_lang$core$Native_Utils.cmp(n, 0) < 1) {\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\tvar _v27 = {ctor: '::', _0: value, _1: result},\n\t\t\t\t\t_v28 = n - 1,\n\t\t\t\t\t_v29 = value;\n\t\t\t\tresult = _v27;\n\t\t\t\tn = _v28;\n\t\t\t\tvalue = _v29;\n\t\t\t\tcontinue repeatHelp;\n\t\t\t}\n\t\t}\n\t});\nvar _elm_lang$core$List$repeat = F2(\n\tfunction (n, value) {\n\t\treturn A3(\n\t\t\t_elm_lang$core$List$repeatHelp,\n\t\t\t{ctor: '[]'},\n\t\t\tn,\n\t\t\tvalue);\n\t});\nvar _elm_lang$core$List$rangeHelp = F3(\n\tfunction (lo, hi, list) {\n\t\trangeHelp:\n\t\twhile (true) {\n\t\t\tif (_elm_lang$core$Native_Utils.cmp(lo, hi) < 1) {\n\t\t\t\tvar _v30 = lo,\n\t\t\t\t\t_v31 = hi - 1,\n\t\t\t\t\t_v32 = {ctor: '::', _0: hi, _1: list};\n\t\t\t\tlo = _v30;\n\t\t\t\thi = _v31;\n\t\t\t\tlist = _v32;\n\t\t\t\tcontinue rangeHelp;\n\t\t\t} else {\n\t\t\t\treturn list;\n\t\t\t}\n\t\t}\n\t});\nvar _elm_lang$core$List$range = F2(\n\tfunction (lo, hi) {\n\t\treturn A3(\n\t\t\t_elm_lang$core$List$rangeHelp,\n\t\t\tlo,\n\t\t\thi,\n\t\t\t{ctor: '[]'});\n\t});\nvar _elm_lang$core$List$indexedMap = F2(\n\tfunction (f, xs) {\n\t\treturn A3(\n\t\t\t_elm_lang$core$List$map2,\n\t\t\tf,\n\t\t\tA2(\n\t\t\t\t_elm_lang$core$List$range,\n\t\t\t\t0,\n\t\t\t\t_elm_lang$core$List$length(xs) - 1),\n\t\t\txs);\n\t});\n\nvar _elm_lang$core$Result$toMaybe = function (result) {\n\tvar _p0 = result;\n\tif (_p0.ctor === 'Ok') {\n\t\treturn _elm_lang$core$Maybe$Just(_p0._0);\n\t} else {\n\t\treturn _elm_lang$core$Maybe$Nothing;\n\t}\n};\nvar _elm_lang$core$Result$withDefault = F2(\n\tfunction (def, result) {\n\t\tvar _p1 = result;\n\t\tif (_p1.ctor === 'Ok') {\n\t\t\treturn _p1._0;\n\t\t} else {\n\t\t\treturn def;\n\t\t}\n\t});\nvar _elm_lang$core$Result$Err = function (a) {\n\treturn {ctor: 'Err', _0: a};\n};\nvar _elm_lang$core$Result$andThen = F2(\n\tfunction (callback, result) {\n\t\tvar _p2 = result;\n\t\tif (_p2.ctor === 'Ok') {\n\t\t\treturn callback(_p2._0);\n\t\t} else {\n\t\t\treturn _elm_lang$core$Result$Err(_p2._0);\n\t\t}\n\t});\nvar _elm_lang$core$Result$Ok = function (a) {\n\treturn {ctor: 'Ok', _0: a};\n};\nvar _elm_lang$core$Result$map = F2(\n\tfunction (func, ra) {\n\t\tvar _p3 = ra;\n\t\tif (_p3.ctor === 'Ok') {\n\t\t\treturn _elm_lang$core$Result$Ok(\n\t\t\t\tfunc(_p3._0));\n\t\t} else {\n\t\t\treturn _elm_lang$core$Result$Err(_p3._0);\n\t\t}\n\t});\nvar _elm_lang$core$Result$map2 = F3(\n\tfunction (func, ra, rb) {\n\t\tvar _p4 = {ctor: '_Tuple2', _0: ra, _1: rb};\n\t\tif (_p4._0.ctor === 'Ok') {\n\t\t\tif (_p4._1.ctor === 'Ok') {\n\t\t\t\treturn _elm_lang$core$Result$Ok(\n\t\t\t\t\tA2(func, _p4._0._0, _p4._1._0));\n\t\t\t} else {\n\t\t\t\treturn _elm_lang$core$Result$Err(_p4._1._0);\n\t\t\t}\n\t\t} else {\n\t\t\treturn _elm_lang$core$Result$Err(_p4._0._0);\n\t\t}\n\t});\nvar _elm_lang$core$Result$map3 = F4(\n\tfunction (func, ra, rb, rc) {\n\t\tvar _p5 = {ctor: '_Tuple3', _0: ra, _1: rb, _2: rc};\n\t\tif (_p5._0.ctor === 'Ok') {\n\t\t\tif (_p5._1.ctor === 'Ok') {\n\t\t\t\tif (_p5._2.ctor === 'Ok') {\n\t\t\t\t\treturn _elm_lang$core$Result$Ok(\n\t\t\t\t\t\tA3(func, _p5._0._0, _p5._1._0, _p5._2._0));\n\t\t\t\t} else {\n\t\t\t\t\treturn _elm_lang$core$Result$Err(_p5._2._0);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn _elm_lang$core$Result$Err(_p5._1._0);\n\t\t\t}\n\t\t} else {\n\t\t\treturn _elm_lang$core$Result$Err(_p5._0._0);\n\t\t}\n\t});\nvar _elm_lang$core$Result$map4 = F5(\n\tfunction (func, ra, rb, rc, rd) {\n\t\tvar _p6 = {ctor: '_Tuple4', _0: ra, _1: rb, _2: rc, _3: rd};\n\t\tif (_p6._0.ctor === 'Ok') {\n\t\t\tif (_p6._1.ctor === 'Ok') {\n\t\t\t\tif (_p6._2.ctor === 'Ok') {\n\t\t\t\t\tif (_p6._3.ctor === 'Ok') {\n\t\t\t\t\t\treturn _elm_lang$core$Result$Ok(\n\t\t\t\t\t\t\tA4(func, _p6._0._0, _p6._1._0, _p6._2._0, _p6._3._0));\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn _elm_lang$core$Result$Err(_p6._3._0);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn _elm_lang$core$Result$Err(_p6._2._0);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn _elm_lang$core$Result$Err(_p6._1._0);\n\t\t\t}\n\t\t} else {\n\t\t\treturn _elm_lang$core$Result$Err(_p6._0._0);\n\t\t}\n\t});\nvar _elm_lang$core$Result$map5 = F6(\n\tfunction (func, ra, rb, rc, rd, re) {\n\t\tvar _p7 = {ctor: '_Tuple5', _0: ra, _1: rb, _2: rc, _3: rd, _4: re};\n\t\tif (_p7._0.ctor === 'Ok') {\n\t\t\tif (_p7._1.ctor === 'Ok') {\n\t\t\t\tif (_p7._2.ctor === 'Ok') {\n\t\t\t\t\tif (_p7._3.ctor === 'Ok') {\n\t\t\t\t\t\tif (_p7._4.ctor === 'Ok') {\n\t\t\t\t\t\t\treturn _elm_lang$core$Result$Ok(\n\t\t\t\t\t\t\t\tA5(func, _p7._0._0, _p7._1._0, _p7._2._0, _p7._3._0, _p7._4._0));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn _elm_lang$core$Result$Err(_p7._4._0);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn _elm_lang$core$Result$Err(_p7._3._0);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn _elm_lang$core$Result$Err(_p7._2._0);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn _elm_lang$core$Result$Err(_p7._1._0);\n\t\t\t}\n\t\t} else {\n\t\t\treturn _elm_lang$core$Result$Err(_p7._0._0);\n\t\t}\n\t});\nvar _elm_lang$core$Result$mapError = F2(\n\tfunction (f, result) {\n\t\tvar _p8 = result;\n\t\tif (_p8.ctor === 'Ok') {\n\t\t\treturn _elm_lang$core$Result$Ok(_p8._0);\n\t\t} else {\n\t\t\treturn _elm_lang$core$Result$Err(\n\t\t\t\tf(_p8._0));\n\t\t}\n\t});\nvar _elm_lang$core$Result$fromMaybe = F2(\n\tfunction (err, maybe) {\n\t\tvar _p9 = maybe;\n\t\tif (_p9.ctor === 'Just') {\n\t\t\treturn _elm_lang$core$Result$Ok(_p9._0);\n\t\t} else {\n\t\t\treturn _elm_lang$core$Result$Err(err);\n\t\t}\n\t});\n\nvar _elm_lang$core$Task$onError = _elm_lang$core$Native_Scheduler.onError;\nvar _elm_lang$core$Task$andThen = _elm_lang$core$Native_Scheduler.andThen;\nvar _elm_lang$core$Task$spawnCmd = F2(\n\tfunction (router, _p0) {\n\t\tvar _p1 = _p0;\n\t\treturn _elm_lang$core$Native_Scheduler.spawn(\n\t\t\tA2(\n\t\t\t\t_elm_lang$core$Task$andThen,\n\t\t\t\t_elm_lang$core$Platform$sendToApp(router),\n\t\t\t\t_p1._0));\n\t});\nvar _elm_lang$core$Task$fail = _elm_lang$core$Native_Scheduler.fail;\nvar _elm_lang$core$Task$mapError = F2(\n\tfunction (convert, task) {\n\t\treturn A2(\n\t\t\t_elm_lang$core$Task$onError,\n\t\t\tfunction (_p2) {\n\t\t\t\treturn _elm_lang$core$Task$fail(\n\t\t\t\t\tconvert(_p2));\n\t\t\t},\n\t\t\ttask);\n\t});\nvar _elm_lang$core$Task$succeed = _elm_lang$core$Native_Scheduler.succeed;\nvar _elm_lang$core$Task$map = F2(\n\tfunction (func, taskA) {\n\t\treturn A2(\n\t\t\t_elm_lang$core$Task$andThen,\n\t\t\tfunction (a) {\n\t\t\t\treturn _elm_lang$core$Task$succeed(\n\t\t\t\t\tfunc(a));\n\t\t\t},\n\t\t\ttaskA);\n\t});\nvar _elm_lang$core$Task$map2 = F3(\n\tfunction (func, taskA, taskB) {\n\t\treturn A2(\n\t\t\t_elm_lang$core$Task$andThen,\n\t\t\tfunction (a) {\n\t\t\t\treturn A2(\n\t\t\t\t\t_elm_lang$core$Task$andThen,\n\t\t\t\t\tfunction (b) {\n\t\t\t\t\t\treturn _elm_lang$core$Task$succeed(\n\t\t\t\t\t\t\tA2(func, a, b));\n\t\t\t\t\t},\n\t\t\t\t\ttaskB);\n\t\t\t},\n\t\t\ttaskA);\n\t});\nvar _elm_lang$core$Task$map3 = F4(\n\tfunction (func, taskA, taskB, taskC) {\n\t\treturn A2(\n\t\t\t_elm_lang$core$Task$andThen,\n\t\t\tfunction (a) {\n\t\t\t\treturn A2(\n\t\t\t\t\t_elm_lang$core$Task$andThen,\n\t\t\t\t\tfunction (b) {\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t_elm_lang$core$Task$andThen,\n\t\t\t\t\t\t\tfunction (c) {\n\t\t\t\t\t\t\t\treturn _elm_lang$core$Task$succeed(\n\t\t\t\t\t\t\t\t\tA3(func, a, b, c));\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\ttaskC);\n\t\t\t\t\t},\n\t\t\t\t\ttaskB);\n\t\t\t},\n\t\t\ttaskA);\n\t});\nvar _elm_lang$core$Task$map4 = F5(\n\tfunction (func, taskA, taskB, taskC, taskD) {\n\t\treturn A2(\n\t\t\t_elm_lang$core$Task$andThen,\n\t\t\tfunction (a) {\n\t\t\t\treturn A2(\n\t\t\t\t\t_elm_lang$core$Task$andThen,\n\t\t\t\t\tfunction (b) {\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t_elm_lang$core$Task$andThen,\n\t\t\t\t\t\t\tfunction (c) {\n\t\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t\t_elm_lang$core$Task$andThen,\n\t\t\t\t\t\t\t\t\tfunction (d) {\n\t\t\t\t\t\t\t\t\t\treturn _elm_lang$core$Task$succeed(\n\t\t\t\t\t\t\t\t\t\t\tA4(func, a, b, c, d));\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\ttaskD);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\ttaskC);\n\t\t\t\t\t},\n\t\t\t\t\ttaskB);\n\t\t\t},\n\t\t\ttaskA);\n\t});\nvar _elm_lang$core$Task$map5 = F6(\n\tfunction (func, taskA, taskB, taskC, taskD, taskE) {\n\t\treturn A2(\n\t\t\t_elm_lang$core$Task$andThen,\n\t\t\tfunction (a) {\n\t\t\t\treturn A2(\n\t\t\t\t\t_elm_lang$core$Task$andThen,\n\t\t\t\t\tfunction (b) {\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t_elm_lang$core$Task$andThen,\n\t\t\t\t\t\t\tfunction (c) {\n\t\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t\t_elm_lang$core$Task$andThen,\n\t\t\t\t\t\t\t\t\tfunction (d) {\n\t\t\t\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t\t\t\t_elm_lang$core$Task$andThen,\n\t\t\t\t\t\t\t\t\t\t\tfunction (e) {\n\t\t\t\t\t\t\t\t\t\t\t\treturn _elm_lang$core$Task$succeed(\n\t\t\t\t\t\t\t\t\t\t\t\t\tA5(func, a, b, c, d, e));\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\ttaskE);\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\ttaskD);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\ttaskC);\n\t\t\t\t\t},\n\t\t\t\t\ttaskB);\n\t\t\t},\n\t\t\ttaskA);\n\t});\nvar _elm_lang$core$Task$sequence = function (tasks) {\n\tvar _p3 = tasks;\n\tif (_p3.ctor === '[]') {\n\t\treturn _elm_lang$core$Task$succeed(\n\t\t\t{ctor: '[]'});\n\t} else {\n\t\treturn A3(\n\t\t\t_elm_lang$core$Task$map2,\n\t\t\tF2(\n\t\t\t\tfunction (x, y) {\n\t\t\t\t\treturn {ctor: '::', _0: x, _1: y};\n\t\t\t\t}),\n\t\t\t_p3._0,\n\t\t\t_elm_lang$core$Task$sequence(_p3._1));\n\t}\n};\nvar _elm_lang$core$Task$onEffects = F3(\n\tfunction (router, commands, state) {\n\t\treturn A2(\n\t\t\t_elm_lang$core$Task$map,\n\t\t\tfunction (_p4) {\n\t\t\t\treturn {ctor: '_Tuple0'};\n\t\t\t},\n\t\t\t_elm_lang$core$Task$sequence(\n\t\t\t\tA2(\n\t\t\t\t\t_elm_lang$core$List$map,\n\t\t\t\t\t_elm_lang$core$Task$spawnCmd(router),\n\t\t\t\t\tcommands)));\n\t});\nvar _elm_lang$core$Task$init = _elm_lang$core$Task$succeed(\n\t{ctor: '_Tuple0'});\nvar _elm_lang$core$Task$onSelfMsg = F3(\n\tfunction (_p7, _p6, _p5) {\n\t\treturn _elm_lang$core$Task$succeed(\n\t\t\t{ctor: '_Tuple0'});\n\t});\nvar _elm_lang$core$Task$command = _elm_lang$core$Native_Platform.leaf('Task');\nvar _elm_lang$core$Task$Perform = function (a) {\n\treturn {ctor: 'Perform', _0: a};\n};\nvar _elm_lang$core$Task$perform = F2(\n\tfunction (toMessage, task) {\n\t\treturn _elm_lang$core$Task$command(\n\t\t\t_elm_lang$core$Task$Perform(\n\t\t\t\tA2(_elm_lang$core$Task$map, toMessage, task)));\n\t});\nvar _elm_lang$core$Task$attempt = F2(\n\tfunction (resultToMessage, task) {\n\t\treturn _elm_lang$core$Task$command(\n\t\t\t_elm_lang$core$Task$Perform(\n\t\t\t\tA2(\n\t\t\t\t\t_elm_lang$core$Task$onError,\n\t\t\t\t\tfunction (_p8) {\n\t\t\t\t\t\treturn _elm_lang$core$Task$succeed(\n\t\t\t\t\t\t\tresultToMessage(\n\t\t\t\t\t\t\t\t_elm_lang$core$Result$Err(_p8)));\n\t\t\t\t\t},\n\t\t\t\t\tA2(\n\t\t\t\t\t\t_elm_lang$core$Task$andThen,\n\t\t\t\t\t\tfunction (_p9) {\n\t\t\t\t\t\t\treturn _elm_lang$core$Task$succeed(\n\t\t\t\t\t\t\t\tresultToMessage(\n\t\t\t\t\t\t\t\t\t_elm_lang$core$Result$Ok(_p9)));\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttask))));\n\t});\nvar _elm_lang$core$Task$cmdMap = F2(\n\tfunction (tagger, _p10) {\n\t\tvar _p11 = _p10;\n\t\treturn _elm_lang$core$Task$Perform(\n\t\t\tA2(_elm_lang$core$Task$map, tagger, _p11._0));\n\t});\n_elm_lang$core$Native_Platform.effectManagers['Task'] = {pkg: 'elm-lang/core', init: _elm_lang$core$Task$init, onEffects: _elm_lang$core$Task$onEffects, onSelfMsg: _elm_lang$core$Task$onSelfMsg, tag: 'cmd', cmdMap: _elm_lang$core$Task$cmdMap};\n\n//import Native.Utils //\n\nvar _elm_lang$core$Native_Debug = function() {\n\nfunction log(tag, value)\n{\n\tvar msg = tag + ': ' + _elm_lang$core$Native_Utils.toString(value);\n\tvar process = process || {};\n\tif (process.stdout)\n\t{\n\t\tprocess.stdout.write(msg);\n\t}\n\telse\n\t{\n\t\tconsole.log(msg);\n\t}\n\treturn value;\n}\n\nfunction crash(message)\n{\n\tthrow new Error(message);\n}\n\nreturn {\n\tcrash: crash,\n\tlog: F2(log)\n};\n\n}();\n//import Maybe, Native.List, Native.Utils, Result //\n\nvar _elm_lang$core$Native_String = function() {\n\nfunction isEmpty(str)\n{\n\treturn str.length === 0;\n}\nfunction cons(chr, str)\n{\n\treturn chr + str;\n}\nfunction uncons(str)\n{\n\tvar hd = str[0];\n\tif (hd)\n\t{\n\t\treturn _elm_lang$core$Maybe$Just(_elm_lang$core$Native_Utils.Tuple2(_elm_lang$core$Native_Utils.chr(hd), str.slice(1)));\n\t}\n\treturn _elm_lang$core$Maybe$Nothing;\n}\nfunction append(a, b)\n{\n\treturn a + b;\n}\nfunction concat(strs)\n{\n\treturn _elm_lang$core$Native_List.toArray(strs).join('');\n}\nfunction length(str)\n{\n\treturn str.length;\n}\nfunction map(f, str)\n{\n\tvar out = str.split('');\n\tfor (var i = out.length; i--; )\n\t{\n\t\tout[i] = f(_elm_lang$core$Native_Utils.chr(out[i]));\n\t}\n\treturn out.join('');\n}\nfunction filter(pred, str)\n{\n\treturn str.split('').map(_elm_lang$core$Native_Utils.chr).filter(pred).join('');\n}\nfunction reverse(str)\n{\n\treturn str.split('').reverse().join('');\n}\nfunction foldl(f, b, str)\n{\n\tvar len = str.length;\n\tfor (var i = 0; i < len; ++i)\n\t{\n\t\tb = A2(f, _elm_lang$core$Native_Utils.chr(str[i]), b);\n\t}\n\treturn b;\n}\nfunction foldr(f, b, str)\n{\n\tfor (var i = str.length; i--; )\n\t{\n\t\tb = A2(f, _elm_lang$core$Native_Utils.chr(str[i]), b);\n\t}\n\treturn b;\n}\nfunction split(sep, str)\n{\n\treturn _elm_lang$core$Native_List.fromArray(str.split(sep));\n}\nfunction join(sep, strs)\n{\n\treturn _elm_lang$core$Native_List.toArray(strs).join(sep);\n}\nfunction repeat(n, str)\n{\n\tvar result = '';\n\twhile (n > 0)\n\t{\n\t\tif (n & 1)\n\t\t{\n\t\t\tresult += str;\n\t\t}\n\t\tn >>= 1, str += str;\n\t}\n\treturn result;\n}\nfunction slice(start, end, str)\n{\n\treturn str.slice(start, end);\n}\nfunction left(n, str)\n{\n\treturn n < 1 ? '' : str.slice(0, n);\n}\nfunction right(n, str)\n{\n\treturn n < 1 ? '' : str.slice(-n);\n}\nfunction dropLeft(n, str)\n{\n\treturn n < 1 ? str : str.slice(n);\n}\nfunction dropRight(n, str)\n{\n\treturn n < 1 ? str : str.slice(0, -n);\n}\nfunction pad(n, chr, str)\n{\n\tvar half = (n - str.length) / 2;\n\treturn repeat(Math.ceil(half), chr) + str + repeat(half | 0, chr);\n}\nfunction padRight(n, chr, str)\n{\n\treturn str + repeat(n - str.length, chr);\n}\nfunction padLeft(n, chr, str)\n{\n\treturn repeat(n - str.length, chr) + str;\n}\n\nfunction trim(str)\n{\n\treturn str.trim();\n}\nfunction trimLeft(str)\n{\n\treturn str.replace(/^\\s+/, '');\n}\nfunction trimRight(str)\n{\n\treturn str.replace(/\\s+$/, '');\n}\n\nfunction words(str)\n{\n\treturn _elm_lang$core$Native_List.fromArray(str.trim().split(/\\s+/g));\n}\nfunction lines(str)\n{\n\treturn _elm_lang$core$Native_List.fromArray(str.split(/\\r\\n|\\r|\\n/g));\n}\n\nfunction toUpper(str)\n{\n\treturn str.toUpperCase();\n}\nfunction toLower(str)\n{\n\treturn str.toLowerCase();\n}\n\nfunction any(pred, str)\n{\n\tfor (var i = str.length; i--; )\n\t{\n\t\tif (pred(_elm_lang$core$Native_Utils.chr(str[i])))\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\nfunction all(pred, str)\n{\n\tfor (var i = str.length; i--; )\n\t{\n\t\tif (!pred(_elm_lang$core$Native_Utils.chr(str[i])))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\nfunction contains(sub, str)\n{\n\treturn str.indexOf(sub) > -1;\n}\nfunction startsWith(sub, str)\n{\n\treturn str.indexOf(sub) === 0;\n}\nfunction endsWith(sub, str)\n{\n\treturn str.length >= sub.length &&\n\t\tstr.lastIndexOf(sub) === str.length - sub.length;\n}\nfunction indexes(sub, str)\n{\n\tvar subLen = sub.length;\n\n\tif (subLen < 1)\n\t{\n\t\treturn _elm_lang$core$Native_List.Nil;\n\t}\n\n\tvar i = 0;\n\tvar is = [];\n\n\twhile ((i = str.indexOf(sub, i)) > -1)\n\t{\n\t\tis.push(i);\n\t\ti = i + subLen;\n\t}\n\n\treturn _elm_lang$core$Native_List.fromArray(is);\n}\n\n\nfunction toInt(s)\n{\n\tvar len = s.length;\n\n\t// if empty\n\tif (len === 0)\n\t{\n\t\treturn intErr(s);\n\t}\n\n\t// if hex\n\tvar c = s[0];\n\tif (c === '0' && s[1] === 'x')\n\t{\n\t\tfor (var i = 2; i < len; ++i)\n\t\t{\n\t\t\tvar c = s[i];\n\t\t\tif (('0' <= c && c <= '9') || ('A' <= c && c <= 'F') || ('a' <= c && c <= 'f'))\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\treturn intErr(s);\n\t\t}\n\t\treturn _elm_lang$core$Result$Ok(parseInt(s, 16));\n\t}\n\n\t// is decimal\n\tif (c > '9' || (c < '0' && c !== '-' && c !== '+'))\n\t{\n\t\treturn intErr(s);\n\t}\n\tfor (var i = 1; i < len; ++i)\n\t{\n\t\tvar c = s[i];\n\t\tif (c < '0' || '9' < c)\n\t\t{\n\t\t\treturn intErr(s);\n\t\t}\n\t}\n\n\treturn _elm_lang$core$Result$Ok(parseInt(s, 10));\n}\n\nfunction intErr(s)\n{\n\treturn _elm_lang$core$Result$Err(\"could not convert string '\" + s + \"' to an Int\");\n}\n\n\nfunction toFloat(s)\n{\n\t// check if it is a hex, octal, or binary number\n\tif (s.length === 0 || /[\\sxbo]/.test(s))\n\t{\n\t\treturn floatErr(s);\n\t}\n\tvar n = +s;\n\t// faster isNaN check\n\treturn n === n ? _elm_lang$core$Result$Ok(n) : floatErr(s);\n}\n\nfunction floatErr(s)\n{\n\treturn _elm_lang$core$Result$Err(\"could not convert string '\" + s + \"' to a Float\");\n}\n\n\nfunction toList(str)\n{\n\treturn _elm_lang$core$Native_List.fromArray(str.split('').map(_elm_lang$core$Native_Utils.chr));\n}\nfunction fromList(chars)\n{\n\treturn _elm_lang$core$Native_List.toArray(chars).join('');\n}\n\nreturn {\n\tisEmpty: isEmpty,\n\tcons: F2(cons),\n\tuncons: uncons,\n\tappend: F2(append),\n\tconcat: concat,\n\tlength: length,\n\tmap: F2(map),\n\tfilter: F2(filter),\n\treverse: reverse,\n\tfoldl: F3(foldl),\n\tfoldr: F3(foldr),\n\n\tsplit: F2(split),\n\tjoin: F2(join),\n\trepeat: F2(repeat),\n\n\tslice: F3(slice),\n\tleft: F2(left),\n\tright: F2(right),\n\tdropLeft: F2(dropLeft),\n\tdropRight: F2(dropRight),\n\n\tpad: F3(pad),\n\tpadLeft: F3(padLeft),\n\tpadRight: F3(padRight),\n\n\ttrim: trim,\n\ttrimLeft: trimLeft,\n\ttrimRight: trimRight,\n\n\twords: words,\n\tlines: lines,\n\n\ttoUpper: toUpper,\n\ttoLower: toLower,\n\n\tany: F2(any),\n\tall: F2(all),\n\n\tcontains: F2(contains),\n\tstartsWith: F2(startsWith),\n\tendsWith: F2(endsWith),\n\tindexes: F2(indexes),\n\n\ttoInt: toInt,\n\ttoFloat: toFloat,\n\ttoList: toList,\n\tfromList: fromList\n};\n\n}();\n\n//import Native.Utils //\n\nvar _elm_lang$core$Native_Char = function() {\n\nreturn {\n\tfromCode: function(c) { return _elm_lang$core$Native_Utils.chr(String.fromCharCode(c)); },\n\ttoCode: function(c) { return c.charCodeAt(0); },\n\ttoUpper: function(c) { return _elm_lang$core$Native_Utils.chr(c.toUpperCase()); },\n\ttoLower: function(c) { return _elm_lang$core$Native_Utils.chr(c.toLowerCase()); },\n\ttoLocaleUpper: function(c) { return _elm_lang$core$Native_Utils.chr(c.toLocaleUpperCase()); },\n\ttoLocaleLower: function(c) { return _elm_lang$core$Native_Utils.chr(c.toLocaleLowerCase()); }\n};\n\n}();\nvar _elm_lang$core$Char$fromCode = _elm_lang$core$Native_Char.fromCode;\nvar _elm_lang$core$Char$toCode = _elm_lang$core$Native_Char.toCode;\nvar _elm_lang$core$Char$toLocaleLower = _elm_lang$core$Native_Char.toLocaleLower;\nvar _elm_lang$core$Char$toLocaleUpper = _elm_lang$core$Native_Char.toLocaleUpper;\nvar _elm_lang$core$Char$toLower = _elm_lang$core$Native_Char.toLower;\nvar _elm_lang$core$Char$toUpper = _elm_lang$core$Native_Char.toUpper;\nvar _elm_lang$core$Char$isBetween = F3(\n\tfunction (low, high, $char) {\n\t\tvar code = _elm_lang$core$Char$toCode($char);\n\t\treturn (_elm_lang$core$Native_Utils.cmp(\n\t\t\tcode,\n\t\t\t_elm_lang$core$Char$toCode(low)) > -1) && (_elm_lang$core$Native_Utils.cmp(\n\t\t\tcode,\n\t\t\t_elm_lang$core$Char$toCode(high)) < 1);\n\t});\nvar _elm_lang$core$Char$isUpper = A2(\n\t_elm_lang$core$Char$isBetween,\n\t_elm_lang$core$Native_Utils.chr('A'),\n\t_elm_lang$core$Native_Utils.chr('Z'));\nvar _elm_lang$core$Char$isLower = A2(\n\t_elm_lang$core$Char$isBetween,\n\t_elm_lang$core$Native_Utils.chr('a'),\n\t_elm_lang$core$Native_Utils.chr('z'));\nvar _elm_lang$core$Char$isDigit = A2(\n\t_elm_lang$core$Char$isBetween,\n\t_elm_lang$core$Native_Utils.chr('0'),\n\t_elm_lang$core$Native_Utils.chr('9'));\nvar _elm_lang$core$Char$isOctDigit = A2(\n\t_elm_lang$core$Char$isBetween,\n\t_elm_lang$core$Native_Utils.chr('0'),\n\t_elm_lang$core$Native_Utils.chr('7'));\nvar _elm_lang$core$Char$isHexDigit = function ($char) {\n\treturn _elm_lang$core$Char$isDigit($char) || (A3(\n\t\t_elm_lang$core$Char$isBetween,\n\t\t_elm_lang$core$Native_Utils.chr('a'),\n\t\t_elm_lang$core$Native_Utils.chr('f'),\n\t\t$char) || A3(\n\t\t_elm_lang$core$Char$isBetween,\n\t\t_elm_lang$core$Native_Utils.chr('A'),\n\t\t_elm_lang$core$Native_Utils.chr('F'),\n\t\t$char));\n};\n\nvar _elm_lang$core$String$fromList = _elm_lang$core$Native_String.fromList;\nvar _elm_lang$core$String$toList = _elm_lang$core$Native_String.toList;\nvar _elm_lang$core$String$toFloat = _elm_lang$core$Native_String.toFloat;\nvar _elm_lang$core$String$toInt = _elm_lang$core$Native_String.toInt;\nvar _elm_lang$core$String$indices = _elm_lang$core$Native_String.indexes;\nvar _elm_lang$core$String$indexes = _elm_lang$core$Native_String.indexes;\nvar _elm_lang$core$String$endsWith = _elm_lang$core$Native_String.endsWith;\nvar _elm_lang$core$String$startsWith = _elm_lang$core$Native_String.startsWith;\nvar _elm_lang$core$String$contains = _elm_lang$core$Native_String.contains;\nvar _elm_lang$core$String$all = _elm_lang$core$Native_String.all;\nvar _elm_lang$core$String$any = _elm_lang$core$Native_String.any;\nvar _elm_lang$core$String$toLower = _elm_lang$core$Native_String.toLower;\nvar _elm_lang$core$String$toUpper = _elm_lang$core$Native_String.toUpper;\nvar _elm_lang$core$String$lines = _elm_lang$core$Native_String.lines;\nvar _elm_lang$core$String$words = _elm_lang$core$Native_String.words;\nvar _elm_lang$core$String$trimRight = _elm_lang$core$Native_String.trimRight;\nvar _elm_lang$core$String$trimLeft = _elm_lang$core$Native_String.trimLeft;\nvar _elm_lang$core$String$trim = _elm_lang$core$Native_String.trim;\nvar _elm_lang$core$String$padRight = _elm_lang$core$Native_String.padRight;\nvar _elm_lang$core$String$padLeft = _elm_lang$core$Native_String.padLeft;\nvar _elm_lang$core$String$pad = _elm_lang$core$Native_String.pad;\nvar _elm_lang$core$String$dropRight = _elm_lang$core$Native_String.dropRight;\nvar _elm_lang$core$String$dropLeft = _elm_lang$core$Native_String.dropLeft;\nvar _elm_lang$core$String$right = _elm_lang$core$Native_String.right;\nvar _elm_lang$core$String$left = _elm_lang$core$Native_String.left;\nvar _elm_lang$core$String$slice = _elm_lang$core$Native_String.slice;\nvar _elm_lang$core$String$repeat = _elm_lang$core$Native_String.repeat;\nvar _elm_lang$core$String$join = _elm_lang$core$Native_String.join;\nvar _elm_lang$core$String$split = _elm_lang$core$Native_String.split;\nvar _elm_lang$core$String$foldr = _elm_lang$core$Native_String.foldr;\nvar _elm_lang$core$String$foldl = _elm_lang$core$Native_String.foldl;\nvar _elm_lang$core$String$reverse = _elm_lang$core$Native_String.reverse;\nvar _elm_lang$core$String$filter = _elm_lang$core$Native_String.filter;\nvar _elm_lang$core$String$map = _elm_lang$core$Native_String.map;\nvar _elm_lang$core$String$length = _elm_lang$core$Native_String.length;\nvar _elm_lang$core$String$concat = _elm_lang$core$Native_String.concat;\nvar _elm_lang$core$String$append = _elm_lang$core$Native_String.append;\nvar _elm_lang$core$String$uncons = _elm_lang$core$Native_String.uncons;\nvar _elm_lang$core$String$cons = _elm_lang$core$Native_String.cons;\nvar _elm_lang$core$String$fromChar = function ($char) {\n\treturn A2(_elm_lang$core$String$cons, $char, '');\n};\nvar _elm_lang$core$String$isEmpty = _elm_lang$core$Native_String.isEmpty;\n\nvar _elm_lang$core$Dict$foldr = F3(\n\tfunction (f, acc, t) {\n\t\tfoldr:\n\t\twhile (true) {\n\t\t\tvar _p0 = t;\n\t\t\tif (_p0.ctor === 'RBEmpty_elm_builtin') {\n\t\t\t\treturn acc;\n\t\t\t} else {\n\t\t\t\tvar _v1 = f,\n\t\t\t\t\t_v2 = A3(\n\t\t\t\t\tf,\n\t\t\t\t\t_p0._1,\n\t\t\t\t\t_p0._2,\n\t\t\t\t\tA3(_elm_lang$core$Dict$foldr, f, acc, _p0._4)),\n\t\t\t\t\t_v3 = _p0._3;\n\t\t\t\tf = _v1;\n\t\t\t\tacc = _v2;\n\t\t\t\tt = _v3;\n\t\t\t\tcontinue foldr;\n\t\t\t}\n\t\t}\n\t});\nvar _elm_lang$core$Dict$keys = function (dict) {\n\treturn A3(\n\t\t_elm_lang$core$Dict$foldr,\n\t\tF3(\n\t\t\tfunction (key, value, keyList) {\n\t\t\t\treturn {ctor: '::', _0: key, _1: keyList};\n\t\t\t}),\n\t\t{ctor: '[]'},\n\t\tdict);\n};\nvar _elm_lang$core$Dict$values = function (dict) {\n\treturn A3(\n\t\t_elm_lang$core$Dict$foldr,\n\t\tF3(\n\t\t\tfunction (key, value, valueList) {\n\t\t\t\treturn {ctor: '::', _0: value, _1: valueList};\n\t\t\t}),\n\t\t{ctor: '[]'},\n\t\tdict);\n};\nvar _elm_lang$core$Dict$toList = function (dict) {\n\treturn A3(\n\t\t_elm_lang$core$Dict$foldr,\n\t\tF3(\n\t\t\tfunction (key, value, list) {\n\t\t\t\treturn {\n\t\t\t\t\tctor: '::',\n\t\t\t\t\t_0: {ctor: '_Tuple2', _0: key, _1: value},\n\t\t\t\t\t_1: list\n\t\t\t\t};\n\t\t\t}),\n\t\t{ctor: '[]'},\n\t\tdict);\n};\nvar _elm_lang$core$Dict$foldl = F3(\n\tfunction (f, acc, dict) {\n\t\tfoldl:\n\t\twhile (true) {\n\t\t\tvar _p1 = dict;\n\t\t\tif (_p1.ctor === 'RBEmpty_elm_builtin') {\n\t\t\t\treturn acc;\n\t\t\t} else {\n\t\t\t\tvar _v5 = f,\n\t\t\t\t\t_v6 = A3(\n\t\t\t\t\tf,\n\t\t\t\t\t_p1._1,\n\t\t\t\t\t_p1._2,\n\t\t\t\t\tA3(_elm_lang$core$Dict$foldl, f, acc, _p1._3)),\n\t\t\t\t\t_v7 = _p1._4;\n\t\t\t\tf = _v5;\n\t\t\t\tacc = _v6;\n\t\t\t\tdict = _v7;\n\t\t\t\tcontinue foldl;\n\t\t\t}\n\t\t}\n\t});\nvar _elm_lang$core$Dict$merge = F6(\n\tfunction (leftStep, bothStep, rightStep, leftDict, rightDict, initialResult) {\n\t\tvar stepState = F3(\n\t\t\tfunction (rKey, rValue, _p2) {\n\t\t\t\tstepState:\n\t\t\t\twhile (true) {\n\t\t\t\t\tvar _p3 = _p2;\n\t\t\t\t\tvar _p9 = _p3._1;\n\t\t\t\t\tvar _p8 = _p3._0;\n\t\t\t\t\tvar _p4 = _p8;\n\t\t\t\t\tif (_p4.ctor === '[]') {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tctor: '_Tuple2',\n\t\t\t\t\t\t\t_0: _p8,\n\t\t\t\t\t\t\t_1: A3(rightStep, rKey, rValue, _p9)\n\t\t\t\t\t\t};\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar _p7 = _p4._1;\n\t\t\t\t\t\tvar _p6 = _p4._0._1;\n\t\t\t\t\t\tvar _p5 = _p4._0._0;\n\t\t\t\t\t\tif (_elm_lang$core$Native_Utils.cmp(_p5, rKey) < 0) {\n\t\t\t\t\t\t\tvar _v10 = rKey,\n\t\t\t\t\t\t\t\t_v11 = rValue,\n\t\t\t\t\t\t\t\t_v12 = {\n\t\t\t\t\t\t\t\tctor: '_Tuple2',\n\t\t\t\t\t\t\t\t_0: _p7,\n\t\t\t\t\t\t\t\t_1: A3(leftStep, _p5, _p6, _p9)\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\trKey = _v10;\n\t\t\t\t\t\t\trValue = _v11;\n\t\t\t\t\t\t\t_p2 = _v12;\n\t\t\t\t\t\t\tcontinue stepState;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (_elm_lang$core$Native_Utils.cmp(_p5, rKey) > 0) {\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\tctor: '_Tuple2',\n\t\t\t\t\t\t\t\t\t_0: _p8,\n\t\t\t\t\t\t\t\t\t_1: A3(rightStep, rKey, rValue, _p9)\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\tctor: '_Tuple2',\n\t\t\t\t\t\t\t\t\t_0: _p7,\n\t\t\t\t\t\t\t\t\t_1: A4(bothStep, _p5, _p6, rValue, _p9)\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\tvar _p10 = A3(\n\t\t\t_elm_lang$core$Dict$foldl,\n\t\t\tstepState,\n\t\t\t{\n\t\t\t\tctor: '_Tuple2',\n\t\t\t\t_0: _elm_lang$core$Dict$toList(leftDict),\n\t\t\t\t_1: initialResult\n\t\t\t},\n\t\t\trightDict);\n\t\tvar leftovers = _p10._0;\n\t\tvar intermediateResult = _p10._1;\n\t\treturn A3(\n\t\t\t_elm_lang$core$List$foldl,\n\t\t\tF2(\n\t\t\t\tfunction (_p11, result) {\n\t\t\t\t\tvar _p12 = _p11;\n\t\t\t\t\treturn A3(leftStep, _p12._0, _p12._1, result);\n\t\t\t\t}),\n\t\t\tintermediateResult,\n\t\t\tleftovers);\n\t});\nvar _elm_lang$core$Dict$reportRemBug = F4(\n\tfunction (msg, c, lgot, rgot) {\n\t\treturn _elm_lang$core$Native_Debug.crash(\n\t\t\t_elm_lang$core$String$concat(\n\t\t\t\t{\n\t\t\t\t\tctor: '::',\n\t\t\t\t\t_0: 'Internal red-black tree invariant violated, expected ',\n\t\t\t\t\t_1: {\n\t\t\t\t\t\tctor: '::',\n\t\t\t\t\t\t_0: msg,\n\t\t\t\t\t\t_1: {\n\t\t\t\t\t\t\tctor: '::',\n\t\t\t\t\t\t\t_0: ' and got ',\n\t\t\t\t\t\t\t_1: {\n\t\t\t\t\t\t\t\tctor: '::',\n\t\t\t\t\t\t\t\t_0: _elm_lang$core$Basics$toString(c),\n\t\t\t\t\t\t\t\t_1: {\n\t\t\t\t\t\t\t\t\tctor: '::',\n\t\t\t\t\t\t\t\t\t_0: '/',\n\t\t\t\t\t\t\t\t\t_1: {\n\t\t\t\t\t\t\t\t\t\tctor: '::',\n\t\t\t\t\t\t\t\t\t\t_0: lgot,\n\t\t\t\t\t\t\t\t\t\t_1: {\n\t\t\t\t\t\t\t\t\t\t\tctor: '::',\n\t\t\t\t\t\t\t\t\t\t\t_0: '/',\n\t\t\t\t\t\t\t\t\t\t\t_1: {\n\t\t\t\t\t\t\t\t\t\t\t\tctor: '::',\n\t\t\t\t\t\t\t\t\t\t\t\t_0: rgot,\n\t\t\t\t\t\t\t\t\t\t\t\t_1: {\n\t\t\t\t\t\t\t\t\t\t\t\t\tctor: '::',\n\t\t\t\t\t\t\t\t\t\t\t\t\t_0: '\\nPlease report this bug to <https://github.com/elm-lang/core/issues>',\n\t\t\t\t\t\t\t\t\t\t\t\t\t_1: {ctor: '[]'}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}));\n\t});\nvar _elm_lang$core$Dict$isBBlack = function (dict) {\n\tvar _p13 = dict;\n\t_v14_2:\n\tdo {\n\t\tif (_p13.ctor === 'RBNode_elm_builtin') {\n\t\t\tif (_p13._0.ctor === 'BBlack') {\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\tbreak _v14_2;\n\t\t\t}\n\t\t} else {\n\t\t\tif (_p13._0.ctor === 'LBBlack') {\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\tbreak _v14_2;\n\t\t\t}\n\t\t}\n\t} while(false);\n\treturn false;\n};\nvar _elm_lang$core$Dict$sizeHelp = F2(\n\tfunction (n, dict) {\n\t\tsizeHelp:\n\t\twhile (true) {\n\t\t\tvar _p14 = dict;\n\t\t\tif (_p14.ctor === 'RBEmpty_elm_builtin') {\n\t\t\t\treturn n;\n\t\t\t} else {\n\t\t\t\tvar _v16 = A2(_elm_lang$core$Dict$sizeHelp, n + 1, _p14._4),\n\t\t\t\t\t_v17 = _p14._3;\n\t\t\t\tn = _v16;\n\t\t\t\tdict = _v17;\n\t\t\t\tcontinue sizeHelp;\n\t\t\t}\n\t\t}\n\t});\nvar _elm_lang$core$Dict$size = function (dict) {\n\treturn A2(_elm_lang$core$Dict$sizeHelp, 0, dict);\n};\nvar _elm_lang$core$Dict$get = F2(\n\tfunction (targetKey, dict) {\n\t\tget:\n\t\twhile (true) {\n\t\t\tvar _p15 = dict;\n\t\t\tif (_p15.ctor === 'RBEmpty_elm_builtin') {\n\t\t\t\treturn _elm_lang$core$Maybe$Nothing;\n\t\t\t} else {\n\t\t\t\tvar _p16 = A2(_elm_lang$core$Basics$compare, targetKey, _p15._1);\n\t\t\t\tswitch (_p16.ctor) {\n\t\t\t\t\tcase 'LT':\n\t\t\t\t\t\tvar _v20 = targetKey,\n\t\t\t\t\t\t\t_v21 = _p15._3;\n\t\t\t\t\t\ttargetKey = _v20;\n\t\t\t\t\t\tdict = _v21;\n\t\t\t\t\t\tcontinue get;\n\t\t\t\t\tcase 'EQ':\n\t\t\t\t\t\treturn _elm_lang$core$Maybe$Just(_p15._2);\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tvar _v22 = targetKey,\n\t\t\t\t\t\t\t_v23 = _p15._4;\n\t\t\t\t\t\ttargetKey = _v22;\n\t\t\t\t\t\tdict = _v23;\n\t\t\t\t\t\tcontinue get;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar _elm_lang$core$Dict$member = F2(\n\tfunction (key, dict) {\n\t\tvar _p17 = A2(_elm_lang$core$Dict$get, key, dict);\n\t\tif (_p17.ctor === 'Just') {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t});\nvar _elm_lang$core$Dict$maxWithDefault = F3(\n\tfunction (k, v, r) {\n\t\tmaxWithDefault:\n\t\twhile (true) {\n\t\t\tvar _p18 = r;\n\t\t\tif (_p18.ctor === 'RBEmpty_elm_builtin') {\n\t\t\t\treturn {ctor: '_Tuple2', _0: k, _1: v};\n\t\t\t} else {\n\t\t\t\tvar _v26 = _p18._1,\n\t\t\t\t\t_v27 = _p18._2,\n\t\t\t\t\t_v28 = _p18._4;\n\t\t\t\tk = _v26;\n\t\t\t\tv = _v27;\n\t\t\t\tr = _v28;\n\t\t\t\tcontinue maxWithDefault;\n\t\t\t}\n\t\t}\n\t});\nvar _elm_lang$core$Dict$NBlack = {ctor: 'NBlack'};\nvar _elm_lang$core$Dict$BBlack = {ctor: 'BBlack'};\nvar _elm_lang$core$Dict$Black = {ctor: 'Black'};\nvar _elm_lang$core$Dict$blackish = function (t) {\n\tvar _p19 = t;\n\tif (_p19.ctor === 'RBNode_elm_builtin') {\n\t\tvar _p20 = _p19._0;\n\t\treturn _elm_lang$core$Native_Utils.eq(_p20, _elm_lang$core$Dict$Black) || _elm_lang$core$Native_Utils.eq(_p20, _elm_lang$core$Dict$BBlack);\n\t} else {\n\t\treturn true;\n\t}\n};\nvar _elm_lang$core$Dict$Red = {ctor: 'Red'};\nvar _elm_lang$core$Dict$moreBlack = function (color) {\n\tvar _p21 = color;\n\tswitch (_p21.ctor) {\n\t\tcase 'Black':\n\t\t\treturn _elm_lang$core$Dict$BBlack;\n\t\tcase 'Red':\n\t\t\treturn _elm_lang$core$Dict$Black;\n\t\tcase 'NBlack':\n\t\t\treturn _elm_lang$core$Dict$Red;\n\t\tdefault:\n\t\t\treturn _elm_lang$core$Native_Debug.crash('Can\\'t make a double black node more black!');\n\t}\n};\nvar _elm_lang$core$Dict$lessBlack = function (color) {\n\tvar _p22 = color;\n\tswitch (_p22.ctor) {\n\t\tcase 'BBlack':\n\t\t\treturn _elm_lang$core$Dict$Black;\n\t\tcase 'Black':\n\t\t\treturn _elm_lang$core$Dict$Red;\n\t\tcase 'Red':\n\t\t\treturn _elm_lang$core$Dict$NBlack;\n\t\tdefault:\n\t\t\treturn _elm_lang$core$Native_Debug.crash('Can\\'t make a negative black node less black!');\n\t}\n};\nvar _elm_lang$core$Dict$LBBlack = {ctor: 'LBBlack'};\nvar _elm_lang$core$Dict$LBlack = {ctor: 'LBlack'};\nvar _elm_lang$core$Dict$RBEmpty_elm_builtin = function (a) {\n\treturn {ctor: 'RBEmpty_elm_builtin', _0: a};\n};\nvar _elm_lang$core$Dict$empty = _elm_lang$core$Dict$RBEmpty_elm_builtin(_elm_lang$core$Dict$LBlack);\nvar _elm_lang$core$Dict$isEmpty = function (dict) {\n\treturn _elm_lang$core$Native_Utils.eq(dict, _elm_lang$core$Dict$empty);\n};\nvar _elm_lang$core$Dict$RBNode_elm_builtin = F5(\n\tfunction (a, b, c, d, e) {\n\t\treturn {ctor: 'RBNode_elm_builtin', _0: a, _1: b, _2: c, _3: d, _4: e};\n\t});\nvar _elm_lang$core$Dict$ensureBlackRoot = function (dict) {\n\tvar _p23 = dict;\n\tif ((_p23.ctor === 'RBNode_elm_builtin') && (_p23._0.ctor === 'Red')) {\n\t\treturn A5(_elm_lang$core$Dict$RBNode_elm_builtin, _elm_lang$core$Dict$Black, _p23._1, _p23._2, _p23._3, _p23._4);\n\t} else {\n\t\treturn dict;\n\t}\n};\nvar _elm_lang$core$Dict$lessBlackTree = function (dict) {\n\tvar _p24 = dict;\n\tif (_p24.ctor === 'RBNode_elm_builtin') {\n\t\treturn A5(\n\t\t\t_elm_lang$core$Dict$RBNode_elm_builtin,\n\t\t\t_elm_lang$core$Dict$lessBlack(_p24._0),\n\t\t\t_p24._1,\n\t\t\t_p24._2,\n\t\t\t_p24._3,\n\t\t\t_p24._4);\n\t} else {\n\t\treturn _elm_lang$core$Dict$RBEmpty_elm_builtin(_elm_lang$core$Dict$LBlack);\n\t}\n};\nvar _elm_lang$core$Dict$balancedTree = function (col) {\n\treturn function (xk) {\n\t\treturn function (xv) {\n\t\t\treturn function (yk) {\n\t\t\t\treturn function (yv) {\n\t\t\t\t\treturn function (zk) {\n\t\t\t\t\t\treturn function (zv) {\n\t\t\t\t\t\t\treturn function (a) {\n\t\t\t\t\t\t\t\treturn function (b) {\n\t\t\t\t\t\t\t\t\treturn function (c) {\n\t\t\t\t\t\t\t\t\t\treturn function (d) {\n\t\t\t\t\t\t\t\t\t\t\treturn A5(\n\t\t\t\t\t\t\t\t\t\t\t\t_elm_lang$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t\t\t\t\t\t\t\t_elm_lang$core$Dict$lessBlack(col),\n\t\t\t\t\t\t\t\t\t\t\t\tyk,\n\t\t\t\t\t\t\t\t\t\t\t\tyv,\n\t\t\t\t\t\t\t\t\t\t\t\tA5(_elm_lang$core$Dict$RBNode_elm_builtin, _elm_lang$core$Dict$Black, xk, xv, a, b),\n\t\t\t\t\t\t\t\t\t\t\t\tA5(_elm_lang$core$Dict$RBNode_elm_builtin, _elm_lang$core$Dict$Black, zk, zv, c, d));\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t};\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t};\n\t\t};\n\t};\n};\nvar _elm_lang$core$Dict$blacken = function (t) {\n\tvar _p25 = t;\n\tif (_p25.ctor === 'RBEmpty_elm_builtin') {\n\t\treturn _elm_lang$core$Dict$RBEmpty_elm_builtin(_elm_lang$core$Dict$LBlack);\n\t} else {\n\t\treturn A5(_elm_lang$core$Dict$RBNode_elm_builtin, _elm_lang$core$Dict$Black, _p25._1, _p25._2, _p25._3, _p25._4);\n\t}\n};\nvar _elm_lang$core$Dict$redden = function (t) {\n\tvar _p26 = t;\n\tif (_p26.ctor === 'RBEmpty_elm_builtin') {\n\t\treturn _elm_lang$core$Native_Debug.crash('can\\'t make a Leaf red');\n\t} else {\n\t\treturn A5(_elm_lang$core$Dict$RBNode_elm_builtin, _elm_lang$core$Dict$Red, _p26._1, _p26._2, _p26._3, _p26._4);\n\t}\n};\nvar _elm_lang$core$Dict$balanceHelp = function (tree) {\n\tvar _p27 = tree;\n\t_v36_6:\n\tdo {\n\t\t_v36_5:\n\t\tdo {\n\t\t\t_v36_4:\n\t\t\tdo {\n\t\t\t\t_v36_3:\n\t\t\t\tdo {\n\t\t\t\t\t_v36_2:\n\t\t\t\t\tdo {\n\t\t\t\t\t\t_v36_1:\n\t\t\t\t\t\tdo {\n\t\t\t\t\t\t\t_v36_0:\n\t\t\t\t\t\t\tdo {\n\t\t\t\t\t\t\t\tif (_p27.ctor === 'RBNode_elm_builtin') {\n\t\t\t\t\t\t\t\t\tif (_p27._3.ctor === 'RBNode_elm_builtin') {\n\t\t\t\t\t\t\t\t\t\tif (_p27._4.ctor === 'RBNode_elm_builtin') {\n\t\t\t\t\t\t\t\t\t\t\tswitch (_p27._3._0.ctor) {\n\t\t\t\t\t\t\t\t\t\t\t\tcase 'Red':\n\t\t\t\t\t\t\t\t\t\t\t\t\tswitch (_p27._4._0.ctor) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcase 'Red':\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ((_p27._3._3.ctor === 'RBNode_elm_builtin') && (_p27._3._3._0.ctor === 'Red')) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_0;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ((_p27._3._4.ctor === 'RBNode_elm_builtin') && (_p27._3._4._0.ctor === 'Red')) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_1;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ((_p27._4._3.ctor === 'RBNode_elm_builtin') && (_p27._4._3._0.ctor === 'Red')) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_2;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ((_p27._4._4.ctor === 'RBNode_elm_builtin') && (_p27._4._4._0.ctor === 'Red')) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_3;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_6;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcase 'NBlack':\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ((_p27._3._3.ctor === 'RBNode_elm_builtin') && (_p27._3._3._0.ctor === 'Red')) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_0;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ((_p27._3._4.ctor === 'RBNode_elm_builtin') && (_p27._3._4._0.ctor === 'Red')) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_1;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (((((_p27._0.ctor === 'BBlack') && (_p27._4._3.ctor === 'RBNode_elm_builtin')) && (_p27._4._3._0.ctor === 'Black')) && (_p27._4._4.ctor === 'RBNode_elm_builtin')) && (_p27._4._4._0.ctor === 'Black')) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_4;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_6;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ((_p27._3._3.ctor === 'RBNode_elm_builtin') && (_p27._3._3._0.ctor === 'Red')) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_0;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ((_p27._3._4.ctor === 'RBNode_elm_builtin') && (_p27._3._4._0.ctor === 'Red')) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_1;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_6;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tcase 'NBlack':\n\t\t\t\t\t\t\t\t\t\t\t\t\tswitch (_p27._4._0.ctor) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcase 'Red':\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ((_p27._4._3.ctor === 'RBNode_elm_builtin') && (_p27._4._3._0.ctor === 'Red')) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_2;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ((_p27._4._4.ctor === 'RBNode_elm_builtin') && (_p27._4._4._0.ctor === 'Red')) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_3;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (((((_p27._0.ctor === 'BBlack') && (_p27._3._3.ctor === 'RBNode_elm_builtin')) && (_p27._3._3._0.ctor === 'Black')) && (_p27._3._4.ctor === 'RBNode_elm_builtin')) && (_p27._3._4._0.ctor === 'Black')) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_5;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_6;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcase 'NBlack':\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (_p27._0.ctor === 'BBlack') {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ((((_p27._4._3.ctor === 'RBNode_elm_builtin') && (_p27._4._3._0.ctor === 'Black')) && (_p27._4._4.ctor === 'RBNode_elm_builtin')) && (_p27._4._4._0.ctor === 'Black')) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_4;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ((((_p27._3._3.ctor === 'RBNode_elm_builtin') && (_p27._3._3._0.ctor === 'Black')) && (_p27._3._4.ctor === 'RBNode_elm_builtin')) && (_p27._3._4._0.ctor === 'Black')) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_5;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_6;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_6;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (((((_p27._0.ctor === 'BBlack') && (_p27._3._3.ctor === 'RBNode_elm_builtin')) && (_p27._3._3._0.ctor === 'Black')) && (_p27._3._4.ctor === 'RBNode_elm_builtin')) && (_p27._3._4._0.ctor === 'Black')) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_5;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_6;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\t\t\t\tswitch (_p27._4._0.ctor) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcase 'Red':\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ((_p27._4._3.ctor === 'RBNode_elm_builtin') && (_p27._4._3._0.ctor === 'Red')) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_2;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ((_p27._4._4.ctor === 'RBNode_elm_builtin') && (_p27._4._4._0.ctor === 'Red')) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_3;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_6;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcase 'NBlack':\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (((((_p27._0.ctor === 'BBlack') && (_p27._4._3.ctor === 'RBNode_elm_builtin')) && (_p27._4._3._0.ctor === 'Black')) && (_p27._4._4.ctor === 'RBNode_elm_builtin')) && (_p27._4._4._0.ctor === 'Black')) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_4;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_6;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_6;\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tswitch (_p27._3._0.ctor) {\n\t\t\t\t\t\t\t\t\t\t\t\tcase 'Red':\n\t\t\t\t\t\t\t\t\t\t\t\t\tif ((_p27._3._3.ctor === 'RBNode_elm_builtin') && (_p27._3._3._0.ctor === 'Red')) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_0;\n\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ((_p27._3._4.ctor === 'RBNode_elm_builtin') && (_p27._3._4._0.ctor === 'Red')) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_1;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_6;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tcase 'NBlack':\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (((((_p27._0.ctor === 'BBlack') && (_p27._3._3.ctor === 'RBNode_elm_builtin')) && (_p27._3._3._0.ctor === 'Black')) && (_p27._3._4.ctor === 'RBNode_elm_builtin')) && (_p27._3._4._0.ctor === 'Black')) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_5;\n\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_6;\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_6;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tif (_p27._4.ctor === 'RBNode_elm_builtin') {\n\t\t\t\t\t\t\t\t\t\t\tswitch (_p27._4._0.ctor) {\n\t\t\t\t\t\t\t\t\t\t\t\tcase 'Red':\n\t\t\t\t\t\t\t\t\t\t\t\t\tif ((_p27._4._3.ctor === 'RBNode_elm_builtin') && (_p27._4._3._0.ctor === 'Red')) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_2;\n\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ((_p27._4._4.ctor === 'RBNode_elm_builtin') && (_p27._4._4._0.ctor === 'Red')) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_3;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_6;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tcase 'NBlack':\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (((((_p27._0.ctor === 'BBlack') && (_p27._4._3.ctor === 'RBNode_elm_builtin')) && (_p27._4._3._0.ctor === 'Black')) && (_p27._4._4.ctor === 'RBNode_elm_builtin')) && (_p27._4._4._0.ctor === 'Black')) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_4;\n\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_6;\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v36_6;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tbreak _v36_6;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tbreak _v36_6;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} while(false);\n\t\t\t\t\t\t\treturn _elm_lang$core$Dict$balancedTree(_p27._0)(_p27._3._3._1)(_p27._3._3._2)(_p27._3._1)(_p27._3._2)(_p27._1)(_p27._2)(_p27._3._3._3)(_p27._3._3._4)(_p27._3._4)(_p27._4);\n\t\t\t\t\t\t} while(false);\n\t\t\t\t\t\treturn _elm_lang$core$Dict$balancedTree(_p27._0)(_p27._3._1)(_p27._3._2)(_p27._3._4._1)(_p27._3._4._2)(_p27._1)(_p27._2)(_p27._3._3)(_p27._3._4._3)(_p27._3._4._4)(_p27._4);\n\t\t\t\t\t} while(false);\n\t\t\t\t\treturn _elm_lang$core$Dict$balancedTree(_p27._0)(_p27._1)(_p27._2)(_p27._4._3._1)(_p27._4._3._2)(_p27._4._1)(_p27._4._2)(_p27._3)(_p27._4._3._3)(_p27._4._3._4)(_p27._4._4);\n\t\t\t\t} while(false);\n\t\t\t\treturn _elm_lang$core$Dict$balancedTree(_p27._0)(_p27._1)(_p27._2)(_p27._4._1)(_p27._4._2)(_p27._4._4._1)(_p27._4._4._2)(_p27._3)(_p27._4._3)(_p27._4._4._3)(_p27._4._4._4);\n\t\t\t} while(false);\n\t\t\treturn A5(\n\t\t\t\t_elm_lang$core$Dict$RBNode_elm_builtin,\n\t\t\t\t_elm_lang$core$Dict$Black,\n\t\t\t\t_p27._4._3._1,\n\t\t\t\t_p27._4._3._2,\n\t\t\t\tA5(_elm_lang$core$Dict$RBNode_elm_builtin, _elm_lang$core$Dict$Black, _p27._1, _p27._2, _p27._3, _p27._4._3._3),\n\t\t\t\tA5(\n\t\t\t\t\t_elm_lang$core$Dict$balance,\n\t\t\t\t\t_elm_lang$core$Dict$Black,\n\t\t\t\t\t_p27._4._1,\n\t\t\t\t\t_p27._4._2,\n\t\t\t\t\t_p27._4._3._4,\n\t\t\t\t\t_elm_lang$core$Dict$redden(_p27._4._4)));\n\t\t} while(false);\n\t\treturn A5(\n\t\t\t_elm_lang$core$Dict$RBNode_elm_builtin,\n\t\t\t_elm_lang$core$Dict$Black,\n\t\t\t_p27._3._4._1,\n\t\t\t_p27._3._4._2,\n\t\t\tA5(\n\t\t\t\t_elm_lang$core$Dict$balance,\n\t\t\t\t_elm_lang$core$Dict$Black,\n\t\t\t\t_p27._3._1,\n\t\t\t\t_p27._3._2,\n\t\t\t\t_elm_lang$core$Dict$redden(_p27._3._3),\n\t\t\t\t_p27._3._4._3),\n\t\t\tA5(_elm_lang$core$Dict$RBNode_elm_builtin, _elm_lang$core$Dict$Black, _p27._1, _p27._2, _p27._3._4._4, _p27._4));\n\t} while(false);\n\treturn tree;\n};\nvar _elm_lang$core$Dict$balance = F5(\n\tfunction (c, k, v, l, r) {\n\t\tvar tree = A5(_elm_lang$core$Dict$RBNode_elm_builtin, c, k, v, l, r);\n\t\treturn _elm_lang$core$Dict$blackish(tree) ? _elm_lang$core$Dict$balanceHelp(tree) : tree;\n\t});\nvar _elm_lang$core$Dict$bubble = F5(\n\tfunction (c, k, v, l, r) {\n\t\treturn (_elm_lang$core$Dict$isBBlack(l) || _elm_lang$core$Dict$isBBlack(r)) ? A5(\n\t\t\t_elm_lang$core$Dict$balance,\n\t\t\t_elm_lang$core$Dict$moreBlack(c),\n\t\t\tk,\n\t\t\tv,\n\t\t\t_elm_lang$core$Dict$lessBlackTree(l),\n\t\t\t_elm_lang$core$Dict$lessBlackTree(r)) : A5(_elm_lang$core$Dict$RBNode_elm_builtin, c, k, v, l, r);\n\t});\nvar _elm_lang$core$Dict$removeMax = F5(\n\tfunction (c, k, v, l, r) {\n\t\tvar _p28 = r;\n\t\tif (_p28.ctor === 'RBEmpty_elm_builtin') {\n\t\t\treturn A3(_elm_lang$core$Dict$rem, c, l, r);\n\t\t} else {\n\t\t\treturn A5(\n\t\t\t\t_elm_lang$core$Dict$bubble,\n\t\t\t\tc,\n\t\t\t\tk,\n\t\t\t\tv,\n\t\t\t\tl,\n\t\t\t\tA5(_elm_lang$core$Dict$removeMax, _p28._0, _p28._1, _p28._2, _p28._3, _p28._4));\n\t\t}\n\t});\nvar _elm_lang$core$Dict$rem = F3(\n\tfunction (color, left, right) {\n\t\tvar _p29 = {ctor: '_Tuple2', _0: left, _1: right};\n\t\tif (_p29._0.ctor === 'RBEmpty_elm_builtin') {\n\t\t\tif (_p29._1.ctor === 'RBEmpty_elm_builtin') {\n\t\t\t\tvar _p30 = color;\n\t\t\t\tswitch (_p30.ctor) {\n\t\t\t\t\tcase 'Red':\n\t\t\t\t\t\treturn _elm_lang$core$Dict$RBEmpty_elm_builtin(_elm_lang$core$Dict$LBlack);\n\t\t\t\t\tcase 'Black':\n\t\t\t\t\t\treturn _elm_lang$core$Dict$RBEmpty_elm_builtin(_elm_lang$core$Dict$LBBlack);\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn _elm_lang$core$Native_Debug.crash('cannot have bblack or nblack nodes at this point');\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar _p33 = _p29._1._0;\n\t\t\t\tvar _p32 = _p29._0._0;\n\t\t\t\tvar _p31 = {ctor: '_Tuple3', _0: color, _1: _p32, _2: _p33};\n\t\t\t\tif ((((_p31.ctor === '_Tuple3') && (_p31._0.ctor === 'Black')) && (_p31._1.ctor === 'LBlack')) && (_p31._2.ctor === 'Red')) {\n\t\t\t\t\treturn A5(_elm_lang$core$Dict$RBNode_elm_builtin, _elm_lang$core$Dict$Black, _p29._1._1, _p29._1._2, _p29._1._3, _p29._1._4);\n\t\t\t\t} else {\n\t\t\t\t\treturn A4(\n\t\t\t\t\t\t_elm_lang$core$Dict$reportRemBug,\n\t\t\t\t\t\t'Black/LBlack/Red',\n\t\t\t\t\t\tcolor,\n\t\t\t\t\t\t_elm_lang$core$Basics$toString(_p32),\n\t\t\t\t\t\t_elm_lang$core$Basics$toString(_p33));\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (_p29._1.ctor === 'RBEmpty_elm_builtin') {\n\t\t\t\tvar _p36 = _p29._1._0;\n\t\t\t\tvar _p35 = _p29._0._0;\n\t\t\t\tvar _p34 = {ctor: '_Tuple3', _0: color, _1: _p35, _2: _p36};\n\t\t\t\tif ((((_p34.ctor === '_Tuple3') && (_p34._0.ctor === 'Black')) && (_p34._1.ctor === 'Red')) && (_p34._2.ctor === 'LBlack')) {\n\t\t\t\t\treturn A5(_elm_lang$core$Dict$RBNode_elm_builtin, _elm_lang$core$Dict$Black, _p29._0._1, _p29._0._2, _p29._0._3, _p29._0._4);\n\t\t\t\t} else {\n\t\t\t\t\treturn A4(\n\t\t\t\t\t\t_elm_lang$core$Dict$reportRemBug,\n\t\t\t\t\t\t'Black/Red/LBlack',\n\t\t\t\t\t\tcolor,\n\t\t\t\t\t\t_elm_lang$core$Basics$toString(_p35),\n\t\t\t\t\t\t_elm_lang$core$Basics$toString(_p36));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar _p40 = _p29._0._2;\n\t\t\t\tvar _p39 = _p29._0._4;\n\t\t\t\tvar _p38 = _p29._0._1;\n\t\t\t\tvar newLeft = A5(_elm_lang$core$Dict$removeMax, _p29._0._0, _p38, _p40, _p29._0._3, _p39);\n\t\t\t\tvar _p37 = A3(_elm_lang$core$Dict$maxWithDefault, _p38, _p40, _p39);\n\t\t\t\tvar k = _p37._0;\n\t\t\t\tvar v = _p37._1;\n\t\t\t\treturn A5(_elm_lang$core$Dict$bubble, color, k, v, newLeft, right);\n\t\t\t}\n\t\t}\n\t});\nvar _elm_lang$core$Dict$map = F2(\n\tfunction (f, dict) {\n\t\tvar _p41 = dict;\n\t\tif (_p41.ctor === 'RBEmpty_elm_builtin') {\n\t\t\treturn _elm_lang$core$Dict$RBEmpty_elm_builtin(_elm_lang$core$Dict$LBlack);\n\t\t} else {\n\t\t\tvar _p42 = _p41._1;\n\t\t\treturn A5(\n\t\t\t\t_elm_lang$core$Dict$RBNode_elm_builtin,\n\t\t\t\t_p41._0,\n\t\t\t\t_p42,\n\t\t\t\tA2(f, _p42, _p41._2),\n\t\t\t\tA2(_elm_lang$core$Dict$map, f, _p41._3),\n\t\t\t\tA2(_elm_lang$core$Dict$map, f, _p41._4));\n\t\t}\n\t});\nvar _elm_lang$core$Dict$Same = {ctor: 'Same'};\nvar _elm_lang$core$Dict$Remove = {ctor: 'Remove'};\nvar _elm_lang$core$Dict$Insert = {ctor: 'Insert'};\nvar _elm_lang$core$Dict$update = F3(\n\tfunction (k, alter, dict) {\n\t\tvar up = function (dict) {\n\t\t\tvar _p43 = dict;\n\t\t\tif (_p43.ctor === 'RBEmpty_elm_builtin') {\n\t\t\t\tvar _p44 = alter(_elm_lang$core$Maybe$Nothing);\n\t\t\t\tif (_p44.ctor === 'Nothing') {\n\t\t\t\t\treturn {ctor: '_Tuple2', _0: _elm_lang$core$Dict$Same, _1: _elm_lang$core$Dict$empty};\n\t\t\t\t} else {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tctor: '_Tuple2',\n\t\t\t\t\t\t_0: _elm_lang$core$Dict$Insert,\n\t\t\t\t\t\t_1: A5(_elm_lang$core$Dict$RBNode_elm_builtin, _elm_lang$core$Dict$Red, k, _p44._0, _elm_lang$core$Dict$empty, _elm_lang$core$Dict$empty)\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar _p55 = _p43._2;\n\t\t\t\tvar _p54 = _p43._4;\n\t\t\t\tvar _p53 = _p43._3;\n\t\t\t\tvar _p52 = _p43._1;\n\t\t\t\tvar _p51 = _p43._0;\n\t\t\t\tvar _p45 = A2(_elm_lang$core$Basics$compare, k, _p52);\n\t\t\t\tswitch (_p45.ctor) {\n\t\t\t\t\tcase 'EQ':\n\t\t\t\t\t\tvar _p46 = alter(\n\t\t\t\t\t\t\t_elm_lang$core$Maybe$Just(_p55));\n\t\t\t\t\t\tif (_p46.ctor === 'Nothing') {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tctor: '_Tuple2',\n\t\t\t\t\t\t\t\t_0: _elm_lang$core$Dict$Remove,\n\t\t\t\t\t\t\t\t_1: A3(_elm_lang$core$Dict$rem, _p51, _p53, _p54)\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tctor: '_Tuple2',\n\t\t\t\t\t\t\t\t_0: _elm_lang$core$Dict$Same,\n\t\t\t\t\t\t\t\t_1: A5(_elm_lang$core$Dict$RBNode_elm_builtin, _p51, _p52, _p46._0, _p53, _p54)\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\tcase 'LT':\n\t\t\t\t\t\tvar _p47 = up(_p53);\n\t\t\t\t\t\tvar flag = _p47._0;\n\t\t\t\t\t\tvar newLeft = _p47._1;\n\t\t\t\t\t\tvar _p48 = flag;\n\t\t\t\t\t\tswitch (_p48.ctor) {\n\t\t\t\t\t\t\tcase 'Same':\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\tctor: '_Tuple2',\n\t\t\t\t\t\t\t\t\t_0: _elm_lang$core$Dict$Same,\n\t\t\t\t\t\t\t\t\t_1: A5(_elm_lang$core$Dict$RBNode_elm_builtin, _p51, _p52, _p55, newLeft, _p54)\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tcase 'Insert':\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\tctor: '_Tuple2',\n\t\t\t\t\t\t\t\t\t_0: _elm_lang$core$Dict$Insert,\n\t\t\t\t\t\t\t\t\t_1: A5(_elm_lang$core$Dict$balance, _p51, _p52, _p55, newLeft, _p54)\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\tctor: '_Tuple2',\n\t\t\t\t\t\t\t\t\t_0: _elm_lang$core$Dict$Remove,\n\t\t\t\t\t\t\t\t\t_1: A5(_elm_lang$core$Dict$bubble, _p51, _p52, _p55, newLeft, _p54)\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tvar _p49 = up(_p54);\n\t\t\t\t\t\tvar flag = _p49._0;\n\t\t\t\t\t\tvar newRight = _p49._1;\n\t\t\t\t\t\tvar _p50 = flag;\n\t\t\t\t\t\tswitch (_p50.ctor) {\n\t\t\t\t\t\t\tcase 'Same':\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\tctor: '_Tuple2',\n\t\t\t\t\t\t\t\t\t_0: _elm_lang$core$Dict$Same,\n\t\t\t\t\t\t\t\t\t_1: A5(_elm_lang$core$Dict$RBNode_elm_builtin, _p51, _p52, _p55, _p53, newRight)\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tcase 'Insert':\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\tctor: '_Tuple2',\n\t\t\t\t\t\t\t\t\t_0: _elm_lang$core$Dict$Insert,\n\t\t\t\t\t\t\t\t\t_1: A5(_elm_lang$core$Dict$balance, _p51, _p52, _p55, _p53, newRight)\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\tctor: '_Tuple2',\n\t\t\t\t\t\t\t\t\t_0: _elm_lang$core$Dict$Remove,\n\t\t\t\t\t\t\t\t\t_1: A5(_elm_lang$core$Dict$bubble, _p51, _p52, _p55, _p53, newRight)\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tvar _p56 = up(dict);\n\t\tvar flag = _p56._0;\n\t\tvar updatedDict = _p56._1;\n\t\tvar _p57 = flag;\n\t\tswitch (_p57.ctor) {\n\t\t\tcase 'Same':\n\t\t\t\treturn updatedDict;\n\t\t\tcase 'Insert':\n\t\t\t\treturn _elm_lang$core$Dict$ensureBlackRoot(updatedDict);\n\t\t\tdefault:\n\t\t\t\treturn _elm_lang$core$Dict$blacken(updatedDict);\n\t\t}\n\t});\nvar _elm_lang$core$Dict$insert = F3(\n\tfunction (key, value, dict) {\n\t\treturn A3(\n\t\t\t_elm_lang$core$Dict$update,\n\t\t\tkey,\n\t\t\t_elm_lang$core$Basics$always(\n\t\t\t\t_elm_lang$core$Maybe$Just(value)),\n\t\t\tdict);\n\t});\nvar _elm_lang$core$Dict$singleton = F2(\n\tfunction (key, value) {\n\t\treturn A3(_elm_lang$core$Dict$insert, key, value, _elm_lang$core$Dict$empty);\n\t});\nvar _elm_lang$core$Dict$union = F2(\n\tfunction (t1, t2) {\n\t\treturn A3(_elm_lang$core$Dict$foldl, _elm_lang$core$Dict$insert, t2, t1);\n\t});\nvar _elm_lang$core$Dict$filter = F2(\n\tfunction (predicate, dictionary) {\n\t\tvar add = F3(\n\t\t\tfunction (key, value, dict) {\n\t\t\t\treturn A2(predicate, key, value) ? A3(_elm_lang$core$Dict$insert, key, value, dict) : dict;\n\t\t\t});\n\t\treturn A3(_elm_lang$core$Dict$foldl, add, _elm_lang$core$Dict$empty, dictionary);\n\t});\nvar _elm_lang$core$Dict$intersect = F2(\n\tfunction (t1, t2) {\n\t\treturn A2(\n\t\t\t_elm_lang$core$Dict$filter,\n\t\t\tF2(\n\t\t\t\tfunction (k, _p58) {\n\t\t\t\t\treturn A2(_elm_lang$core$Dict$member, k, t2);\n\t\t\t\t}),\n\t\t\tt1);\n\t});\nvar _elm_lang$core$Dict$partition = F2(\n\tfunction (predicate, dict) {\n\t\tvar add = F3(\n\t\t\tfunction (key, value, _p59) {\n\t\t\t\tvar _p60 = _p59;\n\t\t\t\tvar _p62 = _p60._1;\n\t\t\t\tvar _p61 = _p60._0;\n\t\t\t\treturn A2(predicate, key, value) ? {\n\t\t\t\t\tctor: '_Tuple2',\n\t\t\t\t\t_0: A3(_elm_lang$core$Dict$insert, key, value, _p61),\n\t\t\t\t\t_1: _p62\n\t\t\t\t} : {\n\t\t\t\t\tctor: '_Tuple2',\n\t\t\t\t\t_0: _p61,\n\t\t\t\t\t_1: A3(_elm_lang$core$Dict$insert, key, value, _p62)\n\t\t\t\t};\n\t\t\t});\n\t\treturn A3(\n\t\t\t_elm_lang$core$Dict$foldl,\n\t\t\tadd,\n\t\t\t{ctor: '_Tuple2', _0: _elm_lang$core$Dict$empty, _1: _elm_lang$core$Dict$empty},\n\t\t\tdict);\n\t});\nvar _elm_lang$core$Dict$fromList = function (assocs) {\n\treturn A3(\n\t\t_elm_lang$core$List$foldl,\n\t\tF2(\n\t\t\tfunction (_p63, dict) {\n\t\t\t\tvar _p64 = _p63;\n\t\t\t\treturn A3(_elm_lang$core$Dict$insert, _p64._0, _p64._1, dict);\n\t\t\t}),\n\t\t_elm_lang$core$Dict$empty,\n\t\tassocs);\n};\nvar _elm_lang$core$Dict$remove = F2(\n\tfunction (key, dict) {\n\t\treturn A3(\n\t\t\t_elm_lang$core$Dict$update,\n\t\t\tkey,\n\t\t\t_elm_lang$core$Basics$always(_elm_lang$core$Maybe$Nothing),\n\t\t\tdict);\n\t});\nvar _elm_lang$core$Dict$diff = F2(\n\tfunction (t1, t2) {\n\t\treturn A3(\n\t\t\t_elm_lang$core$Dict$foldl,\n\t\t\tF3(\n\t\t\t\tfunction (k, v, t) {\n\t\t\t\t\treturn A2(_elm_lang$core$Dict$remove, k, t);\n\t\t\t\t}),\n\t\t\tt1,\n\t\t\tt2);\n\t});\n\n//import Native.Scheduler //\n\nvar _elm_lang$core$Native_Time = function() {\n\nvar now = _elm_lang$core$Native_Scheduler.nativeBinding(function(callback)\n{\n\tcallback(_elm_lang$core$Native_Scheduler.succeed(Date.now()));\n});\n\nfunction setInterval_(interval, task)\n{\n\treturn _elm_lang$core$Native_Scheduler.nativeBinding(function(callback)\n\t{\n\t\tvar id = setInterval(function() {\n\t\t\t_elm_lang$core$Native_Scheduler.rawSpawn(task);\n\t\t}, interval);\n\n\t\treturn function() { clearInterval(id); };\n\t});\n}\n\nreturn {\n\tnow: now,\n\tsetInterval_: F2(setInterval_)\n};\n\n}();\nvar _elm_lang$core$Time$setInterval = _elm_lang$core$Native_Time.setInterval_;\nvar _elm_lang$core$Time$spawnHelp = F3(\n\tfunction (router, intervals, processes) {\n\t\tvar _p0 = intervals;\n\t\tif (_p0.ctor === '[]') {\n\t\t\treturn _elm_lang$core$Task$succeed(processes);\n\t\t} else {\n\t\t\tvar _p1 = _p0._0;\n\t\t\tvar spawnRest = function (id) {\n\t\t\t\treturn A3(\n\t\t\t\t\t_elm_lang$core$Time$spawnHelp,\n\t\t\t\t\trouter,\n\t\t\t\t\t_p0._1,\n\t\t\t\t\tA3(_elm_lang$core$Dict$insert, _p1, id, processes));\n\t\t\t};\n\t\t\tvar spawnTimer = _elm_lang$core$Native_Scheduler.spawn(\n\t\t\t\tA2(\n\t\t\t\t\t_elm_lang$core$Time$setInterval,\n\t\t\t\t\t_p1,\n\t\t\t\t\tA2(_elm_lang$core$Platform$sendToSelf, router, _p1)));\n\t\t\treturn A2(_elm_lang$core$Task$andThen, spawnRest, spawnTimer);\n\t\t}\n\t});\nvar _elm_lang$core$Time$addMySub = F2(\n\tfunction (_p2, state) {\n\t\tvar _p3 = _p2;\n\t\tvar _p6 = _p3._1;\n\t\tvar _p5 = _p3._0;\n\t\tvar _p4 = A2(_elm_lang$core$Dict$get, _p5, state);\n\t\tif (_p4.ctor === 'Nothing') {\n\t\t\treturn A3(\n\t\t\t\t_elm_lang$core$Dict$insert,\n\t\t\t\t_p5,\n\t\t\t\t{\n\t\t\t\t\tctor: '::',\n\t\t\t\t\t_0: _p6,\n\t\t\t\t\t_1: {ctor: '[]'}\n\t\t\t\t},\n\t\t\t\tstate);\n\t\t} else {\n\t\t\treturn A3(\n\t\t\t\t_elm_lang$core$Dict$insert,\n\t\t\t\t_p5,\n\t\t\t\t{ctor: '::', _0: _p6, _1: _p4._0},\n\t\t\t\tstate);\n\t\t}\n\t});\nvar _elm_lang$core$Time$inMilliseconds = function (t) {\n\treturn t;\n};\nvar _elm_lang$core$Time$millisecond = 1;\nvar _elm_lang$core$Time$second = 1000 * _elm_lang$core$Time$millisecond;\nvar _elm_lang$core$Time$minute = 60 * _elm_lang$core$Time$second;\nvar _elm_lang$core$Time$hour = 60 * _elm_lang$core$Time$minute;\nvar _elm_lang$core$Time$inHours = function (t) {\n\treturn t / _elm_lang$core$Time$hour;\n};\nvar _elm_lang$core$Time$inMinutes = function (t) {\n\treturn t / _elm_lang$core$Time$minute;\n};\nvar _elm_lang$core$Time$inSeconds = function (t) {\n\treturn t / _elm_lang$core$Time$second;\n};\nvar _elm_lang$core$Time$now = _elm_lang$core$Native_Time.now;\nvar _elm_lang$core$Time$onSelfMsg = F3(\n\tfunction (router, interval, state) {\n\t\tvar _p7 = A2(_elm_lang$core$Dict$get, interval, state.taggers);\n\t\tif (_p7.ctor === 'Nothing') {\n\t\t\treturn _elm_lang$core$Task$succeed(state);\n\t\t} else {\n\t\t\tvar tellTaggers = function (time) {\n\t\t\t\treturn _elm_lang$core$Task$sequence(\n\t\t\t\t\tA2(\n\t\t\t\t\t\t_elm_lang$core$List$map,\n\t\t\t\t\t\tfunction (tagger) {\n\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t_elm_lang$core$Platform$sendToApp,\n\t\t\t\t\t\t\t\trouter,\n\t\t\t\t\t\t\t\ttagger(time));\n\t\t\t\t\t\t},\n\t\t\t\t\t\t_p7._0));\n\t\t\t};\n\t\t\treturn A2(\n\t\t\t\t_elm_lang$core$Task$andThen,\n\t\t\t\tfunction (_p8) {\n\t\t\t\t\treturn _elm_lang$core$Task$succeed(state);\n\t\t\t\t},\n\t\t\t\tA2(_elm_lang$core$Task$andThen, tellTaggers, _elm_lang$core$Time$now));\n\t\t}\n\t});\nvar _elm_lang$core$Time$subscription = _elm_lang$core$Native_Platform.leaf('Time');\nvar _elm_lang$core$Time$State = F2(\n\tfunction (a, b) {\n\t\treturn {taggers: a, processes: b};\n\t});\nvar _elm_lang$core$Time$init = _elm_lang$core$Task$succeed(\n\tA2(_elm_lang$core$Time$State, _elm_lang$core$Dict$empty, _elm_lang$core$Dict$empty));\nvar _elm_lang$core$Time$onEffects = F3(\n\tfunction (router, subs, _p9) {\n\t\tvar _p10 = _p9;\n\t\tvar rightStep = F3(\n\t\t\tfunction (_p12, id, _p11) {\n\t\t\t\tvar _p13 = _p11;\n\t\t\t\treturn {\n\t\t\t\t\tctor: '_Tuple3',\n\t\t\t\t\t_0: _p13._0,\n\t\t\t\t\t_1: _p13._1,\n\t\t\t\t\t_2: A2(\n\t\t\t\t\t\t_elm_lang$core$Task$andThen,\n\t\t\t\t\t\tfunction (_p14) {\n\t\t\t\t\t\t\treturn _p13._2;\n\t\t\t\t\t\t},\n\t\t\t\t\t\t_elm_lang$core$Native_Scheduler.kill(id))\n\t\t\t\t};\n\t\t\t});\n\t\tvar bothStep = F4(\n\t\t\tfunction (interval, taggers, id, _p15) {\n\t\t\t\tvar _p16 = _p15;\n\t\t\t\treturn {\n\t\t\t\t\tctor: '_Tuple3',\n\t\t\t\t\t_0: _p16._0,\n\t\t\t\t\t_1: A3(_elm_lang$core$Dict$insert, interval, id, _p16._1),\n\t\t\t\t\t_2: _p16._2\n\t\t\t\t};\n\t\t\t});\n\t\tvar leftStep = F3(\n\t\t\tfunction (interval, taggers, _p17) {\n\t\t\t\tvar _p18 = _p17;\n\t\t\t\treturn {\n\t\t\t\t\tctor: '_Tuple3',\n\t\t\t\t\t_0: {ctor: '::', _0: interval, _1: _p18._0},\n\t\t\t\t\t_1: _p18._1,\n\t\t\t\t\t_2: _p18._2\n\t\t\t\t};\n\t\t\t});\n\t\tvar newTaggers = A3(_elm_lang$core$List$foldl, _elm_lang$core$Time$addMySub, _elm_lang$core$Dict$empty, subs);\n\t\tvar _p19 = A6(\n\t\t\t_elm_lang$core$Dict$merge,\n\t\t\tleftStep,\n\t\t\tbothStep,\n\t\t\trightStep,\n\t\t\tnewTaggers,\n\t\t\t_p10.processes,\n\t\t\t{\n\t\t\t\tctor: '_Tuple3',\n\t\t\t\t_0: {ctor: '[]'},\n\t\t\t\t_1: _elm_lang$core$Dict$empty,\n\t\t\t\t_2: _elm_lang$core$Task$succeed(\n\t\t\t\t\t{ctor: '_Tuple0'})\n\t\t\t});\n\t\tvar spawnList = _p19._0;\n\t\tvar existingDict = _p19._1;\n\t\tvar killTask = _p19._2;\n\t\treturn A2(\n\t\t\t_elm_lang$core$Task$andThen,\n\t\t\tfunction (newProcesses) {\n\t\t\t\treturn _elm_lang$core$Task$succeed(\n\t\t\t\t\tA2(_elm_lang$core$Time$State, newTaggers, newProcesses));\n\t\t\t},\n\t\t\tA2(\n\t\t\t\t_elm_lang$core$Task$andThen,\n\t\t\t\tfunction (_p20) {\n\t\t\t\t\treturn A3(_elm_lang$core$Time$spawnHelp, router, spawnList, existingDict);\n\t\t\t\t},\n\t\t\t\tkillTask));\n\t});\nvar _elm_lang$core$Time$Every = F2(\n\tfunction (a, b) {\n\t\treturn {ctor: 'Every', _0: a, _1: b};\n\t});\nvar _elm_lang$core$Time$every = F2(\n\tfunction (interval, tagger) {\n\t\treturn _elm_lang$core$Time$subscription(\n\t\t\tA2(_elm_lang$core$Time$Every, interval, tagger));\n\t});\nvar _elm_lang$core$Time$subMap = F2(\n\tfunction (f, _p21) {\n\t\tvar _p22 = _p21;\n\t\treturn A2(\n\t\t\t_elm_lang$core$Time$Every,\n\t\t\t_p22._0,\n\t\t\tfunction (_p23) {\n\t\t\t\treturn f(\n\t\t\t\t\t_p22._1(_p23));\n\t\t\t});\n\t});\n_elm_lang$core$Native_Platform.effectManagers['Time'] = {pkg: 'elm-lang/core', init: _elm_lang$core$Time$init, onEffects: _elm_lang$core$Time$onEffects, onSelfMsg: _elm_lang$core$Time$onSelfMsg, tag: 'sub', subMap: _elm_lang$core$Time$subMap};\n\nvar _elm_lang$core$Process$kill = _elm_lang$core$Native_Scheduler.kill;\nvar _elm_lang$core$Process$sleep = _elm_lang$core$Native_Scheduler.sleep;\nvar _elm_lang$core$Process$spawn = _elm_lang$core$Native_Scheduler.spawn;\n\nvar _elm_lang$core$Debug$crash = _elm_lang$core$Native_Debug.crash;\nvar _elm_lang$core$Debug$log = _elm_lang$core$Native_Debug.log;\n\nvar _elm_lang$core$Tuple$mapSecond = F2(\n\tfunction (func, _p0) {\n\t\tvar _p1 = _p0;\n\t\treturn {\n\t\t\tctor: '_Tuple2',\n\t\t\t_0: _p1._0,\n\t\t\t_1: func(_p1._1)\n\t\t};\n\t});\nvar _elm_lang$core$Tuple$mapFirst = F2(\n\tfunction (func, _p2) {\n\t\tvar _p3 = _p2;\n\t\treturn {\n\t\t\tctor: '_Tuple2',\n\t\t\t_0: func(_p3._0),\n\t\t\t_1: _p3._1\n\t\t};\n\t});\nvar _elm_lang$core$Tuple$second = function (_p4) {\n\tvar _p5 = _p4;\n\treturn _p5._1;\n};\nvar _elm_lang$core$Tuple$first = function (_p6) {\n\tvar _p7 = _p6;\n\treturn _p7._0;\n};\n\nvar _elm_lang$animation_frame$AnimationFrame$rAF = _elm_lang$animation_frame$Native_AnimationFrame.create(\n\t{ctor: '_Tuple0'});\nvar _elm_lang$animation_frame$AnimationFrame$subscription = _elm_lang$core$Native_Platform.leaf('AnimationFrame');\nvar _elm_lang$animation_frame$AnimationFrame$State = F3(\n\tfunction (a, b, c) {\n\t\treturn {subs: a, request: b, oldTime: c};\n\t});\nvar _elm_lang$animation_frame$AnimationFrame$init = _elm_lang$core$Task$succeed(\n\tA3(\n\t\t_elm_lang$animation_frame$AnimationFrame$State,\n\t\t{ctor: '[]'},\n\t\t_elm_lang$core$Maybe$Nothing,\n\t\t0));\nvar _elm_lang$animation_frame$AnimationFrame$onEffects = F3(\n\tfunction (router, subs, _p0) {\n\t\tvar _p1 = _p0;\n\t\tvar _p5 = _p1.request;\n\t\tvar _p4 = _p1.oldTime;\n\t\tvar _p2 = {ctor: '_Tuple2', _0: _p5, _1: subs};\n\t\tif (_p2._0.ctor === 'Nothing') {\n\t\t\tif (_p2._1.ctor === '[]') {\n\t\t\t\treturn _elm_lang$core$Task$succeed(\n\t\t\t\t\tA3(\n\t\t\t\t\t\t_elm_lang$animation_frame$AnimationFrame$State,\n\t\t\t\t\t\t{ctor: '[]'},\n\t\t\t\t\t\t_elm_lang$core$Maybe$Nothing,\n\t\t\t\t\t\t_p4));\n\t\t\t} else {\n\t\t\t\treturn A2(\n\t\t\t\t\t_elm_lang$core$Task$andThen,\n\t\t\t\t\tfunction (pid) {\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t_elm_lang$core$Task$andThen,\n\t\t\t\t\t\t\tfunction (time) {\n\t\t\t\t\t\t\t\treturn _elm_lang$core$Task$succeed(\n\t\t\t\t\t\t\t\t\tA3(\n\t\t\t\t\t\t\t\t\t\t_elm_lang$animation_frame$AnimationFrame$State,\n\t\t\t\t\t\t\t\t\t\tsubs,\n\t\t\t\t\t\t\t\t\t\t_elm_lang$core$Maybe$Just(pid),\n\t\t\t\t\t\t\t\t\t\ttime));\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t_elm_lang$core$Time$now);\n\t\t\t\t\t},\n\t\t\t\t\t_elm_lang$core$Process$spawn(\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t_elm_lang$core$Task$andThen,\n\t\t\t\t\t\t\t_elm_lang$core$Platform$sendToSelf(router),\n\t\t\t\t\t\t\t_elm_lang$animation_frame$AnimationFrame$rAF)));\n\t\t\t}\n\t\t} else {\n\t\t\tif (_p2._1.ctor === '[]') {\n\t\t\t\treturn A2(\n\t\t\t\t\t_elm_lang$core$Task$andThen,\n\t\t\t\t\tfunction (_p3) {\n\t\t\t\t\t\treturn _elm_lang$core$Task$succeed(\n\t\t\t\t\t\t\tA3(\n\t\t\t\t\t\t\t\t_elm_lang$animation_frame$AnimationFrame$State,\n\t\t\t\t\t\t\t\t{ctor: '[]'},\n\t\t\t\t\t\t\t\t_elm_lang$core$Maybe$Nothing,\n\t\t\t\t\t\t\t\t_p4));\n\t\t\t\t\t},\n\t\t\t\t\t_elm_lang$core$Process$kill(_p2._0._0));\n\t\t\t} else {\n\t\t\t\treturn _elm_lang$core$Task$succeed(\n\t\t\t\t\tA3(_elm_lang$animation_frame$AnimationFrame$State, subs, _p5, _p4));\n\t\t\t}\n\t\t}\n\t});\nvar _elm_lang$animation_frame$AnimationFrame$onSelfMsg = F3(\n\tfunction (router, newTime, _p6) {\n\t\tvar _p7 = _p6;\n\t\tvar _p10 = _p7.subs;\n\t\tvar diff = newTime - _p7.oldTime;\n\t\tvar send = function (sub) {\n\t\t\tvar _p8 = sub;\n\t\t\tif (_p8.ctor === 'Time') {\n\t\t\t\treturn A2(\n\t\t\t\t\t_elm_lang$core$Platform$sendToApp,\n\t\t\t\t\trouter,\n\t\t\t\t\t_p8._0(newTime));\n\t\t\t} else {\n\t\t\t\treturn A2(\n\t\t\t\t\t_elm_lang$core$Platform$sendToApp,\n\t\t\t\t\trouter,\n\t\t\t\t\t_p8._0(diff));\n\t\t\t}\n\t\t};\n\t\treturn A2(\n\t\t\t_elm_lang$core$Task$andThen,\n\t\t\tfunction (pid) {\n\t\t\t\treturn A2(\n\t\t\t\t\t_elm_lang$core$Task$andThen,\n\t\t\t\t\tfunction (_p9) {\n\t\t\t\t\t\treturn _elm_lang$core$Task$succeed(\n\t\t\t\t\t\t\tA3(\n\t\t\t\t\t\t\t\t_elm_lang$animation_frame$AnimationFrame$State,\n\t\t\t\t\t\t\t\t_p10,\n\t\t\t\t\t\t\t\t_elm_lang$core$Maybe$Just(pid),\n\t\t\t\t\t\t\t\tnewTime));\n\t\t\t\t\t},\n\t\t\t\t\t_elm_lang$core$Task$sequence(\n\t\t\t\t\t\tA2(_elm_lang$core$List$map, send, _p10)));\n\t\t\t},\n\t\t\t_elm_lang$core$Process$spawn(\n\t\t\t\tA2(\n\t\t\t\t\t_elm_lang$core$Task$andThen,\n\t\t\t\t\t_elm_lang$core$Platform$sendToSelf(router),\n\t\t\t\t\t_elm_lang$animation_frame$AnimationFrame$rAF)));\n\t});\nvar _elm_lang$animation_frame$AnimationFrame$Diff = function (a) {\n\treturn {ctor: 'Diff', _0: a};\n};\nvar _elm_lang$animation_frame$AnimationFrame$diffs = function (tagger) {\n\treturn _elm_lang$animation_frame$AnimationFrame$subscription(\n\t\t_elm_lang$animation_frame$AnimationFrame$Diff(tagger));\n};\nvar _elm_lang$animation_frame$AnimationFrame$Time = function (a) {\n\treturn {ctor: 'Time', _0: a};\n};\nvar _elm_lang$animation_frame$AnimationFrame$times = function (tagger) {\n\treturn _elm_lang$animation_frame$AnimationFrame$subscription(\n\t\t_elm_lang$animation_frame$AnimationFrame$Time(tagger));\n};\nvar _elm_lang$animation_frame$AnimationFrame$subMap = F2(\n\tfunction (func, sub) {\n\t\tvar _p11 = sub;\n\t\tif (_p11.ctor === 'Time') {\n\t\t\treturn _elm_lang$animation_frame$AnimationFrame$Time(\n\t\t\t\tfunction (_p12) {\n\t\t\t\t\treturn func(\n\t\t\t\t\t\t_p11._0(_p12));\n\t\t\t\t});\n\t\t} else {\n\t\t\treturn _elm_lang$animation_frame$AnimationFrame$Diff(\n\t\t\t\tfunction (_p13) {\n\t\t\t\t\treturn func(\n\t\t\t\t\t\t_p11._0(_p13));\n\t\t\t\t});\n\t\t}\n\t});\n_elm_lang$core$Native_Platform.effectManagers['AnimationFrame'] = {pkg: 'elm-lang/animation-frame', init: _elm_lang$animation_frame$AnimationFrame$init, onEffects: _elm_lang$animation_frame$AnimationFrame$onEffects, onSelfMsg: _elm_lang$animation_frame$AnimationFrame$onSelfMsg, tag: 'sub', subMap: _elm_lang$animation_frame$AnimationFrame$subMap};\n\nvar _elm_lang$core$Color$fmod = F2(\n\tfunction (f, n) {\n\t\tvar integer = _elm_lang$core$Basics$floor(f);\n\t\treturn (_elm_lang$core$Basics$toFloat(\n\t\t\tA2(_elm_lang$core$Basics_ops['%'], integer, n)) + f) - _elm_lang$core$Basics$toFloat(integer);\n\t});\nvar _elm_lang$core$Color$rgbToHsl = F3(\n\tfunction (red, green, blue) {\n\t\tvar b = _elm_lang$core$Basics$toFloat(blue) / 255;\n\t\tvar g = _elm_lang$core$Basics$toFloat(green) / 255;\n\t\tvar r = _elm_lang$core$Basics$toFloat(red) / 255;\n\t\tvar cMax = A2(\n\t\t\t_elm_lang$core$Basics$max,\n\t\t\tA2(_elm_lang$core$Basics$max, r, g),\n\t\t\tb);\n\t\tvar cMin = A2(\n\t\t\t_elm_lang$core$Basics$min,\n\t\t\tA2(_elm_lang$core$Basics$min, r, g),\n\t\t\tb);\n\t\tvar c = cMax - cMin;\n\t\tvar lightness = (cMax + cMin) / 2;\n\t\tvar saturation = _elm_lang$core$Native_Utils.eq(lightness, 0) ? 0 : (c / (1 - _elm_lang$core$Basics$abs((2 * lightness) - 1)));\n\t\tvar hue = _elm_lang$core$Basics$degrees(60) * (_elm_lang$core$Native_Utils.eq(cMax, r) ? A2(_elm_lang$core$Color$fmod, (g - b) / c, 6) : (_elm_lang$core$Native_Utils.eq(cMax, g) ? (((b - r) / c) + 2) : (((r - g) / c) + 4)));\n\t\treturn {ctor: '_Tuple3', _0: hue, _1: saturation, _2: lightness};\n\t});\nvar _elm_lang$core$Color$hslToRgb = F3(\n\tfunction (hue, saturation, lightness) {\n\t\tvar normHue = hue / _elm_lang$core$Basics$degrees(60);\n\t\tvar chroma = (1 - _elm_lang$core$Basics$abs((2 * lightness) - 1)) * saturation;\n\t\tvar x = chroma * (1 - _elm_lang$core$Basics$abs(\n\t\t\tA2(_elm_lang$core$Color$fmod, normHue, 2) - 1));\n\t\tvar _p0 = (_elm_lang$core$Native_Utils.cmp(normHue, 0) < 0) ? {ctor: '_Tuple3', _0: 0, _1: 0, _2: 0} : ((_elm_lang$core$Native_Utils.cmp(normHue, 1) < 0) ? {ctor: '_Tuple3', _0: chroma, _1: x, _2: 0} : ((_elm_lang$core$Native_Utils.cmp(normHue, 2) < 0) ? {ctor: '_Tuple3', _0: x, _1: chroma, _2: 0} : ((_elm_lang$core$Native_Utils.cmp(normHue, 3) < 0) ? {ctor: '_Tuple3', _0: 0, _1: chroma, _2: x} : ((_elm_lang$core$Native_Utils.cmp(normHue, 4) < 0) ? {ctor: '_Tuple3', _0: 0, _1: x, _2: chroma} : ((_elm_lang$core$Native_Utils.cmp(normHue, 5) < 0) ? {ctor: '_Tuple3', _0: x, _1: 0, _2: chroma} : ((_elm_lang$core$Native_Utils.cmp(normHue, 6) < 0) ? {ctor: '_Tuple3', _0: chroma, _1: 0, _2: x} : {ctor: '_Tuple3', _0: 0, _1: 0, _2: 0}))))));\n\t\tvar r = _p0._0;\n\t\tvar g = _p0._1;\n\t\tvar b = _p0._2;\n\t\tvar m = lightness - (chroma / 2);\n\t\treturn {ctor: '_Tuple3', _0: r + m, _1: g + m, _2: b + m};\n\t});\nvar _elm_lang$core$Color$toRgb = function (color) {\n\tvar _p1 = color;\n\tif (_p1.ctor === 'RGBA') {\n\t\treturn {red: _p1._0, green: _p1._1, blue: _p1._2, alpha: _p1._3};\n\t} else {\n\t\tvar _p2 = A3(_elm_lang$core$Color$hslToRgb, _p1._0, _p1._1, _p1._2);\n\t\tvar r = _p2._0;\n\t\tvar g = _p2._1;\n\t\tvar b = _p2._2;\n\t\treturn {\n\t\t\tred: _elm_lang$core$Basics$round(255 * r),\n\t\t\tgreen: _elm_lang$core$Basics$round(255 * g),\n\t\t\tblue: _elm_lang$core$Basics$round(255 * b),\n\t\t\talpha: _p1._3\n\t\t};\n\t}\n};\nvar _elm_lang$core$Color$toHsl = function (color) {\n\tvar _p3 = color;\n\tif (_p3.ctor === 'HSLA') {\n\t\treturn {hue: _p3._0, saturation: _p3._1, lightness: _p3._2, alpha: _p3._3};\n\t} else {\n\t\tvar _p4 = A3(_elm_lang$core$Color$rgbToHsl, _p3._0, _p3._1, _p3._2);\n\t\tvar h = _p4._0;\n\t\tvar s = _p4._1;\n\t\tvar l = _p4._2;\n\t\treturn {hue: h, saturation: s, lightness: l, alpha: _p3._3};\n\t}\n};\nvar _elm_lang$core$Color$HSLA = F4(\n\tfunction (a, b, c, d) {\n\t\treturn {ctor: 'HSLA', _0: a, _1: b, _2: c, _3: d};\n\t});\nvar _elm_lang$core$Color$hsla = F4(\n\tfunction (hue, saturation, lightness, alpha) {\n\t\treturn A4(\n\t\t\t_elm_lang$core$Color$HSLA,\n\t\t\thue - _elm_lang$core$Basics$turns(\n\t\t\t\t_elm_lang$core$Basics$toFloat(\n\t\t\t\t\t_elm_lang$core$Basics$floor(hue / (2 * _elm_lang$core$Basics$pi)))),\n\t\t\tsaturation,\n\t\t\tlightness,\n\t\t\talpha);\n\t});\nvar _elm_lang$core$Color$hsl = F3(\n\tfunction (hue, saturation, lightness) {\n\t\treturn A4(_elm_lang$core$Color$hsla, hue, saturation, lightness, 1);\n\t});\nvar _elm_lang$core$Color$complement = function (color) {\n\tvar _p5 = color;\n\tif (_p5.ctor === 'HSLA') {\n\t\treturn A4(\n\t\t\t_elm_lang$core$Color$hsla,\n\t\t\t_p5._0 + _elm_lang$core$Basics$degrees(180),\n\t\t\t_p5._1,\n\t\t\t_p5._2,\n\t\t\t_p5._3);\n\t} else {\n\t\tvar _p6 = A3(_elm_lang$core$Color$rgbToHsl, _p5._0, _p5._1, _p5._2);\n\t\tvar h = _p6._0;\n\t\tvar s = _p6._1;\n\t\tvar l = _p6._2;\n\t\treturn A4(\n\t\t\t_elm_lang$core$Color$hsla,\n\t\t\th + _elm_lang$core$Basics$degrees(180),\n\t\t\ts,\n\t\t\tl,\n\t\t\t_p5._3);\n\t}\n};\nvar _elm_lang$core$Color$grayscale = function (p) {\n\treturn A4(_elm_lang$core$Color$HSLA, 0, 0, 1 - p, 1);\n};\nvar _elm_lang$core$Color$greyscale = function (p) {\n\treturn A4(_elm_lang$core$Color$HSLA, 0, 0, 1 - p, 1);\n};\nvar _elm_lang$core$Color$RGBA = F4(\n\tfunction (a, b, c, d) {\n\t\treturn {ctor: 'RGBA', _0: a, _1: b, _2: c, _3: d};\n\t});\nvar _elm_lang$core$Color$rgba = _elm_lang$core$Color$RGBA;\nvar _elm_lang$core$Color$rgb = F3(\n\tfunction (r, g, b) {\n\t\treturn A4(_elm_lang$core$Color$RGBA, r, g, b, 1);\n\t});\nvar _elm_lang$core$Color$lightRed = A4(_elm_lang$core$Color$RGBA, 239, 41, 41, 1);\nvar _elm_lang$core$Color$red = A4(_elm_lang$core$Color$RGBA, 204, 0, 0, 1);\nvar _elm_lang$core$Color$darkRed = A4(_elm_lang$core$Color$RGBA, 164, 0, 0, 1);\nvar _elm_lang$core$Color$lightOrange = A4(_elm_lang$core$Color$RGBA, 252, 175, 62, 1);\nvar _elm_lang$core$Color$orange = A4(_elm_lang$core$Color$RGBA, 245, 121, 0, 1);\nvar _elm_lang$core$Color$darkOrange = A4(_elm_lang$core$Color$RGBA, 206, 92, 0, 1);\nvar _elm_lang$core$Color$lightYellow = A4(_elm_lang$core$Color$RGBA, 255, 233, 79, 1);\nvar _elm_lang$core$Color$yellow = A4(_elm_lang$core$Color$RGBA, 237, 212, 0, 1);\nvar _elm_lang$core$Color$darkYellow = A4(_elm_lang$core$Color$RGBA, 196, 160, 0, 1);\nvar _elm_lang$core$Color$lightGreen = A4(_elm_lang$core$Color$RGBA, 138, 226, 52, 1);\nvar _elm_lang$core$Color$green = A4(_elm_lang$core$Color$RGBA, 115, 210, 22, 1);\nvar _elm_lang$core$Color$darkGreen = A4(_elm_lang$core$Color$RGBA, 78, 154, 6, 1);\nvar _elm_lang$core$Color$lightBlue = A4(_elm_lang$core$Color$RGBA, 114, 159, 207, 1);\nvar _elm_lang$core$Color$blue = A4(_elm_lang$core$Color$RGBA, 52, 101, 164, 1);\nvar _elm_lang$core$Color$darkBlue = A4(_elm_lang$core$Color$RGBA, 32, 74, 135, 1);\nvar _elm_lang$core$Color$lightPurple = A4(_elm_lang$core$Color$RGBA, 173, 127, 168, 1);\nvar _elm_lang$core$Color$purple = A4(_elm_lang$core$Color$RGBA, 117, 80, 123, 1);\nvar _elm_lang$core$Color$darkPurple = A4(_elm_lang$core$Color$RGBA, 92, 53, 102, 1);\nvar _elm_lang$core$Color$lightBrown = A4(_elm_lang$core$Color$RGBA, 233, 185, 110, 1);\nvar _elm_lang$core$Color$brown = A4(_elm_lang$core$Color$RGBA, 193, 125, 17, 1);\nvar _elm_lang$core$Color$darkBrown = A4(_elm_lang$core$Color$RGBA, 143, 89, 2, 1);\nvar _elm_lang$core$Color$black = A4(_elm_lang$core$Color$RGBA, 0, 0, 0, 1);\nvar _elm_lang$core$Color$white = A4(_elm_lang$core$Color$RGBA, 255, 255, 255, 1);\nvar _elm_lang$core$Color$lightGrey = A4(_elm_lang$core$Color$RGBA, 238, 238, 236, 1);\nvar _elm_lang$core$Color$grey = A4(_elm_lang$core$Color$RGBA, 211, 215, 207, 1);\nvar _elm_lang$core$Color$darkGrey = A4(_elm_lang$core$Color$RGBA, 186, 189, 182, 1);\nvar _elm_lang$core$Color$lightGray = A4(_elm_lang$core$Color$RGBA, 238, 238, 236, 1);\nvar _elm_lang$core$Color$gray = A4(_elm_lang$core$Color$RGBA, 211, 215, 207, 1);\nvar _elm_lang$core$Color$darkGray = A4(_elm_lang$core$Color$RGBA, 186, 189, 182, 1);\nvar _elm_lang$core$Color$lightCharcoal = A4(_elm_lang$core$Color$RGBA, 136, 138, 133, 1);\nvar _elm_lang$core$Color$charcoal = A4(_elm_lang$core$Color$RGBA, 85, 87, 83, 1);\nvar _elm_lang$core$Color$darkCharcoal = A4(_elm_lang$core$Color$RGBA, 46, 52, 54, 1);\nvar _elm_lang$core$Color$Radial = F5(\n\tfunction (a, b, c, d, e) {\n\t\treturn {ctor: 'Radial', _0: a, _1: b, _2: c, _3: d, _4: e};\n\t});\nvar _elm_lang$core$Color$radial = _elm_lang$core$Color$Radial;\nvar _elm_lang$core$Color$Linear = F3(\n\tfunction (a, b, c) {\n\t\treturn {ctor: 'Linear', _0: a, _1: b, _2: c};\n\t});\nvar _elm_lang$core$Color$linear = _elm_lang$core$Color$Linear;\n\n//import Native.List //\n\nvar _elm_lang$core$Native_Array = function() {\n\n// A RRB-Tree has two distinct data types.\n// Leaf -> \"height\"  is always 0\n//         \"table\"   is an array of elements\n// Node -> \"height\"  is always greater than 0\n//         \"table\"   is an array of child nodes\n//         \"lengths\" is an array of accumulated lengths of the child nodes\n\n// M is the maximal table size. 32 seems fast. E is the allowed increase\n// of search steps when concatting to find an index. Lower values will\n// decrease balancing, but will increase search steps.\nvar M = 32;\nvar E = 2;\n\n// An empty array.\nvar empty = {\n\tctor: '_Array',\n\theight: 0,\n\ttable: []\n};\n\n\nfunction get(i, array)\n{\n\tif (i < 0 || i >= length(array))\n\t{\n\t\tthrow new Error(\n\t\t\t'Index ' + i + ' is out of range. Check the length of ' +\n\t\t\t'your array first or use getMaybe or getWithDefault.');\n\t}\n\treturn unsafeGet(i, array);\n}\n\n\nfunction unsafeGet(i, array)\n{\n\tfor (var x = array.height; x > 0; x--)\n\t{\n\t\tvar slot = i >> (x * 5);\n\t\twhile (array.lengths[slot] <= i)\n\t\t{\n\t\t\tslot++;\n\t\t}\n\t\tif (slot > 0)\n\t\t{\n\t\t\ti -= array.lengths[slot - 1];\n\t\t}\n\t\tarray = array.table[slot];\n\t}\n\treturn array.table[i];\n}\n\n\n// Sets the value at the index i. Only the nodes leading to i will get\n// copied and updated.\nfunction set(i, item, array)\n{\n\tif (i < 0 || length(array) <= i)\n\t{\n\t\treturn array;\n\t}\n\treturn unsafeSet(i, item, array);\n}\n\n\nfunction unsafeSet(i, item, array)\n{\n\tarray = nodeCopy(array);\n\n\tif (array.height === 0)\n\t{\n\t\tarray.table[i] = item;\n\t}\n\telse\n\t{\n\t\tvar slot = getSlot(i, array);\n\t\tif (slot > 0)\n\t\t{\n\t\t\ti -= array.lengths[slot - 1];\n\t\t}\n\t\tarray.table[slot] = unsafeSet(i, item, array.table[slot]);\n\t}\n\treturn array;\n}\n\n\nfunction initialize(len, f)\n{\n\tif (len <= 0)\n\t{\n\t\treturn empty;\n\t}\n\tvar h = Math.floor( Math.log(len) / Math.log(M) );\n\treturn initialize_(f, h, 0, len);\n}\n\nfunction initialize_(f, h, from, to)\n{\n\tif (h === 0)\n\t{\n\t\tvar table = new Array((to - from) % (M + 1));\n\t\tfor (var i = 0; i < table.length; i++)\n\t\t{\n\t\t  table[i] = f(from + i);\n\t\t}\n\t\treturn {\n\t\t\tctor: '_Array',\n\t\t\theight: 0,\n\t\t\ttable: table\n\t\t};\n\t}\n\n\tvar step = Math.pow(M, h);\n\tvar table = new Array(Math.ceil((to - from) / step));\n\tvar lengths = new Array(table.length);\n\tfor (var i = 0; i < table.length; i++)\n\t{\n\t\ttable[i] = initialize_(f, h - 1, from + (i * step), Math.min(from + ((i + 1) * step), to));\n\t\tlengths[i] = length(table[i]) + (i > 0 ? lengths[i-1] : 0);\n\t}\n\treturn {\n\t\tctor: '_Array',\n\t\theight: h,\n\t\ttable: table,\n\t\tlengths: lengths\n\t};\n}\n\nfunction fromList(list)\n{\n\tif (list.ctor === '[]')\n\t{\n\t\treturn empty;\n\t}\n\n\t// Allocate M sized blocks (table) and write list elements to it.\n\tvar table = new Array(M);\n\tvar nodes = [];\n\tvar i = 0;\n\n\twhile (list.ctor !== '[]')\n\t{\n\t\ttable[i] = list._0;\n\t\tlist = list._1;\n\t\ti++;\n\n\t\t// table is full, so we can push a leaf containing it into the\n\t\t// next node.\n\t\tif (i === M)\n\t\t{\n\t\t\tvar leaf = {\n\t\t\t\tctor: '_Array',\n\t\t\t\theight: 0,\n\t\t\t\ttable: table\n\t\t\t};\n\t\t\tfromListPush(leaf, nodes);\n\t\t\ttable = new Array(M);\n\t\t\ti = 0;\n\t\t}\n\t}\n\n\t// Maybe there is something left on the table.\n\tif (i > 0)\n\t{\n\t\tvar leaf = {\n\t\t\tctor: '_Array',\n\t\t\theight: 0,\n\t\t\ttable: table.splice(0, i)\n\t\t};\n\t\tfromListPush(leaf, nodes);\n\t}\n\n\t// Go through all of the nodes and eventually push them into higher nodes.\n\tfor (var h = 0; h < nodes.length - 1; h++)\n\t{\n\t\tif (nodes[h].table.length > 0)\n\t\t{\n\t\t\tfromListPush(nodes[h], nodes);\n\t\t}\n\t}\n\n\tvar head = nodes[nodes.length - 1];\n\tif (head.height > 0 && head.table.length === 1)\n\t{\n\t\treturn head.table[0];\n\t}\n\telse\n\t{\n\t\treturn head;\n\t}\n}\n\n// Push a node into a higher node as a child.\nfunction fromListPush(toPush, nodes)\n{\n\tvar h = toPush.height;\n\n\t// Maybe the node on this height does not exist.\n\tif (nodes.length === h)\n\t{\n\t\tvar node = {\n\t\t\tctor: '_Array',\n\t\t\theight: h + 1,\n\t\t\ttable: [],\n\t\t\tlengths: []\n\t\t};\n\t\tnodes.push(node);\n\t}\n\n\tnodes[h].table.push(toPush);\n\tvar len = length(toPush);\n\tif (nodes[h].lengths.length > 0)\n\t{\n\t\tlen += nodes[h].lengths[nodes[h].lengths.length - 1];\n\t}\n\tnodes[h].lengths.push(len);\n\n\tif (nodes[h].table.length === M)\n\t{\n\t\tfromListPush(nodes[h], nodes);\n\t\tnodes[h] = {\n\t\t\tctor: '_Array',\n\t\t\theight: h + 1,\n\t\t\ttable: [],\n\t\t\tlengths: []\n\t\t};\n\t}\n}\n\n// Pushes an item via push_ to the bottom right of a tree.\nfunction push(item, a)\n{\n\tvar pushed = push_(item, a);\n\tif (pushed !== null)\n\t{\n\t\treturn pushed;\n\t}\n\n\tvar newTree = create(item, a.height);\n\treturn siblise(a, newTree);\n}\n\n// Recursively tries to push an item to the bottom-right most\n// tree possible. If there is no space left for the item,\n// null will be returned.\nfunction push_(item, a)\n{\n\t// Handle resursion stop at leaf level.\n\tif (a.height === 0)\n\t{\n\t\tif (a.table.length < M)\n\t\t{\n\t\t\tvar newA = {\n\t\t\t\tctor: '_Array',\n\t\t\t\theight: 0,\n\t\t\t\ttable: a.table.slice()\n\t\t\t};\n\t\t\tnewA.table.push(item);\n\t\t\treturn newA;\n\t\t}\n\t\telse\n\t\t{\n\t\t  return null;\n\t\t}\n\t}\n\n\t// Recursively push\n\tvar pushed = push_(item, botRight(a));\n\n\t// There was space in the bottom right tree, so the slot will\n\t// be updated.\n\tif (pushed !== null)\n\t{\n\t\tvar newA = nodeCopy(a);\n\t\tnewA.table[newA.table.length - 1] = pushed;\n\t\tnewA.lengths[newA.lengths.length - 1]++;\n\t\treturn newA;\n\t}\n\n\t// When there was no space left, check if there is space left\n\t// for a new slot with a tree which contains only the item\n\t// at the bottom.\n\tif (a.table.length < M)\n\t{\n\t\tvar newSlot = create(item, a.height - 1);\n\t\tvar newA = nodeCopy(a);\n\t\tnewA.table.push(newSlot);\n\t\tnewA.lengths.push(newA.lengths[newA.lengths.length - 1] + length(newSlot));\n\t\treturn newA;\n\t}\n\telse\n\t{\n\t\treturn null;\n\t}\n}\n\n// Converts an array into a list of elements.\nfunction toList(a)\n{\n\treturn toList_(_elm_lang$core$Native_List.Nil, a);\n}\n\nfunction toList_(list, a)\n{\n\tfor (var i = a.table.length - 1; i >= 0; i--)\n\t{\n\t\tlist =\n\t\t\ta.height === 0\n\t\t\t\t? _elm_lang$core$Native_List.Cons(a.table[i], list)\n\t\t\t\t: toList_(list, a.table[i]);\n\t}\n\treturn list;\n}\n\n// Maps a function over the elements of an array.\nfunction map(f, a)\n{\n\tvar newA = {\n\t\tctor: '_Array',\n\t\theight: a.height,\n\t\ttable: new Array(a.table.length)\n\t};\n\tif (a.height > 0)\n\t{\n\t\tnewA.lengths = a.lengths;\n\t}\n\tfor (var i = 0; i < a.table.length; i++)\n\t{\n\t\tnewA.table[i] =\n\t\t\ta.height === 0\n\t\t\t\t? f(a.table[i])\n\t\t\t\t: map(f, a.table[i]);\n\t}\n\treturn newA;\n}\n\n// Maps a function over the elements with their index as first argument.\nfunction indexedMap(f, a)\n{\n\treturn indexedMap_(f, a, 0);\n}\n\nfunction indexedMap_(f, a, from)\n{\n\tvar newA = {\n\t\tctor: '_Array',\n\t\theight: a.height,\n\t\ttable: new Array(a.table.length)\n\t};\n\tif (a.height > 0)\n\t{\n\t\tnewA.lengths = a.lengths;\n\t}\n\tfor (var i = 0; i < a.table.length; i++)\n\t{\n\t\tnewA.table[i] =\n\t\t\ta.height === 0\n\t\t\t\t? A2(f, from + i, a.table[i])\n\t\t\t\t: indexedMap_(f, a.table[i], i == 0 ? from : from + a.lengths[i - 1]);\n\t}\n\treturn newA;\n}\n\nfunction foldl(f, b, a)\n{\n\tif (a.height === 0)\n\t{\n\t\tfor (var i = 0; i < a.table.length; i++)\n\t\t{\n\t\t\tb = A2(f, a.table[i], b);\n\t\t}\n\t}\n\telse\n\t{\n\t\tfor (var i = 0; i < a.table.length; i++)\n\t\t{\n\t\t\tb = foldl(f, b, a.table[i]);\n\t\t}\n\t}\n\treturn b;\n}\n\nfunction foldr(f, b, a)\n{\n\tif (a.height === 0)\n\t{\n\t\tfor (var i = a.table.length; i--; )\n\t\t{\n\t\t\tb = A2(f, a.table[i], b);\n\t\t}\n\t}\n\telse\n\t{\n\t\tfor (var i = a.table.length; i--; )\n\t\t{\n\t\t\tb = foldr(f, b, a.table[i]);\n\t\t}\n\t}\n\treturn b;\n}\n\n// TODO: currently, it slices the right, then the left. This can be\n// optimized.\nfunction slice(from, to, a)\n{\n\tif (from < 0)\n\t{\n\t\tfrom += length(a);\n\t}\n\tif (to < 0)\n\t{\n\t\tto += length(a);\n\t}\n\treturn sliceLeft(from, sliceRight(to, a));\n}\n\nfunction sliceRight(to, a)\n{\n\tif (to === length(a))\n\t{\n\t\treturn a;\n\t}\n\n\t// Handle leaf level.\n\tif (a.height === 0)\n\t{\n\t\tvar newA = { ctor:'_Array', height:0 };\n\t\tnewA.table = a.table.slice(0, to);\n\t\treturn newA;\n\t}\n\n\t// Slice the right recursively.\n\tvar right = getSlot(to, a);\n\tvar sliced = sliceRight(to - (right > 0 ? a.lengths[right - 1] : 0), a.table[right]);\n\n\t// Maybe the a node is not even needed, as sliced contains the whole slice.\n\tif (right === 0)\n\t{\n\t\treturn sliced;\n\t}\n\n\t// Create new node.\n\tvar newA = {\n\t\tctor: '_Array',\n\t\theight: a.height,\n\t\ttable: a.table.slice(0, right),\n\t\tlengths: a.lengths.slice(0, right)\n\t};\n\tif (sliced.table.length > 0)\n\t{\n\t\tnewA.table[right] = sliced;\n\t\tnewA.lengths[right] = length(sliced) + (right > 0 ? newA.lengths[right - 1] : 0);\n\t}\n\treturn newA;\n}\n\nfunction sliceLeft(from, a)\n{\n\tif (from === 0)\n\t{\n\t\treturn a;\n\t}\n\n\t// Handle leaf level.\n\tif (a.height === 0)\n\t{\n\t\tvar newA = { ctor:'_Array', height:0 };\n\t\tnewA.table = a.table.slice(from, a.table.length + 1);\n\t\treturn newA;\n\t}\n\n\t// Slice the left recursively.\n\tvar left = getSlot(from, a);\n\tvar sliced = sliceLeft(from - (left > 0 ? a.lengths[left - 1] : 0), a.table[left]);\n\n\t// Maybe the a node is not even needed, as sliced contains the whole slice.\n\tif (left === a.table.length - 1)\n\t{\n\t\treturn sliced;\n\t}\n\n\t// Create new node.\n\tvar newA = {\n\t\tctor: '_Array',\n\t\theight: a.height,\n\t\ttable: a.table.slice(left, a.table.length + 1),\n\t\tlengths: new Array(a.table.length - left)\n\t};\n\tnewA.table[0] = sliced;\n\tvar len = 0;\n\tfor (var i = 0; i < newA.table.length; i++)\n\t{\n\t\tlen += length(newA.table[i]);\n\t\tnewA.lengths[i] = len;\n\t}\n\n\treturn newA;\n}\n\n// Appends two trees.\nfunction append(a,b)\n{\n\tif (a.table.length === 0)\n\t{\n\t\treturn b;\n\t}\n\tif (b.table.length === 0)\n\t{\n\t\treturn a;\n\t}\n\n\tvar c = append_(a, b);\n\n\t// Check if both nodes can be crunshed together.\n\tif (c[0].table.length + c[1].table.length <= M)\n\t{\n\t\tif (c[0].table.length === 0)\n\t\t{\n\t\t\treturn c[1];\n\t\t}\n\t\tif (c[1].table.length === 0)\n\t\t{\n\t\t\treturn c[0];\n\t\t}\n\n\t\t// Adjust .table and .lengths\n\t\tc[0].table = c[0].table.concat(c[1].table);\n\t\tif (c[0].height > 0)\n\t\t{\n\t\t\tvar len = length(c[0]);\n\t\t\tfor (var i = 0; i < c[1].lengths.length; i++)\n\t\t\t{\n\t\t\t\tc[1].lengths[i] += len;\n\t\t\t}\n\t\t\tc[0].lengths = c[0].lengths.concat(c[1].lengths);\n\t\t}\n\n\t\treturn c[0];\n\t}\n\n\tif (c[0].height > 0)\n\t{\n\t\tvar toRemove = calcToRemove(a, b);\n\t\tif (toRemove > E)\n\t\t{\n\t\t\tc = shuffle(c[0], c[1], toRemove);\n\t\t}\n\t}\n\n\treturn siblise(c[0], c[1]);\n}\n\n// Returns an array of two nodes; right and left. One node _may_ be empty.\nfunction append_(a, b)\n{\n\tif (a.height === 0 && b.height === 0)\n\t{\n\t\treturn [a, b];\n\t}\n\n\tif (a.height !== 1 || b.height !== 1)\n\t{\n\t\tif (a.height === b.height)\n\t\t{\n\t\t\ta = nodeCopy(a);\n\t\t\tb = nodeCopy(b);\n\t\t\tvar appended = append_(botRight(a), botLeft(b));\n\n\t\t\tinsertRight(a, appended[1]);\n\t\t\tinsertLeft(b, appended[0]);\n\t\t}\n\t\telse if (a.height > b.height)\n\t\t{\n\t\t\ta = nodeCopy(a);\n\t\t\tvar appended = append_(botRight(a), b);\n\n\t\t\tinsertRight(a, appended[0]);\n\t\t\tb = parentise(appended[1], appended[1].height + 1);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tb = nodeCopy(b);\n\t\t\tvar appended = append_(a, botLeft(b));\n\n\t\t\tvar left = appended[0].table.length === 0 ? 0 : 1;\n\t\t\tvar right = left === 0 ? 1 : 0;\n\t\t\tinsertLeft(b, appended[left]);\n\t\t\ta = parentise(appended[right], appended[right].height + 1);\n\t\t}\n\t}\n\n\t// Check if balancing is needed and return based on that.\n\tif (a.table.length === 0 || b.table.length === 0)\n\t{\n\t\treturn [a, b];\n\t}\n\n\tvar toRemove = calcToRemove(a, b);\n\tif (toRemove <= E)\n\t{\n\t\treturn [a, b];\n\t}\n\treturn shuffle(a, b, toRemove);\n}\n\n// Helperfunctions for append_. Replaces a child node at the side of the parent.\nfunction insertRight(parent, node)\n{\n\tvar index = parent.table.length - 1;\n\tparent.table[index] = node;\n\tparent.lengths[index] = length(node);\n\tparent.lengths[index] += index > 0 ? parent.lengths[index - 1] : 0;\n}\n\nfunction insertLeft(parent, node)\n{\n\tif (node.table.length > 0)\n\t{\n\t\tparent.table[0] = node;\n\t\tparent.lengths[0] = length(node);\n\n\t\tvar len = length(parent.table[0]);\n\t\tfor (var i = 1; i < parent.lengths.length; i++)\n\t\t{\n\t\t\tlen += length(parent.table[i]);\n\t\t\tparent.lengths[i] = len;\n\t\t}\n\t}\n\telse\n\t{\n\t\tparent.table.shift();\n\t\tfor (var i = 1; i < parent.lengths.length; i++)\n\t\t{\n\t\t\tparent.lengths[i] = parent.lengths[i] - parent.lengths[0];\n\t\t}\n\t\tparent.lengths.shift();\n\t}\n}\n\n// Returns the extra search steps for E. Refer to the paper.\nfunction calcToRemove(a, b)\n{\n\tvar subLengths = 0;\n\tfor (var i = 0; i < a.table.length; i++)\n\t{\n\t\tsubLengths += a.table[i].table.length;\n\t}\n\tfor (var i = 0; i < b.table.length; i++)\n\t{\n\t\tsubLengths += b.table[i].table.length;\n\t}\n\n\tvar toRemove = a.table.length + b.table.length;\n\treturn toRemove - (Math.floor((subLengths - 1) / M) + 1);\n}\n\n// get2, set2 and saveSlot are helpers for accessing elements over two arrays.\nfunction get2(a, b, index)\n{\n\treturn index < a.length\n\t\t? a[index]\n\t\t: b[index - a.length];\n}\n\nfunction set2(a, b, index, value)\n{\n\tif (index < a.length)\n\t{\n\t\ta[index] = value;\n\t}\n\telse\n\t{\n\t\tb[index - a.length] = value;\n\t}\n}\n\nfunction saveSlot(a, b, index, slot)\n{\n\tset2(a.table, b.table, index, slot);\n\n\tvar l = (index === 0 || index === a.lengths.length)\n\t\t? 0\n\t\t: get2(a.lengths, a.lengths, index - 1);\n\n\tset2(a.lengths, b.lengths, index, l + length(slot));\n}\n\n// Creates a node or leaf with a given length at their arrays for perfomance.\n// Is only used by shuffle.\nfunction createNode(h, length)\n{\n\tif (length < 0)\n\t{\n\t\tlength = 0;\n\t}\n\tvar a = {\n\t\tctor: '_Array',\n\t\theight: h,\n\t\ttable: new Array(length)\n\t};\n\tif (h > 0)\n\t{\n\t\ta.lengths = new Array(length);\n\t}\n\treturn a;\n}\n\n// Returns an array of two balanced nodes.\nfunction shuffle(a, b, toRemove)\n{\n\tvar newA = createNode(a.height, Math.min(M, a.table.length + b.table.length - toRemove));\n\tvar newB = createNode(a.height, newA.table.length - (a.table.length + b.table.length - toRemove));\n\n\t// Skip the slots with size M. More precise: copy the slot references\n\t// to the new node\n\tvar read = 0;\n\twhile (get2(a.table, b.table, read).table.length % M === 0)\n\t{\n\t\tset2(newA.table, newB.table, read, get2(a.table, b.table, read));\n\t\tset2(newA.lengths, newB.lengths, read, get2(a.lengths, b.lengths, read));\n\t\tread++;\n\t}\n\n\t// Pulling items from left to right, caching in a slot before writing\n\t// it into the new nodes.\n\tvar write = read;\n\tvar slot = new createNode(a.height - 1, 0);\n\tvar from = 0;\n\n\t// If the current slot is still containing data, then there will be at\n\t// least one more write, so we do not break this loop yet.\n\twhile (read - write - (slot.table.length > 0 ? 1 : 0) < toRemove)\n\t{\n\t\t// Find out the max possible items for copying.\n\t\tvar source = get2(a.table, b.table, read);\n\t\tvar to = Math.min(M - slot.table.length, source.table.length);\n\n\t\t// Copy and adjust size table.\n\t\tslot.table = slot.table.concat(source.table.slice(from, to));\n\t\tif (slot.height > 0)\n\t\t{\n\t\t\tvar len = slot.lengths.length;\n\t\t\tfor (var i = len; i < len + to - from; i++)\n\t\t\t{\n\t\t\t\tslot.lengths[i] = length(slot.table[i]);\n\t\t\t\tslot.lengths[i] += (i > 0 ? slot.lengths[i - 1] : 0);\n\t\t\t}\n\t\t}\n\n\t\tfrom += to;\n\n\t\t// Only proceed to next slots[i] if the current one was\n\t\t// fully copied.\n\t\tif (source.table.length <= to)\n\t\t{\n\t\t\tread++; from = 0;\n\t\t}\n\n\t\t// Only create a new slot if the current one is filled up.\n\t\tif (slot.table.length === M)\n\t\t{\n\t\t\tsaveSlot(newA, newB, write, slot);\n\t\t\tslot = createNode(a.height - 1, 0);\n\t\t\twrite++;\n\t\t}\n\t}\n\n\t// Cleanup after the loop. Copy the last slot into the new nodes.\n\tif (slot.table.length > 0)\n\t{\n\t\tsaveSlot(newA, newB, write, slot);\n\t\twrite++;\n\t}\n\n\t// Shift the untouched slots to the left\n\twhile (read < a.table.length + b.table.length )\n\t{\n\t\tsaveSlot(newA, newB, write, get2(a.table, b.table, read));\n\t\tread++;\n\t\twrite++;\n\t}\n\n\treturn [newA, newB];\n}\n\n// Navigation functions\nfunction botRight(a)\n{\n\treturn a.table[a.table.length - 1];\n}\nfunction botLeft(a)\n{\n\treturn a.table[0];\n}\n\n// Copies a node for updating. Note that you should not use this if\n// only updating only one of \"table\" or \"lengths\" for performance reasons.\nfunction nodeCopy(a)\n{\n\tvar newA = {\n\t\tctor: '_Array',\n\t\theight: a.height,\n\t\ttable: a.table.slice()\n\t};\n\tif (a.height > 0)\n\t{\n\t\tnewA.lengths = a.lengths.slice();\n\t}\n\treturn newA;\n}\n\n// Returns how many items are in the tree.\nfunction length(array)\n{\n\tif (array.height === 0)\n\t{\n\t\treturn array.table.length;\n\t}\n\telse\n\t{\n\t\treturn array.lengths[array.lengths.length - 1];\n\t}\n}\n\n// Calculates in which slot of \"table\" the item probably is, then\n// find the exact slot via forward searching in  \"lengths\". Returns the index.\nfunction getSlot(i, a)\n{\n\tvar slot = i >> (5 * a.height);\n\twhile (a.lengths[slot] <= i)\n\t{\n\t\tslot++;\n\t}\n\treturn slot;\n}\n\n// Recursively creates a tree with a given height containing\n// only the given item.\nfunction create(item, h)\n{\n\tif (h === 0)\n\t{\n\t\treturn {\n\t\t\tctor: '_Array',\n\t\t\theight: 0,\n\t\t\ttable: [item]\n\t\t};\n\t}\n\treturn {\n\t\tctor: '_Array',\n\t\theight: h,\n\t\ttable: [create(item, h - 1)],\n\t\tlengths: [1]\n\t};\n}\n\n// Recursively creates a tree that contains the given tree.\nfunction parentise(tree, h)\n{\n\tif (h === tree.height)\n\t{\n\t\treturn tree;\n\t}\n\n\treturn {\n\t\tctor: '_Array',\n\t\theight: h,\n\t\ttable: [parentise(tree, h - 1)],\n\t\tlengths: [length(tree)]\n\t};\n}\n\n// Emphasizes blood brotherhood beneath two trees.\nfunction siblise(a, b)\n{\n\treturn {\n\t\tctor: '_Array',\n\t\theight: a.height + 1,\n\t\ttable: [a, b],\n\t\tlengths: [length(a), length(a) + length(b)]\n\t};\n}\n\nfunction toJSArray(a)\n{\n\tvar jsArray = new Array(length(a));\n\ttoJSArray_(jsArray, 0, a);\n\treturn jsArray;\n}\n\nfunction toJSArray_(jsArray, i, a)\n{\n\tfor (var t = 0; t < a.table.length; t++)\n\t{\n\t\tif (a.height === 0)\n\t\t{\n\t\t\tjsArray[i + t] = a.table[t];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar inc = t === 0 ? 0 : a.lengths[t - 1];\n\t\t\ttoJSArray_(jsArray, i + inc, a.table[t]);\n\t\t}\n\t}\n}\n\nfunction fromJSArray(jsArray)\n{\n\tif (jsArray.length === 0)\n\t{\n\t\treturn empty;\n\t}\n\tvar h = Math.floor(Math.log(jsArray.length) / Math.log(M));\n\treturn fromJSArray_(jsArray, h, 0, jsArray.length);\n}\n\nfunction fromJSArray_(jsArray, h, from, to)\n{\n\tif (h === 0)\n\t{\n\t\treturn {\n\t\t\tctor: '_Array',\n\t\t\theight: 0,\n\t\t\ttable: jsArray.slice(from, to)\n\t\t};\n\t}\n\n\tvar step = Math.pow(M, h);\n\tvar table = new Array(Math.ceil((to - from) / step));\n\tvar lengths = new Array(table.length);\n\tfor (var i = 0; i < table.length; i++)\n\t{\n\t\ttable[i] = fromJSArray_(jsArray, h - 1, from + (i * step), Math.min(from + ((i + 1) * step), to));\n\t\tlengths[i] = length(table[i]) + (i > 0 ? lengths[i - 1] : 0);\n\t}\n\treturn {\n\t\tctor: '_Array',\n\t\theight: h,\n\t\ttable: table,\n\t\tlengths: lengths\n\t};\n}\n\nreturn {\n\tempty: empty,\n\tfromList: fromList,\n\ttoList: toList,\n\tinitialize: F2(initialize),\n\tappend: F2(append),\n\tpush: F2(push),\n\tslice: F3(slice),\n\tget: F2(get),\n\tset: F3(set),\n\tmap: F2(map),\n\tindexedMap: F2(indexedMap),\n\tfoldl: F3(foldl),\n\tfoldr: F3(foldr),\n\tlength: length,\n\n\ttoJSArray: toJSArray,\n\tfromJSArray: fromJSArray\n};\n\n}();\nvar _elm_lang$core$Array$append = _elm_lang$core$Native_Array.append;\nvar _elm_lang$core$Array$length = _elm_lang$core$Native_Array.length;\nvar _elm_lang$core$Array$isEmpty = function (array) {\n\treturn _elm_lang$core$Native_Utils.eq(\n\t\t_elm_lang$core$Array$length(array),\n\t\t0);\n};\nvar _elm_lang$core$Array$slice = _elm_lang$core$Native_Array.slice;\nvar _elm_lang$core$Array$set = _elm_lang$core$Native_Array.set;\nvar _elm_lang$core$Array$get = F2(\n\tfunction (i, array) {\n\t\treturn ((_elm_lang$core$Native_Utils.cmp(0, i) < 1) && (_elm_lang$core$Native_Utils.cmp(\n\t\t\ti,\n\t\t\t_elm_lang$core$Native_Array.length(array)) < 0)) ? _elm_lang$core$Maybe$Just(\n\t\t\tA2(_elm_lang$core$Native_Array.get, i, array)) : _elm_lang$core$Maybe$Nothing;\n\t});\nvar _elm_lang$core$Array$push = _elm_lang$core$Native_Array.push;\nvar _elm_lang$core$Array$empty = _elm_lang$core$Native_Array.empty;\nvar _elm_lang$core$Array$filter = F2(\n\tfunction (isOkay, arr) {\n\t\tvar update = F2(\n\t\t\tfunction (x, xs) {\n\t\t\t\treturn isOkay(x) ? A2(_elm_lang$core$Native_Array.push, x, xs) : xs;\n\t\t\t});\n\t\treturn A3(_elm_lang$core$Native_Array.foldl, update, _elm_lang$core$Native_Array.empty, arr);\n\t});\nvar _elm_lang$core$Array$foldr = _elm_lang$core$Native_Array.foldr;\nvar _elm_lang$core$Array$foldl = _elm_lang$core$Native_Array.foldl;\nvar _elm_lang$core$Array$indexedMap = _elm_lang$core$Native_Array.indexedMap;\nvar _elm_lang$core$Array$map = _elm_lang$core$Native_Array.map;\nvar _elm_lang$core$Array$toIndexedList = function (array) {\n\treturn A3(\n\t\t_elm_lang$core$List$map2,\n\t\tF2(\n\t\t\tfunction (v0, v1) {\n\t\t\t\treturn {ctor: '_Tuple2', _0: v0, _1: v1};\n\t\t\t}),\n\t\tA2(\n\t\t\t_elm_lang$core$List$range,\n\t\t\t0,\n\t\t\t_elm_lang$core$Native_Array.length(array) - 1),\n\t\t_elm_lang$core$Native_Array.toList(array));\n};\nvar _elm_lang$core$Array$toList = _elm_lang$core$Native_Array.toList;\nvar _elm_lang$core$Array$fromList = _elm_lang$core$Native_Array.fromList;\nvar _elm_lang$core$Array$initialize = _elm_lang$core$Native_Array.initialize;\nvar _elm_lang$core$Array$repeat = F2(\n\tfunction (n, e) {\n\t\treturn A2(\n\t\t\t_elm_lang$core$Array$initialize,\n\t\t\tn,\n\t\t\t_elm_lang$core$Basics$always(e));\n\t});\nvar _elm_lang$core$Array$Array = {ctor: 'Array'};\n\n//import Maybe, Native.Array, Native.List, Native.Utils, Result //\n\nvar _elm_lang$core$Native_Json = function() {\n\n\n// CORE DECODERS\n\nfunction succeed(msg)\n{\n\treturn {\n\t\tctor: '<decoder>',\n\t\ttag: 'succeed',\n\t\tmsg: msg\n\t};\n}\n\nfunction fail(msg)\n{\n\treturn {\n\t\tctor: '<decoder>',\n\t\ttag: 'fail',\n\t\tmsg: msg\n\t};\n}\n\nfunction decodePrimitive(tag)\n{\n\treturn {\n\t\tctor: '<decoder>',\n\t\ttag: tag\n\t};\n}\n\nfunction decodeContainer(tag, decoder)\n{\n\treturn {\n\t\tctor: '<decoder>',\n\t\ttag: tag,\n\t\tdecoder: decoder\n\t};\n}\n\nfunction decodeNull(value)\n{\n\treturn {\n\t\tctor: '<decoder>',\n\t\ttag: 'null',\n\t\tvalue: value\n\t};\n}\n\nfunction decodeField(field, decoder)\n{\n\treturn {\n\t\tctor: '<decoder>',\n\t\ttag: 'field',\n\t\tfield: field,\n\t\tdecoder: decoder\n\t};\n}\n\nfunction decodeIndex(index, decoder)\n{\n\treturn {\n\t\tctor: '<decoder>',\n\t\ttag: 'index',\n\t\tindex: index,\n\t\tdecoder: decoder\n\t};\n}\n\nfunction decodeKeyValuePairs(decoder)\n{\n\treturn {\n\t\tctor: '<decoder>',\n\t\ttag: 'key-value',\n\t\tdecoder: decoder\n\t};\n}\n\nfunction mapMany(f, decoders)\n{\n\treturn {\n\t\tctor: '<decoder>',\n\t\ttag: 'map-many',\n\t\tfunc: f,\n\t\tdecoders: decoders\n\t};\n}\n\nfunction andThen(callback, decoder)\n{\n\treturn {\n\t\tctor: '<decoder>',\n\t\ttag: 'andThen',\n\t\tdecoder: decoder,\n\t\tcallback: callback\n\t};\n}\n\nfunction oneOf(decoders)\n{\n\treturn {\n\t\tctor: '<decoder>',\n\t\ttag: 'oneOf',\n\t\tdecoders: decoders\n\t};\n}\n\n\n// DECODING OBJECTS\n\nfunction map1(f, d1)\n{\n\treturn mapMany(f, [d1]);\n}\n\nfunction map2(f, d1, d2)\n{\n\treturn mapMany(f, [d1, d2]);\n}\n\nfunction map3(f, d1, d2, d3)\n{\n\treturn mapMany(f, [d1, d2, d3]);\n}\n\nfunction map4(f, d1, d2, d3, d4)\n{\n\treturn mapMany(f, [d1, d2, d3, d4]);\n}\n\nfunction map5(f, d1, d2, d3, d4, d5)\n{\n\treturn mapMany(f, [d1, d2, d3, d4, d5]);\n}\n\nfunction map6(f, d1, d2, d3, d4, d5, d6)\n{\n\treturn mapMany(f, [d1, d2, d3, d4, d5, d6]);\n}\n\nfunction map7(f, d1, d2, d3, d4, d5, d6, d7)\n{\n\treturn mapMany(f, [d1, d2, d3, d4, d5, d6, d7]);\n}\n\nfunction map8(f, d1, d2, d3, d4, d5, d6, d7, d8)\n{\n\treturn mapMany(f, [d1, d2, d3, d4, d5, d6, d7, d8]);\n}\n\n\n// DECODE HELPERS\n\nfunction ok(value)\n{\n\treturn { tag: 'ok', value: value };\n}\n\nfunction badPrimitive(type, value)\n{\n\treturn { tag: 'primitive', type: type, value: value };\n}\n\nfunction badIndex(index, nestedProblems)\n{\n\treturn { tag: 'index', index: index, rest: nestedProblems };\n}\n\nfunction badField(field, nestedProblems)\n{\n\treturn { tag: 'field', field: field, rest: nestedProblems };\n}\n\nfunction badIndex(index, nestedProblems)\n{\n\treturn { tag: 'index', index: index, rest: nestedProblems };\n}\n\nfunction badOneOf(problems)\n{\n\treturn { tag: 'oneOf', problems: problems };\n}\n\nfunction bad(msg)\n{\n\treturn { tag: 'fail', msg: msg };\n}\n\nfunction badToString(problem)\n{\n\tvar context = '_';\n\twhile (problem)\n\t{\n\t\tswitch (problem.tag)\n\t\t{\n\t\t\tcase 'primitive':\n\t\t\t\treturn 'Expecting ' + problem.type\n\t\t\t\t\t+ (context === '_' ? '' : ' at ' + context)\n\t\t\t\t\t+ ' but instead got: ' + jsToString(problem.value);\n\n\t\t\tcase 'index':\n\t\t\t\tcontext += '[' + problem.index + ']';\n\t\t\t\tproblem = problem.rest;\n\t\t\t\tbreak;\n\n\t\t\tcase 'field':\n\t\t\t\tcontext += '.' + problem.field;\n\t\t\t\tproblem = problem.rest;\n\t\t\t\tbreak;\n\n\t\t\tcase 'oneOf':\n\t\t\t\tvar problems = problem.problems;\n\t\t\t\tfor (var i = 0; i < problems.length; i++)\n\t\t\t\t{\n\t\t\t\t\tproblems[i] = badToString(problems[i]);\n\t\t\t\t}\n\t\t\t\treturn 'I ran into the following problems'\n\t\t\t\t\t+ (context === '_' ? '' : ' at ' + context)\n\t\t\t\t\t+ ':\\n\\n' + problems.join('\\n');\n\n\t\t\tcase 'fail':\n\t\t\t\treturn 'I ran into a `fail` decoder'\n\t\t\t\t\t+ (context === '_' ? '' : ' at ' + context)\n\t\t\t\t\t+ ': ' + problem.msg;\n\t\t}\n\t}\n}\n\nfunction jsToString(value)\n{\n\treturn value === undefined\n\t\t? 'undefined'\n\t\t: JSON.stringify(value);\n}\n\n\n// DECODE\n\nfunction runOnString(decoder, string)\n{\n\tvar json;\n\ttry\n\t{\n\t\tjson = JSON.parse(string);\n\t}\n\tcatch (e)\n\t{\n\t\treturn _elm_lang$core$Result$Err('Given an invalid JSON: ' + e.message);\n\t}\n\treturn run(decoder, json);\n}\n\nfunction run(decoder, value)\n{\n\tvar result = runHelp(decoder, value);\n\treturn (result.tag === 'ok')\n\t\t? _elm_lang$core$Result$Ok(result.value)\n\t\t: _elm_lang$core$Result$Err(badToString(result));\n}\n\nfunction runHelp(decoder, value)\n{\n\tswitch (decoder.tag)\n\t{\n\t\tcase 'bool':\n\t\t\treturn (typeof value === 'boolean')\n\t\t\t\t? ok(value)\n\t\t\t\t: badPrimitive('a Bool', value);\n\n\t\tcase 'int':\n\t\t\tif (typeof value !== 'number') {\n\t\t\t\treturn badPrimitive('an Int', value);\n\t\t\t}\n\n\t\t\tif (-2147483647 < value && value < 2147483647 && (value | 0) === value) {\n\t\t\t\treturn ok(value);\n\t\t\t}\n\n\t\t\tif (isFinite(value) && !(value % 1)) {\n\t\t\t\treturn ok(value);\n\t\t\t}\n\n\t\t\treturn badPrimitive('an Int', value);\n\n\t\tcase 'float':\n\t\t\treturn (typeof value === 'number')\n\t\t\t\t? ok(value)\n\t\t\t\t: badPrimitive('a Float', value);\n\n\t\tcase 'string':\n\t\t\treturn (typeof value === 'string')\n\t\t\t\t? ok(value)\n\t\t\t\t: (value instanceof String)\n\t\t\t\t\t? ok(value + '')\n\t\t\t\t\t: badPrimitive('a String', value);\n\n\t\tcase 'null':\n\t\t\treturn (value === null)\n\t\t\t\t? ok(decoder.value)\n\t\t\t\t: badPrimitive('null', value);\n\n\t\tcase 'value':\n\t\t\treturn ok(value);\n\n\t\tcase 'list':\n\t\t\tif (!(value instanceof Array))\n\t\t\t{\n\t\t\t\treturn badPrimitive('a List', value);\n\t\t\t}\n\n\t\t\tvar list = _elm_lang$core$Native_List.Nil;\n\t\t\tfor (var i = value.length; i--; )\n\t\t\t{\n\t\t\t\tvar result = runHelp(decoder.decoder, value[i]);\n\t\t\t\tif (result.tag !== 'ok')\n\t\t\t\t{\n\t\t\t\t\treturn badIndex(i, result)\n\t\t\t\t}\n\t\t\t\tlist = _elm_lang$core$Native_List.Cons(result.value, list);\n\t\t\t}\n\t\t\treturn ok(list);\n\n\t\tcase 'array':\n\t\t\tif (!(value instanceof Array))\n\t\t\t{\n\t\t\t\treturn badPrimitive('an Array', value);\n\t\t\t}\n\n\t\t\tvar len = value.length;\n\t\t\tvar array = new Array(len);\n\t\t\tfor (var i = len; i--; )\n\t\t\t{\n\t\t\t\tvar result = runHelp(decoder.decoder, value[i]);\n\t\t\t\tif (result.tag !== 'ok')\n\t\t\t\t{\n\t\t\t\t\treturn badIndex(i, result);\n\t\t\t\t}\n\t\t\t\tarray[i] = result.value;\n\t\t\t}\n\t\t\treturn ok(_elm_lang$core$Native_Array.fromJSArray(array));\n\n\t\tcase 'maybe':\n\t\t\tvar result = runHelp(decoder.decoder, value);\n\t\t\treturn (result.tag === 'ok')\n\t\t\t\t? ok(_elm_lang$core$Maybe$Just(result.value))\n\t\t\t\t: ok(_elm_lang$core$Maybe$Nothing);\n\n\t\tcase 'field':\n\t\t\tvar field = decoder.field;\n\t\t\tif (typeof value !== 'object' || value === null || !(field in value))\n\t\t\t{\n\t\t\t\treturn badPrimitive('an object with a field named `' + field + '`', value);\n\t\t\t}\n\n\t\t\tvar result = runHelp(decoder.decoder, value[field]);\n\t\t\treturn (result.tag === 'ok') ? result : badField(field, result);\n\n\t\tcase 'index':\n\t\t\tvar index = decoder.index;\n\t\t\tif (!(value instanceof Array))\n\t\t\t{\n\t\t\t\treturn badPrimitive('an array', value);\n\t\t\t}\n\t\t\tif (index >= value.length)\n\t\t\t{\n\t\t\t\treturn badPrimitive('a longer array. Need index ' + index + ' but there are only ' + value.length + ' entries', value);\n\t\t\t}\n\n\t\t\tvar result = runHelp(decoder.decoder, value[index]);\n\t\t\treturn (result.tag === 'ok') ? result : badIndex(index, result);\n\n\t\tcase 'key-value':\n\t\t\tif (typeof value !== 'object' || value === null || value instanceof Array)\n\t\t\t{\n\t\t\t\treturn badPrimitive('an object', value);\n\t\t\t}\n\n\t\t\tvar keyValuePairs = _elm_lang$core$Native_List.Nil;\n\t\t\tfor (var key in value)\n\t\t\t{\n\t\t\t\tvar result = runHelp(decoder.decoder, value[key]);\n\t\t\t\tif (result.tag !== 'ok')\n\t\t\t\t{\n\t\t\t\t\treturn badField(key, result);\n\t\t\t\t}\n\t\t\t\tvar pair = _elm_lang$core$Native_Utils.Tuple2(key, result.value);\n\t\t\t\tkeyValuePairs = _elm_lang$core$Native_List.Cons(pair, keyValuePairs);\n\t\t\t}\n\t\t\treturn ok(keyValuePairs);\n\n\t\tcase 'map-many':\n\t\t\tvar answer = decoder.func;\n\t\t\tvar decoders = decoder.decoders;\n\t\t\tfor (var i = 0; i < decoders.length; i++)\n\t\t\t{\n\t\t\t\tvar result = runHelp(decoders[i], value);\n\t\t\t\tif (result.tag !== 'ok')\n\t\t\t\t{\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t\tanswer = answer(result.value);\n\t\t\t}\n\t\t\treturn ok(answer);\n\n\t\tcase 'andThen':\n\t\t\tvar result = runHelp(decoder.decoder, value);\n\t\t\treturn (result.tag !== 'ok')\n\t\t\t\t? result\n\t\t\t\t: runHelp(decoder.callback(result.value), value);\n\n\t\tcase 'oneOf':\n\t\t\tvar errors = [];\n\t\t\tvar temp = decoder.decoders;\n\t\t\twhile (temp.ctor !== '[]')\n\t\t\t{\n\t\t\t\tvar result = runHelp(temp._0, value);\n\n\t\t\t\tif (result.tag === 'ok')\n\t\t\t\t{\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\terrors.push(result);\n\n\t\t\t\ttemp = temp._1;\n\t\t\t}\n\t\t\treturn badOneOf(errors);\n\n\t\tcase 'fail':\n\t\t\treturn bad(decoder.msg);\n\n\t\tcase 'succeed':\n\t\t\treturn ok(decoder.msg);\n\t}\n}\n\n\n// EQUALITY\n\nfunction equality(a, b)\n{\n\tif (a === b)\n\t{\n\t\treturn true;\n\t}\n\n\tif (a.tag !== b.tag)\n\t{\n\t\treturn false;\n\t}\n\n\tswitch (a.tag)\n\t{\n\t\tcase 'succeed':\n\t\tcase 'fail':\n\t\t\treturn a.msg === b.msg;\n\n\t\tcase 'bool':\n\t\tcase 'int':\n\t\tcase 'float':\n\t\tcase 'string':\n\t\tcase 'value':\n\t\t\treturn true;\n\n\t\tcase 'null':\n\t\t\treturn a.value === b.value;\n\n\t\tcase 'list':\n\t\tcase 'array':\n\t\tcase 'maybe':\n\t\tcase 'key-value':\n\t\t\treturn equality(a.decoder, b.decoder);\n\n\t\tcase 'field':\n\t\t\treturn a.field === b.field && equality(a.decoder, b.decoder);\n\n\t\tcase 'index':\n\t\t\treturn a.index === b.index && equality(a.decoder, b.decoder);\n\n\t\tcase 'map-many':\n\t\t\tif (a.func !== b.func)\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn listEquality(a.decoders, b.decoders);\n\n\t\tcase 'andThen':\n\t\t\treturn a.callback === b.callback && equality(a.decoder, b.decoder);\n\n\t\tcase 'oneOf':\n\t\t\treturn listEquality(a.decoders, b.decoders);\n\t}\n}\n\nfunction listEquality(aDecoders, bDecoders)\n{\n\tvar len = aDecoders.length;\n\tif (len !== bDecoders.length)\n\t{\n\t\treturn false;\n\t}\n\tfor (var i = 0; i < len; i++)\n\t{\n\t\tif (!equality(aDecoders[i], bDecoders[i]))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n\n// ENCODE\n\nfunction encode(indentLevel, value)\n{\n\treturn JSON.stringify(value, null, indentLevel);\n}\n\nfunction identity(value)\n{\n\treturn value;\n}\n\nfunction encodeObject(keyValuePairs)\n{\n\tvar obj = {};\n\twhile (keyValuePairs.ctor !== '[]')\n\t{\n\t\tvar pair = keyValuePairs._0;\n\t\tobj[pair._0] = pair._1;\n\t\tkeyValuePairs = keyValuePairs._1;\n\t}\n\treturn obj;\n}\n\nreturn {\n\tencode: F2(encode),\n\trunOnString: F2(runOnString),\n\trun: F2(run),\n\n\tdecodeNull: decodeNull,\n\tdecodePrimitive: decodePrimitive,\n\tdecodeContainer: F2(decodeContainer),\n\n\tdecodeField: F2(decodeField),\n\tdecodeIndex: F2(decodeIndex),\n\n\tmap1: F2(map1),\n\tmap2: F3(map2),\n\tmap3: F4(map3),\n\tmap4: F5(map4),\n\tmap5: F6(map5),\n\tmap6: F7(map6),\n\tmap7: F8(map7),\n\tmap8: F9(map8),\n\tdecodeKeyValuePairs: decodeKeyValuePairs,\n\n\tandThen: F2(andThen),\n\tfail: fail,\n\tsucceed: succeed,\n\toneOf: oneOf,\n\n\tidentity: identity,\n\tencodeNull: null,\n\tencodeArray: _elm_lang$core$Native_Array.toJSArray,\n\tencodeList: _elm_lang$core$Native_List.toArray,\n\tencodeObject: encodeObject,\n\n\tequality: equality\n};\n\n}();\n\nvar _elm_lang$core$Json_Encode$list = _elm_lang$core$Native_Json.encodeList;\nvar _elm_lang$core$Json_Encode$array = _elm_lang$core$Native_Json.encodeArray;\nvar _elm_lang$core$Json_Encode$object = _elm_lang$core$Native_Json.encodeObject;\nvar _elm_lang$core$Json_Encode$null = _elm_lang$core$Native_Json.encodeNull;\nvar _elm_lang$core$Json_Encode$bool = _elm_lang$core$Native_Json.identity;\nvar _elm_lang$core$Json_Encode$float = _elm_lang$core$Native_Json.identity;\nvar _elm_lang$core$Json_Encode$int = _elm_lang$core$Native_Json.identity;\nvar _elm_lang$core$Json_Encode$string = _elm_lang$core$Native_Json.identity;\nvar _elm_lang$core$Json_Encode$encode = _elm_lang$core$Native_Json.encode;\nvar _elm_lang$core$Json_Encode$Value = {ctor: 'Value'};\n\nvar _elm_lang$core$Json_Decode$null = _elm_lang$core$Native_Json.decodeNull;\nvar _elm_lang$core$Json_Decode$value = _elm_lang$core$Native_Json.decodePrimitive('value');\nvar _elm_lang$core$Json_Decode$andThen = _elm_lang$core$Native_Json.andThen;\nvar _elm_lang$core$Json_Decode$fail = _elm_lang$core$Native_Json.fail;\nvar _elm_lang$core$Json_Decode$succeed = _elm_lang$core$Native_Json.succeed;\nvar _elm_lang$core$Json_Decode$lazy = function (thunk) {\n\treturn A2(\n\t\t_elm_lang$core$Json_Decode$andThen,\n\t\tthunk,\n\t\t_elm_lang$core$Json_Decode$succeed(\n\t\t\t{ctor: '_Tuple0'}));\n};\nvar _elm_lang$core$Json_Decode$decodeValue = _elm_lang$core$Native_Json.run;\nvar _elm_lang$core$Json_Decode$decodeString = _elm_lang$core$Native_Json.runOnString;\nvar _elm_lang$core$Json_Decode$map8 = _elm_lang$core$Native_Json.map8;\nvar _elm_lang$core$Json_Decode$map7 = _elm_lang$core$Native_Json.map7;\nvar _elm_lang$core$Json_Decode$map6 = _elm_lang$core$Native_Json.map6;\nvar _elm_lang$core$Json_Decode$map5 = _elm_lang$core$Native_Json.map5;\nvar _elm_lang$core$Json_Decode$map4 = _elm_lang$core$Native_Json.map4;\nvar _elm_lang$core$Json_Decode$map3 = _elm_lang$core$Native_Json.map3;\nvar _elm_lang$core$Json_Decode$map2 = _elm_lang$core$Native_Json.map2;\nvar _elm_lang$core$Json_Decode$map = _elm_lang$core$Native_Json.map1;\nvar _elm_lang$core$Json_Decode$oneOf = _elm_lang$core$Native_Json.oneOf;\nvar _elm_lang$core$Json_Decode$maybe = function (decoder) {\n\treturn A2(_elm_lang$core$Native_Json.decodeContainer, 'maybe', decoder);\n};\nvar _elm_lang$core$Json_Decode$index = _elm_lang$core$Native_Json.decodeIndex;\nvar _elm_lang$core$Json_Decode$field = _elm_lang$core$Native_Json.decodeField;\nvar _elm_lang$core$Json_Decode$at = F2(\n\tfunction (fields, decoder) {\n\t\treturn A3(_elm_lang$core$List$foldr, _elm_lang$core$Json_Decode$field, decoder, fields);\n\t});\nvar _elm_lang$core$Json_Decode$keyValuePairs = _elm_lang$core$Native_Json.decodeKeyValuePairs;\nvar _elm_lang$core$Json_Decode$dict = function (decoder) {\n\treturn A2(\n\t\t_elm_lang$core$Json_Decode$map,\n\t\t_elm_lang$core$Dict$fromList,\n\t\t_elm_lang$core$Json_Decode$keyValuePairs(decoder));\n};\nvar _elm_lang$core$Json_Decode$array = function (decoder) {\n\treturn A2(_elm_lang$core$Native_Json.decodeContainer, 'array', decoder);\n};\nvar _elm_lang$core$Json_Decode$list = function (decoder) {\n\treturn A2(_elm_lang$core$Native_Json.decodeContainer, 'list', decoder);\n};\nvar _elm_lang$core$Json_Decode$nullable = function (decoder) {\n\treturn _elm_lang$core$Json_Decode$oneOf(\n\t\t{\n\t\t\tctor: '::',\n\t\t\t_0: _elm_lang$core$Json_Decode$null(_elm_lang$core$Maybe$Nothing),\n\t\t\t_1: {\n\t\t\t\tctor: '::',\n\t\t\t\t_0: A2(_elm_lang$core$Json_Decode$map, _elm_lang$core$Maybe$Just, decoder),\n\t\t\t\t_1: {ctor: '[]'}\n\t\t\t}\n\t\t});\n};\nvar _elm_lang$core$Json_Decode$float = _elm_lang$core$Native_Json.decodePrimitive('float');\nvar _elm_lang$core$Json_Decode$int = _elm_lang$core$Native_Json.decodePrimitive('int');\nvar _elm_lang$core$Json_Decode$bool = _elm_lang$core$Native_Json.decodePrimitive('bool');\nvar _elm_lang$core$Json_Decode$string = _elm_lang$core$Native_Json.decodePrimitive('string');\nvar _elm_lang$core$Json_Decode$Decoder = {ctor: 'Decoder'};\n\nvar _elm_lang$virtual_dom$VirtualDom_Debug$wrap;\nvar _elm_lang$virtual_dom$VirtualDom_Debug$wrapWithFlags;\n\nvar _elm_lang$virtual_dom$Native_VirtualDom = function() {\n\nvar STYLE_KEY = 'STYLE';\nvar EVENT_KEY = 'EVENT';\nvar ATTR_KEY = 'ATTR';\nvar ATTR_NS_KEY = 'ATTR_NS';\n\nvar localDoc = typeof document !== 'undefined' ? document : {};\n\n\n////////////  VIRTUAL DOM NODES  ////////////\n\n\nfunction text(string)\n{\n\treturn {\n\t\ttype: 'text',\n\t\ttext: string\n\t};\n}\n\n\nfunction node(tag)\n{\n\treturn F2(function(factList, kidList) {\n\t\treturn nodeHelp(tag, factList, kidList);\n\t});\n}\n\n\nfunction nodeHelp(tag, factList, kidList)\n{\n\tvar organized = organizeFacts(factList);\n\tvar namespace = organized.namespace;\n\tvar facts = organized.facts;\n\n\tvar children = [];\n\tvar descendantsCount = 0;\n\twhile (kidList.ctor !== '[]')\n\t{\n\t\tvar kid = kidList._0;\n\t\tdescendantsCount += (kid.descendantsCount || 0);\n\t\tchildren.push(kid);\n\t\tkidList = kidList._1;\n\t}\n\tdescendantsCount += children.length;\n\n\treturn {\n\t\ttype: 'node',\n\t\ttag: tag,\n\t\tfacts: facts,\n\t\tchildren: children,\n\t\tnamespace: namespace,\n\t\tdescendantsCount: descendantsCount\n\t};\n}\n\n\nfunction keyedNode(tag, factList, kidList)\n{\n\tvar organized = organizeFacts(factList);\n\tvar namespace = organized.namespace;\n\tvar facts = organized.facts;\n\n\tvar children = [];\n\tvar descendantsCount = 0;\n\twhile (kidList.ctor !== '[]')\n\t{\n\t\tvar kid = kidList._0;\n\t\tdescendantsCount += (kid._1.descendantsCount || 0);\n\t\tchildren.push(kid);\n\t\tkidList = kidList._1;\n\t}\n\tdescendantsCount += children.length;\n\n\treturn {\n\t\ttype: 'keyed-node',\n\t\ttag: tag,\n\t\tfacts: facts,\n\t\tchildren: children,\n\t\tnamespace: namespace,\n\t\tdescendantsCount: descendantsCount\n\t};\n}\n\n\nfunction custom(factList, model, impl)\n{\n\tvar facts = organizeFacts(factList).facts;\n\n\treturn {\n\t\ttype: 'custom',\n\t\tfacts: facts,\n\t\tmodel: model,\n\t\timpl: impl\n\t};\n}\n\n\nfunction map(tagger, node)\n{\n\treturn {\n\t\ttype: 'tagger',\n\t\ttagger: tagger,\n\t\tnode: node,\n\t\tdescendantsCount: 1 + (node.descendantsCount || 0)\n\t};\n}\n\n\nfunction thunk(func, args, thunk)\n{\n\treturn {\n\t\ttype: 'thunk',\n\t\tfunc: func,\n\t\targs: args,\n\t\tthunk: thunk,\n\t\tnode: undefined\n\t};\n}\n\nfunction lazy(fn, a)\n{\n\treturn thunk(fn, [a], function() {\n\t\treturn fn(a);\n\t});\n}\n\nfunction lazy2(fn, a, b)\n{\n\treturn thunk(fn, [a,b], function() {\n\t\treturn A2(fn, a, b);\n\t});\n}\n\nfunction lazy3(fn, a, b, c)\n{\n\treturn thunk(fn, [a,b,c], function() {\n\t\treturn A3(fn, a, b, c);\n\t});\n}\n\n\n\n// FACTS\n\n\nfunction organizeFacts(factList)\n{\n\tvar namespace, facts = {};\n\n\twhile (factList.ctor !== '[]')\n\t{\n\t\tvar entry = factList._0;\n\t\tvar key = entry.key;\n\n\t\tif (key === ATTR_KEY || key === ATTR_NS_KEY || key === EVENT_KEY)\n\t\t{\n\t\t\tvar subFacts = facts[key] || {};\n\t\t\tsubFacts[entry.realKey] = entry.value;\n\t\t\tfacts[key] = subFacts;\n\t\t}\n\t\telse if (key === STYLE_KEY)\n\t\t{\n\t\t\tvar styles = facts[key] || {};\n\t\t\tvar styleList = entry.value;\n\t\t\twhile (styleList.ctor !== '[]')\n\t\t\t{\n\t\t\t\tvar style = styleList._0;\n\t\t\t\tstyles[style._0] = style._1;\n\t\t\t\tstyleList = styleList._1;\n\t\t\t}\n\t\t\tfacts[key] = styles;\n\t\t}\n\t\telse if (key === 'namespace')\n\t\t{\n\t\t\tnamespace = entry.value;\n\t\t}\n\t\telse if (key === 'className')\n\t\t{\n\t\t\tvar classes = facts[key];\n\t\t\tfacts[key] = typeof classes === 'undefined'\n\t\t\t\t? entry.value\n\t\t\t\t: classes + ' ' + entry.value;\n\t\t}\n \t\telse\n\t\t{\n\t\t\tfacts[key] = entry.value;\n\t\t}\n\t\tfactList = factList._1;\n\t}\n\n\treturn {\n\t\tfacts: facts,\n\t\tnamespace: namespace\n\t};\n}\n\n\n\n////////////  PROPERTIES AND ATTRIBUTES  ////////////\n\n\nfunction style(value)\n{\n\treturn {\n\t\tkey: STYLE_KEY,\n\t\tvalue: value\n\t};\n}\n\n\nfunction property(key, value)\n{\n\treturn {\n\t\tkey: key,\n\t\tvalue: value\n\t};\n}\n\n\nfunction attribute(key, value)\n{\n\treturn {\n\t\tkey: ATTR_KEY,\n\t\trealKey: key,\n\t\tvalue: value\n\t};\n}\n\n\nfunction attributeNS(namespace, key, value)\n{\n\treturn {\n\t\tkey: ATTR_NS_KEY,\n\t\trealKey: key,\n\t\tvalue: {\n\t\t\tvalue: value,\n\t\t\tnamespace: namespace\n\t\t}\n\t};\n}\n\n\nfunction on(name, options, decoder)\n{\n\treturn {\n\t\tkey: EVENT_KEY,\n\t\trealKey: name,\n\t\tvalue: {\n\t\t\toptions: options,\n\t\t\tdecoder: decoder\n\t\t}\n\t};\n}\n\n\nfunction equalEvents(a, b)\n{\n\tif (a.options !== b.options)\n\t{\n\t\tif (a.options.stopPropagation !== b.options.stopPropagation || a.options.preventDefault !== b.options.preventDefault)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn _elm_lang$core$Native_Json.equality(a.decoder, b.decoder);\n}\n\n\nfunction mapProperty(func, property)\n{\n\tif (property.key !== EVENT_KEY)\n\t{\n\t\treturn property;\n\t}\n\treturn on(\n\t\tproperty.realKey,\n\t\tproperty.value.options,\n\t\tA2(_elm_lang$core$Json_Decode$map, func, property.value.decoder)\n\t);\n}\n\n\n////////////  RENDER  ////////////\n\n\nfunction render(vNode, eventNode)\n{\n\tswitch (vNode.type)\n\t{\n\t\tcase 'thunk':\n\t\t\tif (!vNode.node)\n\t\t\t{\n\t\t\t\tvNode.node = vNode.thunk();\n\t\t\t}\n\t\t\treturn render(vNode.node, eventNode);\n\n\t\tcase 'tagger':\n\t\t\tvar subNode = vNode.node;\n\t\t\tvar tagger = vNode.tagger;\n\n\t\t\twhile (subNode.type === 'tagger')\n\t\t\t{\n\t\t\t\ttypeof tagger !== 'object'\n\t\t\t\t\t? tagger = [tagger, subNode.tagger]\n\t\t\t\t\t: tagger.push(subNode.tagger);\n\n\t\t\t\tsubNode = subNode.node;\n\t\t\t}\n\n\t\t\tvar subEventRoot = { tagger: tagger, parent: eventNode };\n\t\t\tvar domNode = render(subNode, subEventRoot);\n\t\t\tdomNode.elm_event_node_ref = subEventRoot;\n\t\t\treturn domNode;\n\n\t\tcase 'text':\n\t\t\treturn localDoc.createTextNode(vNode.text);\n\n\t\tcase 'node':\n\t\t\tvar domNode = vNode.namespace\n\t\t\t\t? localDoc.createElementNS(vNode.namespace, vNode.tag)\n\t\t\t\t: localDoc.createElement(vNode.tag);\n\n\t\t\tapplyFacts(domNode, eventNode, vNode.facts);\n\n\t\t\tvar children = vNode.children;\n\n\t\t\tfor (var i = 0; i < children.length; i++)\n\t\t\t{\n\t\t\t\tdomNode.appendChild(render(children[i], eventNode));\n\t\t\t}\n\n\t\t\treturn domNode;\n\n\t\tcase 'keyed-node':\n\t\t\tvar domNode = vNode.namespace\n\t\t\t\t? localDoc.createElementNS(vNode.namespace, vNode.tag)\n\t\t\t\t: localDoc.createElement(vNode.tag);\n\n\t\t\tapplyFacts(domNode, eventNode, vNode.facts);\n\n\t\t\tvar children = vNode.children;\n\n\t\t\tfor (var i = 0; i < children.length; i++)\n\t\t\t{\n\t\t\t\tdomNode.appendChild(render(children[i]._1, eventNode));\n\t\t\t}\n\n\t\t\treturn domNode;\n\n\t\tcase 'custom':\n\t\t\tvar domNode = vNode.impl.render(vNode.model);\n\t\t\tapplyFacts(domNode, eventNode, vNode.facts);\n\t\t\treturn domNode;\n\t}\n}\n\n\n\n////////////  APPLY FACTS  ////////////\n\n\nfunction applyFacts(domNode, eventNode, facts)\n{\n\tfor (var key in facts)\n\t{\n\t\tvar value = facts[key];\n\n\t\tswitch (key)\n\t\t{\n\t\t\tcase STYLE_KEY:\n\t\t\t\tapplyStyles(domNode, value);\n\t\t\t\tbreak;\n\n\t\t\tcase EVENT_KEY:\n\t\t\t\tapplyEvents(domNode, eventNode, value);\n\t\t\t\tbreak;\n\n\t\t\tcase ATTR_KEY:\n\t\t\t\tapplyAttrs(domNode, value);\n\t\t\t\tbreak;\n\n\t\t\tcase ATTR_NS_KEY:\n\t\t\t\tapplyAttrsNS(domNode, value);\n\t\t\t\tbreak;\n\n\t\t\tcase 'value':\n\t\t\t\tif (domNode[key] !== value)\n\t\t\t\t{\n\t\t\t\t\tdomNode[key] = value;\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tdomNode[key] = value;\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n\nfunction applyStyles(domNode, styles)\n{\n\tvar domNodeStyle = domNode.style;\n\n\tfor (var key in styles)\n\t{\n\t\tdomNodeStyle[key] = styles[key];\n\t}\n}\n\nfunction applyEvents(domNode, eventNode, events)\n{\n\tvar allHandlers = domNode.elm_handlers || {};\n\n\tfor (var key in events)\n\t{\n\t\tvar handler = allHandlers[key];\n\t\tvar value = events[key];\n\n\t\tif (typeof value === 'undefined')\n\t\t{\n\t\t\tdomNode.removeEventListener(key, handler);\n\t\t\tallHandlers[key] = undefined;\n\t\t}\n\t\telse if (typeof handler === 'undefined')\n\t\t{\n\t\t\tvar handler = makeEventHandler(eventNode, value);\n\t\t\tdomNode.addEventListener(key, handler);\n\t\t\tallHandlers[key] = handler;\n\t\t}\n\t\telse\n\t\t{\n\t\t\thandler.info = value;\n\t\t}\n\t}\n\n\tdomNode.elm_handlers = allHandlers;\n}\n\nfunction makeEventHandler(eventNode, info)\n{\n\tfunction eventHandler(event)\n\t{\n\t\tvar info = eventHandler.info;\n\n\t\tvar value = A2(_elm_lang$core$Native_Json.run, info.decoder, event);\n\n\t\tif (value.ctor === 'Ok')\n\t\t{\n\t\t\tvar options = info.options;\n\t\t\tif (options.stopPropagation)\n\t\t\t{\n\t\t\t\tevent.stopPropagation();\n\t\t\t}\n\t\t\tif (options.preventDefault)\n\t\t\t{\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\n\t\t\tvar message = value._0;\n\n\t\t\tvar currentEventNode = eventNode;\n\t\t\twhile (currentEventNode)\n\t\t\t{\n\t\t\t\tvar tagger = currentEventNode.tagger;\n\t\t\t\tif (typeof tagger === 'function')\n\t\t\t\t{\n\t\t\t\t\tmessage = tagger(message);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tfor (var i = tagger.length; i--; )\n\t\t\t\t\t{\n\t\t\t\t\t\tmessage = tagger[i](message);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcurrentEventNode = currentEventNode.parent;\n\t\t\t}\n\t\t}\n\t};\n\n\teventHandler.info = info;\n\n\treturn eventHandler;\n}\n\nfunction applyAttrs(domNode, attrs)\n{\n\tfor (var key in attrs)\n\t{\n\t\tvar value = attrs[key];\n\t\tif (typeof value === 'undefined')\n\t\t{\n\t\t\tdomNode.removeAttribute(key);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdomNode.setAttribute(key, value);\n\t\t}\n\t}\n}\n\nfunction applyAttrsNS(domNode, nsAttrs)\n{\n\tfor (var key in nsAttrs)\n\t{\n\t\tvar pair = nsAttrs[key];\n\t\tvar namespace = pair.namespace;\n\t\tvar value = pair.value;\n\n\t\tif (typeof value === 'undefined')\n\t\t{\n\t\t\tdomNode.removeAttributeNS(namespace, key);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdomNode.setAttributeNS(namespace, key, value);\n\t\t}\n\t}\n}\n\n\n\n////////////  DIFF  ////////////\n\n\nfunction diff(a, b)\n{\n\tvar patches = [];\n\tdiffHelp(a, b, patches, 0);\n\treturn patches;\n}\n\n\nfunction makePatch(type, index, data)\n{\n\treturn {\n\t\tindex: index,\n\t\ttype: type,\n\t\tdata: data,\n\t\tdomNode: undefined,\n\t\teventNode: undefined\n\t};\n}\n\n\nfunction diffHelp(a, b, patches, index)\n{\n\tif (a === b)\n\t{\n\t\treturn;\n\t}\n\n\tvar aType = a.type;\n\tvar bType = b.type;\n\n\t// Bail if you run into different types of nodes. Implies that the\n\t// structure has changed significantly and it's not worth a diff.\n\tif (aType !== bType)\n\t{\n\t\tpatches.push(makePatch('p-redraw', index, b));\n\t\treturn;\n\t}\n\n\t// Now we know that both nodes are the same type.\n\tswitch (bType)\n\t{\n\t\tcase 'thunk':\n\t\t\tvar aArgs = a.args;\n\t\t\tvar bArgs = b.args;\n\t\t\tvar i = aArgs.length;\n\t\t\tvar same = a.func === b.func && i === bArgs.length;\n\t\t\twhile (same && i--)\n\t\t\t{\n\t\t\t\tsame = aArgs[i] === bArgs[i];\n\t\t\t}\n\t\t\tif (same)\n\t\t\t{\n\t\t\t\tb.node = a.node;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tb.node = b.thunk();\n\t\t\tvar subPatches = [];\n\t\t\tdiffHelp(a.node, b.node, subPatches, 0);\n\t\t\tif (subPatches.length > 0)\n\t\t\t{\n\t\t\t\tpatches.push(makePatch('p-thunk', index, subPatches));\n\t\t\t}\n\t\t\treturn;\n\n\t\tcase 'tagger':\n\t\t\t// gather nested taggers\n\t\t\tvar aTaggers = a.tagger;\n\t\t\tvar bTaggers = b.tagger;\n\t\t\tvar nesting = false;\n\n\t\t\tvar aSubNode = a.node;\n\t\t\twhile (aSubNode.type === 'tagger')\n\t\t\t{\n\t\t\t\tnesting = true;\n\n\t\t\t\ttypeof aTaggers !== 'object'\n\t\t\t\t\t? aTaggers = [aTaggers, aSubNode.tagger]\n\t\t\t\t\t: aTaggers.push(aSubNode.tagger);\n\n\t\t\t\taSubNode = aSubNode.node;\n\t\t\t}\n\n\t\t\tvar bSubNode = b.node;\n\t\t\twhile (bSubNode.type === 'tagger')\n\t\t\t{\n\t\t\t\tnesting = true;\n\n\t\t\t\ttypeof bTaggers !== 'object'\n\t\t\t\t\t? bTaggers = [bTaggers, bSubNode.tagger]\n\t\t\t\t\t: bTaggers.push(bSubNode.tagger);\n\n\t\t\t\tbSubNode = bSubNode.node;\n\t\t\t}\n\n\t\t\t// Just bail if different numbers of taggers. This implies the\n\t\t\t// structure of the virtual DOM has changed.\n\t\t\tif (nesting && aTaggers.length !== bTaggers.length)\n\t\t\t{\n\t\t\t\tpatches.push(makePatch('p-redraw', index, b));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// check if taggers are \"the same\"\n\t\t\tif (nesting ? !pairwiseRefEqual(aTaggers, bTaggers) : aTaggers !== bTaggers)\n\t\t\t{\n\t\t\t\tpatches.push(makePatch('p-tagger', index, bTaggers));\n\t\t\t}\n\n\t\t\t// diff everything below the taggers\n\t\t\tdiffHelp(aSubNode, bSubNode, patches, index + 1);\n\t\t\treturn;\n\n\t\tcase 'text':\n\t\t\tif (a.text !== b.text)\n\t\t\t{\n\t\t\t\tpatches.push(makePatch('p-text', index, b.text));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\treturn;\n\n\t\tcase 'node':\n\t\t\t// Bail if obvious indicators have changed. Implies more serious\n\t\t\t// structural changes such that it's not worth it to diff.\n\t\t\tif (a.tag !== b.tag || a.namespace !== b.namespace)\n\t\t\t{\n\t\t\t\tpatches.push(makePatch('p-redraw', index, b));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar factsDiff = diffFacts(a.facts, b.facts);\n\n\t\t\tif (typeof factsDiff !== 'undefined')\n\t\t\t{\n\t\t\t\tpatches.push(makePatch('p-facts', index, factsDiff));\n\t\t\t}\n\n\t\t\tdiffChildren(a, b, patches, index);\n\t\t\treturn;\n\n\t\tcase 'keyed-node':\n\t\t\t// Bail if obvious indicators have changed. Implies more serious\n\t\t\t// structural changes such that it's not worth it to diff.\n\t\t\tif (a.tag !== b.tag || a.namespace !== b.namespace)\n\t\t\t{\n\t\t\t\tpatches.push(makePatch('p-redraw', index, b));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar factsDiff = diffFacts(a.facts, b.facts);\n\n\t\t\tif (typeof factsDiff !== 'undefined')\n\t\t\t{\n\t\t\t\tpatches.push(makePatch('p-facts', index, factsDiff));\n\t\t\t}\n\n\t\t\tdiffKeyedChildren(a, b, patches, index);\n\t\t\treturn;\n\n\t\tcase 'custom':\n\t\t\tif (a.impl !== b.impl)\n\t\t\t{\n\t\t\t\tpatches.push(makePatch('p-redraw', index, b));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar factsDiff = diffFacts(a.facts, b.facts);\n\t\t\tif (typeof factsDiff !== 'undefined')\n\t\t\t{\n\t\t\t\tpatches.push(makePatch('p-facts', index, factsDiff));\n\t\t\t}\n\n\t\t\tvar patch = b.impl.diff(a,b);\n\t\t\tif (patch)\n\t\t\t{\n\t\t\t\tpatches.push(makePatch('p-custom', index, patch));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\treturn;\n\t}\n}\n\n\n// assumes the incoming arrays are the same length\nfunction pairwiseRefEqual(as, bs)\n{\n\tfor (var i = 0; i < as.length; i++)\n\t{\n\t\tif (as[i] !== bs[i])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n\n// TODO Instead of creating a new diff object, it's possible to just test if\n// there *is* a diff. During the actual patch, do the diff again and make the\n// modifications directly. This way, there's no new allocations. Worth it?\nfunction diffFacts(a, b, category)\n{\n\tvar diff;\n\n\t// look for changes and removals\n\tfor (var aKey in a)\n\t{\n\t\tif (aKey === STYLE_KEY || aKey === EVENT_KEY || aKey === ATTR_KEY || aKey === ATTR_NS_KEY)\n\t\t{\n\t\t\tvar subDiff = diffFacts(a[aKey], b[aKey] || {}, aKey);\n\t\t\tif (subDiff)\n\t\t\t{\n\t\t\t\tdiff = diff || {};\n\t\t\t\tdiff[aKey] = subDiff;\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\n\t\t// remove if not in the new facts\n\t\tif (!(aKey in b))\n\t\t{\n\t\t\tdiff = diff || {};\n\t\t\tdiff[aKey] =\n\t\t\t\t(typeof category === 'undefined')\n\t\t\t\t\t? (typeof a[aKey] === 'string' ? '' : null)\n\t\t\t\t\t:\n\t\t\t\t(category === STYLE_KEY)\n\t\t\t\t\t? ''\n\t\t\t\t\t:\n\t\t\t\t(category === EVENT_KEY || category === ATTR_KEY)\n\t\t\t\t\t? undefined\n\t\t\t\t\t:\n\t\t\t\t{ namespace: a[aKey].namespace, value: undefined };\n\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar aValue = a[aKey];\n\t\tvar bValue = b[aKey];\n\n\t\t// reference equal, so don't worry about it\n\t\tif (aValue === bValue && aKey !== 'value'\n\t\t\t|| category === EVENT_KEY && equalEvents(aValue, bValue))\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\n\t\tdiff = diff || {};\n\t\tdiff[aKey] = bValue;\n\t}\n\n\t// add new stuff\n\tfor (var bKey in b)\n\t{\n\t\tif (!(bKey in a))\n\t\t{\n\t\t\tdiff = diff || {};\n\t\t\tdiff[bKey] = b[bKey];\n\t\t}\n\t}\n\n\treturn diff;\n}\n\n\nfunction diffChildren(aParent, bParent, patches, rootIndex)\n{\n\tvar aChildren = aParent.children;\n\tvar bChildren = bParent.children;\n\n\tvar aLen = aChildren.length;\n\tvar bLen = bChildren.length;\n\n\t// FIGURE OUT IF THERE ARE INSERTS OR REMOVALS\n\n\tif (aLen > bLen)\n\t{\n\t\tpatches.push(makePatch('p-remove-last', rootIndex, aLen - bLen));\n\t}\n\telse if (aLen < bLen)\n\t{\n\t\tpatches.push(makePatch('p-append', rootIndex, bChildren.slice(aLen)));\n\t}\n\n\t// PAIRWISE DIFF EVERYTHING ELSE\n\n\tvar index = rootIndex;\n\tvar minLen = aLen < bLen ? aLen : bLen;\n\tfor (var i = 0; i < minLen; i++)\n\t{\n\t\tindex++;\n\t\tvar aChild = aChildren[i];\n\t\tdiffHelp(aChild, bChildren[i], patches, index);\n\t\tindex += aChild.descendantsCount || 0;\n\t}\n}\n\n\n\n////////////  KEYED DIFF  ////////////\n\n\nfunction diffKeyedChildren(aParent, bParent, patches, rootIndex)\n{\n\tvar localPatches = [];\n\n\tvar changes = {}; // Dict String Entry\n\tvar inserts = []; // Array { index : Int, entry : Entry }\n\t// type Entry = { tag : String, vnode : VNode, index : Int, data : _ }\n\n\tvar aChildren = aParent.children;\n\tvar bChildren = bParent.children;\n\tvar aLen = aChildren.length;\n\tvar bLen = bChildren.length;\n\tvar aIndex = 0;\n\tvar bIndex = 0;\n\n\tvar index = rootIndex;\n\n\twhile (aIndex < aLen && bIndex < bLen)\n\t{\n\t\tvar a = aChildren[aIndex];\n\t\tvar b = bChildren[bIndex];\n\n\t\tvar aKey = a._0;\n\t\tvar bKey = b._0;\n\t\tvar aNode = a._1;\n\t\tvar bNode = b._1;\n\n\t\t// check if keys match\n\n\t\tif (aKey === bKey)\n\t\t{\n\t\t\tindex++;\n\t\t\tdiffHelp(aNode, bNode, localPatches, index);\n\t\t\tindex += aNode.descendantsCount || 0;\n\n\t\t\taIndex++;\n\t\t\tbIndex++;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// look ahead 1 to detect insertions and removals.\n\n\t\tvar aLookAhead = aIndex + 1 < aLen;\n\t\tvar bLookAhead = bIndex + 1 < bLen;\n\n\t\tif (aLookAhead)\n\t\t{\n\t\t\tvar aNext = aChildren[aIndex + 1];\n\t\t\tvar aNextKey = aNext._0;\n\t\t\tvar aNextNode = aNext._1;\n\t\t\tvar oldMatch = bKey === aNextKey;\n\t\t}\n\n\t\tif (bLookAhead)\n\t\t{\n\t\t\tvar bNext = bChildren[bIndex + 1];\n\t\t\tvar bNextKey = bNext._0;\n\t\t\tvar bNextNode = bNext._1;\n\t\t\tvar newMatch = aKey === bNextKey;\n\t\t}\n\n\n\t\t// swap a and b\n\t\tif (aLookAhead && bLookAhead && newMatch && oldMatch)\n\t\t{\n\t\t\tindex++;\n\t\t\tdiffHelp(aNode, bNextNode, localPatches, index);\n\t\t\tinsertNode(changes, localPatches, aKey, bNode, bIndex, inserts);\n\t\t\tindex += aNode.descendantsCount || 0;\n\n\t\t\tindex++;\n\t\t\tremoveNode(changes, localPatches, aKey, aNextNode, index);\n\t\t\tindex += aNextNode.descendantsCount || 0;\n\n\t\t\taIndex += 2;\n\t\t\tbIndex += 2;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// insert b\n\t\tif (bLookAhead && newMatch)\n\t\t{\n\t\t\tindex++;\n\t\t\tinsertNode(changes, localPatches, bKey, bNode, bIndex, inserts);\n\t\t\tdiffHelp(aNode, bNextNode, localPatches, index);\n\t\t\tindex += aNode.descendantsCount || 0;\n\n\t\t\taIndex += 1;\n\t\t\tbIndex += 2;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// remove a\n\t\tif (aLookAhead && oldMatch)\n\t\t{\n\t\t\tindex++;\n\t\t\tremoveNode(changes, localPatches, aKey, aNode, index);\n\t\t\tindex += aNode.descendantsCount || 0;\n\n\t\t\tindex++;\n\t\t\tdiffHelp(aNextNode, bNode, localPatches, index);\n\t\t\tindex += aNextNode.descendantsCount || 0;\n\n\t\t\taIndex += 2;\n\t\t\tbIndex += 1;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// remove a, insert b\n\t\tif (aLookAhead && bLookAhead && aNextKey === bNextKey)\n\t\t{\n\t\t\tindex++;\n\t\t\tremoveNode(changes, localPatches, aKey, aNode, index);\n\t\t\tinsertNode(changes, localPatches, bKey, bNode, bIndex, inserts);\n\t\t\tindex += aNode.descendantsCount || 0;\n\n\t\t\tindex++;\n\t\t\tdiffHelp(aNextNode, bNextNode, localPatches, index);\n\t\t\tindex += aNextNode.descendantsCount || 0;\n\n\t\t\taIndex += 2;\n\t\t\tbIndex += 2;\n\t\t\tcontinue;\n\t\t}\n\n\t\tbreak;\n\t}\n\n\t// eat up any remaining nodes with removeNode and insertNode\n\n\twhile (aIndex < aLen)\n\t{\n\t\tindex++;\n\t\tvar a = aChildren[aIndex];\n\t\tvar aNode = a._1;\n\t\tremoveNode(changes, localPatches, a._0, aNode, index);\n\t\tindex += aNode.descendantsCount || 0;\n\t\taIndex++;\n\t}\n\n\tvar endInserts;\n\twhile (bIndex < bLen)\n\t{\n\t\tendInserts = endInserts || [];\n\t\tvar b = bChildren[bIndex];\n\t\tinsertNode(changes, localPatches, b._0, b._1, undefined, endInserts);\n\t\tbIndex++;\n\t}\n\n\tif (localPatches.length > 0 || inserts.length > 0 || typeof endInserts !== 'undefined')\n\t{\n\t\tpatches.push(makePatch('p-reorder', rootIndex, {\n\t\t\tpatches: localPatches,\n\t\t\tinserts: inserts,\n\t\t\tendInserts: endInserts\n\t\t}));\n\t}\n}\n\n\n\n////////////  CHANGES FROM KEYED DIFF  ////////////\n\n\nvar POSTFIX = '_elmW6BL';\n\n\nfunction insertNode(changes, localPatches, key, vnode, bIndex, inserts)\n{\n\tvar entry = changes[key];\n\n\t// never seen this key before\n\tif (typeof entry === 'undefined')\n\t{\n\t\tentry = {\n\t\t\ttag: 'insert',\n\t\t\tvnode: vnode,\n\t\t\tindex: bIndex,\n\t\t\tdata: undefined\n\t\t};\n\n\t\tinserts.push({ index: bIndex, entry: entry });\n\t\tchanges[key] = entry;\n\n\t\treturn;\n\t}\n\n\t// this key was removed earlier, a match!\n\tif (entry.tag === 'remove')\n\t{\n\t\tinserts.push({ index: bIndex, entry: entry });\n\n\t\tentry.tag = 'move';\n\t\tvar subPatches = [];\n\t\tdiffHelp(entry.vnode, vnode, subPatches, entry.index);\n\t\tentry.index = bIndex;\n\t\tentry.data.data = {\n\t\t\tpatches: subPatches,\n\t\t\tentry: entry\n\t\t};\n\n\t\treturn;\n\t}\n\n\t// this key has already been inserted or moved, a duplicate!\n\tinsertNode(changes, localPatches, key + POSTFIX, vnode, bIndex, inserts);\n}\n\n\nfunction removeNode(changes, localPatches, key, vnode, index)\n{\n\tvar entry = changes[key];\n\n\t// never seen this key before\n\tif (typeof entry === 'undefined')\n\t{\n\t\tvar patch = makePatch('p-remove', index, undefined);\n\t\tlocalPatches.push(patch);\n\n\t\tchanges[key] = {\n\t\t\ttag: 'remove',\n\t\t\tvnode: vnode,\n\t\t\tindex: index,\n\t\t\tdata: patch\n\t\t};\n\n\t\treturn;\n\t}\n\n\t// this key was inserted earlier, a match!\n\tif (entry.tag === 'insert')\n\t{\n\t\tentry.tag = 'move';\n\t\tvar subPatches = [];\n\t\tdiffHelp(vnode, entry.vnode, subPatches, index);\n\n\t\tvar patch = makePatch('p-remove', index, {\n\t\t\tpatches: subPatches,\n\t\t\tentry: entry\n\t\t});\n\t\tlocalPatches.push(patch);\n\n\t\treturn;\n\t}\n\n\t// this key has already been removed or moved, a duplicate!\n\tremoveNode(changes, localPatches, key + POSTFIX, vnode, index);\n}\n\n\n\n////////////  ADD DOM NODES  ////////////\n//\n// Each DOM node has an \"index\" assigned in order of traversal. It is important\n// to minimize our crawl over the actual DOM, so these indexes (along with the\n// descendantsCount of virtual nodes) let us skip touching entire subtrees of\n// the DOM if we know there are no patches there.\n\n\nfunction addDomNodes(domNode, vNode, patches, eventNode)\n{\n\taddDomNodesHelp(domNode, vNode, patches, 0, 0, vNode.descendantsCount, eventNode);\n}\n\n\n// assumes `patches` is non-empty and indexes increase monotonically.\nfunction addDomNodesHelp(domNode, vNode, patches, i, low, high, eventNode)\n{\n\tvar patch = patches[i];\n\tvar index = patch.index;\n\n\twhile (index === low)\n\t{\n\t\tvar patchType = patch.type;\n\n\t\tif (patchType === 'p-thunk')\n\t\t{\n\t\t\taddDomNodes(domNode, vNode.node, patch.data, eventNode);\n\t\t}\n\t\telse if (patchType === 'p-reorder')\n\t\t{\n\t\t\tpatch.domNode = domNode;\n\t\t\tpatch.eventNode = eventNode;\n\n\t\t\tvar subPatches = patch.data.patches;\n\t\t\tif (subPatches.length > 0)\n\t\t\t{\n\t\t\t\taddDomNodesHelp(domNode, vNode, subPatches, 0, low, high, eventNode);\n\t\t\t}\n\t\t}\n\t\telse if (patchType === 'p-remove')\n\t\t{\n\t\t\tpatch.domNode = domNode;\n\t\t\tpatch.eventNode = eventNode;\n\n\t\t\tvar data = patch.data;\n\t\t\tif (typeof data !== 'undefined')\n\t\t\t{\n\t\t\t\tdata.entry.data = domNode;\n\t\t\t\tvar subPatches = data.patches;\n\t\t\t\tif (subPatches.length > 0)\n\t\t\t\t{\n\t\t\t\t\taddDomNodesHelp(domNode, vNode, subPatches, 0, low, high, eventNode);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpatch.domNode = domNode;\n\t\t\tpatch.eventNode = eventNode;\n\t\t}\n\n\t\ti++;\n\n\t\tif (!(patch = patches[i]) || (index = patch.index) > high)\n\t\t{\n\t\t\treturn i;\n\t\t}\n\t}\n\n\tswitch (vNode.type)\n\t{\n\t\tcase 'tagger':\n\t\t\tvar subNode = vNode.node;\n\n\t\t\twhile (subNode.type === \"tagger\")\n\t\t\t{\n\t\t\t\tsubNode = subNode.node;\n\t\t\t}\n\n\t\t\treturn addDomNodesHelp(domNode, subNode, patches, i, low + 1, high, domNode.elm_event_node_ref);\n\n\t\tcase 'node':\n\t\t\tvar vChildren = vNode.children;\n\t\t\tvar childNodes = domNode.childNodes;\n\t\t\tfor (var j = 0; j < vChildren.length; j++)\n\t\t\t{\n\t\t\t\tlow++;\n\t\t\t\tvar vChild = vChildren[j];\n\t\t\t\tvar nextLow = low + (vChild.descendantsCount || 0);\n\t\t\t\tif (low <= index && index <= nextLow)\n\t\t\t\t{\n\t\t\t\t\ti = addDomNodesHelp(childNodes[j], vChild, patches, i, low, nextLow, eventNode);\n\t\t\t\t\tif (!(patch = patches[i]) || (index = patch.index) > high)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlow = nextLow;\n\t\t\t}\n\t\t\treturn i;\n\n\t\tcase 'keyed-node':\n\t\t\tvar vChildren = vNode.children;\n\t\t\tvar childNodes = domNode.childNodes;\n\t\t\tfor (var j = 0; j < vChildren.length; j++)\n\t\t\t{\n\t\t\t\tlow++;\n\t\t\t\tvar vChild = vChildren[j]._1;\n\t\t\t\tvar nextLow = low + (vChild.descendantsCount || 0);\n\t\t\t\tif (low <= index && index <= nextLow)\n\t\t\t\t{\n\t\t\t\t\ti = addDomNodesHelp(childNodes[j], vChild, patches, i, low, nextLow, eventNode);\n\t\t\t\t\tif (!(patch = patches[i]) || (index = patch.index) > high)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlow = nextLow;\n\t\t\t}\n\t\t\treturn i;\n\n\t\tcase 'text':\n\t\tcase 'thunk':\n\t\t\tthrow new Error('should never traverse `text` or `thunk` nodes like this');\n\t}\n}\n\n\n\n////////////  APPLY PATCHES  ////////////\n\n\nfunction applyPatches(rootDomNode, oldVirtualNode, patches, eventNode)\n{\n\tif (patches.length === 0)\n\t{\n\t\treturn rootDomNode;\n\t}\n\n\taddDomNodes(rootDomNode, oldVirtualNode, patches, eventNode);\n\treturn applyPatchesHelp(rootDomNode, patches);\n}\n\nfunction applyPatchesHelp(rootDomNode, patches)\n{\n\tfor (var i = 0; i < patches.length; i++)\n\t{\n\t\tvar patch = patches[i];\n\t\tvar localDomNode = patch.domNode\n\t\tvar newNode = applyPatch(localDomNode, patch);\n\t\tif (localDomNode === rootDomNode)\n\t\t{\n\t\t\trootDomNode = newNode;\n\t\t}\n\t}\n\treturn rootDomNode;\n}\n\nfunction applyPatch(domNode, patch)\n{\n\tswitch (patch.type)\n\t{\n\t\tcase 'p-redraw':\n\t\t\treturn applyPatchRedraw(domNode, patch.data, patch.eventNode);\n\n\t\tcase 'p-facts':\n\t\t\tapplyFacts(domNode, patch.eventNode, patch.data);\n\t\t\treturn domNode;\n\n\t\tcase 'p-text':\n\t\t\tdomNode.replaceData(0, domNode.length, patch.data);\n\t\t\treturn domNode;\n\n\t\tcase 'p-thunk':\n\t\t\treturn applyPatchesHelp(domNode, patch.data);\n\n\t\tcase 'p-tagger':\n\t\t\tif (typeof domNode.elm_event_node_ref !== 'undefined')\n\t\t\t{\n\t\t\t\tdomNode.elm_event_node_ref.tagger = patch.data;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdomNode.elm_event_node_ref = { tagger: patch.data, parent: patch.eventNode };\n\t\t\t}\n\t\t\treturn domNode;\n\n\t\tcase 'p-remove-last':\n\t\t\tvar i = patch.data;\n\t\t\twhile (i--)\n\t\t\t{\n\t\t\t\tdomNode.removeChild(domNode.lastChild);\n\t\t\t}\n\t\t\treturn domNode;\n\n\t\tcase 'p-append':\n\t\t\tvar newNodes = patch.data;\n\t\t\tfor (var i = 0; i < newNodes.length; i++)\n\t\t\t{\n\t\t\t\tdomNode.appendChild(render(newNodes[i], patch.eventNode));\n\t\t\t}\n\t\t\treturn domNode;\n\n\t\tcase 'p-remove':\n\t\t\tvar data = patch.data;\n\t\t\tif (typeof data === 'undefined')\n\t\t\t{\n\t\t\t\tdomNode.parentNode.removeChild(domNode);\n\t\t\t\treturn domNode;\n\t\t\t}\n\t\t\tvar entry = data.entry;\n\t\t\tif (typeof entry.index !== 'undefined')\n\t\t\t{\n\t\t\t\tdomNode.parentNode.removeChild(domNode);\n\t\t\t}\n\t\t\tentry.data = applyPatchesHelp(domNode, data.patches);\n\t\t\treturn domNode;\n\n\t\tcase 'p-reorder':\n\t\t\treturn applyPatchReorder(domNode, patch);\n\n\t\tcase 'p-custom':\n\t\t\tvar impl = patch.data;\n\t\t\treturn impl.applyPatch(domNode, impl.data);\n\n\t\tdefault:\n\t\t\tthrow new Error('Ran into an unknown patch!');\n\t}\n}\n\n\nfunction applyPatchRedraw(domNode, vNode, eventNode)\n{\n\tvar parentNode = domNode.parentNode;\n\tvar newNode = render(vNode, eventNode);\n\n\tif (typeof newNode.elm_event_node_ref === 'undefined')\n\t{\n\t\tnewNode.elm_event_node_ref = domNode.elm_event_node_ref;\n\t}\n\n\tif (parentNode && newNode !== domNode)\n\t{\n\t\tparentNode.replaceChild(newNode, domNode);\n\t}\n\treturn newNode;\n}\n\n\nfunction applyPatchReorder(domNode, patch)\n{\n\tvar data = patch.data;\n\n\t// remove end inserts\n\tvar frag = applyPatchReorderEndInsertsHelp(data.endInserts, patch);\n\n\t// removals\n\tdomNode = applyPatchesHelp(domNode, data.patches);\n\n\t// inserts\n\tvar inserts = data.inserts;\n\tfor (var i = 0; i < inserts.length; i++)\n\t{\n\t\tvar insert = inserts[i];\n\t\tvar entry = insert.entry;\n\t\tvar node = entry.tag === 'move'\n\t\t\t? entry.data\n\t\t\t: render(entry.vnode, patch.eventNode);\n\t\tdomNode.insertBefore(node, domNode.childNodes[insert.index]);\n\t}\n\n\t// add end inserts\n\tif (typeof frag !== 'undefined')\n\t{\n\t\tdomNode.appendChild(frag);\n\t}\n\n\treturn domNode;\n}\n\n\nfunction applyPatchReorderEndInsertsHelp(endInserts, patch)\n{\n\tif (typeof endInserts === 'undefined')\n\t{\n\t\treturn;\n\t}\n\n\tvar frag = localDoc.createDocumentFragment();\n\tfor (var i = 0; i < endInserts.length; i++)\n\t{\n\t\tvar insert = endInserts[i];\n\t\tvar entry = insert.entry;\n\t\tfrag.appendChild(entry.tag === 'move'\n\t\t\t? entry.data\n\t\t\t: render(entry.vnode, patch.eventNode)\n\t\t);\n\t}\n\treturn frag;\n}\n\n\n// PROGRAMS\n\nvar program = makeProgram(checkNoFlags);\nvar programWithFlags = makeProgram(checkYesFlags);\n\nfunction makeProgram(flagChecker)\n{\n\treturn F2(function(debugWrap, impl)\n\t{\n\t\treturn function(flagDecoder)\n\t\t{\n\t\t\treturn function(object, moduleName, debugMetadata)\n\t\t\t{\n\t\t\t\tvar checker = flagChecker(flagDecoder, moduleName);\n\t\t\t\tif (typeof debugMetadata === 'undefined')\n\t\t\t\t{\n\t\t\t\t\tnormalSetup(impl, object, moduleName, checker);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tdebugSetup(A2(debugWrap, debugMetadata, impl), object, moduleName, checker);\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t});\n}\n\nfunction staticProgram(vNode)\n{\n\tvar nothing = _elm_lang$core$Native_Utils.Tuple2(\n\t\t_elm_lang$core$Native_Utils.Tuple0,\n\t\t_elm_lang$core$Platform_Cmd$none\n\t);\n\treturn A2(program, _elm_lang$virtual_dom$VirtualDom_Debug$wrap, {\n\t\tinit: nothing,\n\t\tview: function() { return vNode; },\n\t\tupdate: F2(function() { return nothing; }),\n\t\tsubscriptions: function() { return _elm_lang$core$Platform_Sub$none; }\n\t})();\n}\n\n\n// FLAG CHECKERS\n\nfunction checkNoFlags(flagDecoder, moduleName)\n{\n\treturn function(init, flags, domNode)\n\t{\n\t\tif (typeof flags === 'undefined')\n\t\t{\n\t\t\treturn init;\n\t\t}\n\n\t\tvar errorMessage =\n\t\t\t'The `' + moduleName + '` module does not need flags.\\n'\n\t\t\t+ 'Initialize it with no arguments and you should be all set!';\n\n\t\tcrash(errorMessage, domNode);\n\t};\n}\n\nfunction checkYesFlags(flagDecoder, moduleName)\n{\n\treturn function(init, flags, domNode)\n\t{\n\t\tif (typeof flagDecoder === 'undefined')\n\t\t{\n\t\t\tvar errorMessage =\n\t\t\t\t'Are you trying to sneak a Never value into Elm? Trickster!\\n'\n\t\t\t\t+ 'It looks like ' + moduleName + '.main is defined with `programWithFlags` but has type `Program Never`.\\n'\n\t\t\t\t+ 'Use `program` instead if you do not want flags.'\n\n\t\t\tcrash(errorMessage, domNode);\n\t\t}\n\n\t\tvar result = A2(_elm_lang$core$Native_Json.run, flagDecoder, flags);\n\t\tif (result.ctor === 'Ok')\n\t\t{\n\t\t\treturn init(result._0);\n\t\t}\n\n\t\tvar errorMessage =\n\t\t\t'Trying to initialize the `' + moduleName + '` module with an unexpected flag.\\n'\n\t\t\t+ 'I tried to convert it to an Elm value, but ran into this problem:\\n\\n'\n\t\t\t+ result._0;\n\n\t\tcrash(errorMessage, domNode);\n\t};\n}\n\nfunction crash(errorMessage, domNode)\n{\n\tif (domNode)\n\t{\n\t\tdomNode.innerHTML =\n\t\t\t'<div style=\"padding-left:1em;\">'\n\t\t\t+ '<h2 style=\"font-weight:normal;\"><b>Oops!</b> Something went wrong when starting your Elm program.</h2>'\n\t\t\t+ '<pre style=\"padding-left:1em;\">' + errorMessage + '</pre>'\n\t\t\t+ '</div>';\n\t}\n\n\tthrow new Error(errorMessage);\n}\n\n\n//  NORMAL SETUP\n\nfunction normalSetup(impl, object, moduleName, flagChecker)\n{\n\tobject['embed'] = function embed(node, flags)\n\t{\n\t\twhile (node.lastChild)\n\t\t{\n\t\t\tnode.removeChild(node.lastChild);\n\t\t}\n\n\t\treturn _elm_lang$core$Native_Platform.initialize(\n\t\t\tflagChecker(impl.init, flags, node),\n\t\t\timpl.update,\n\t\t\timpl.subscriptions,\n\t\t\tnormalRenderer(node, impl.view)\n\t\t);\n\t};\n\n\tobject['fullscreen'] = function fullscreen(flags)\n\t{\n\t\treturn _elm_lang$core$Native_Platform.initialize(\n\t\t\tflagChecker(impl.init, flags, document.body),\n\t\t\timpl.update,\n\t\t\timpl.subscriptions,\n\t\t\tnormalRenderer(document.body, impl.view)\n\t\t);\n\t};\n}\n\nfunction normalRenderer(parentNode, view)\n{\n\treturn function(tagger, initialModel)\n\t{\n\t\tvar eventNode = { tagger: tagger, parent: undefined };\n\t\tvar initialVirtualNode = view(initialModel);\n\t\tvar domNode = render(initialVirtualNode, eventNode);\n\t\tparentNode.appendChild(domNode);\n\t\treturn makeStepper(domNode, view, initialVirtualNode, eventNode);\n\t};\n}\n\n\n// STEPPER\n\nvar rAF =\n\ttypeof requestAnimationFrame !== 'undefined'\n\t\t? requestAnimationFrame\n\t\t: function(callback) { setTimeout(callback, 1000 / 60); };\n\nfunction makeStepper(domNode, view, initialVirtualNode, eventNode)\n{\n\tvar state = 'NO_REQUEST';\n\tvar currNode = initialVirtualNode;\n\tvar nextModel;\n\n\tfunction updateIfNeeded()\n\t{\n\t\tswitch (state)\n\t\t{\n\t\t\tcase 'NO_REQUEST':\n\t\t\t\tthrow new Error(\n\t\t\t\t\t'Unexpected draw callback.\\n' +\n\t\t\t\t\t'Please report this to <https://github.com/elm-lang/virtual-dom/issues>.'\n\t\t\t\t);\n\n\t\t\tcase 'PENDING_REQUEST':\n\t\t\t\trAF(updateIfNeeded);\n\t\t\t\tstate = 'EXTRA_REQUEST';\n\n\t\t\t\tvar nextNode = view(nextModel);\n\t\t\t\tvar patches = diff(currNode, nextNode);\n\t\t\t\tdomNode = applyPatches(domNode, currNode, patches, eventNode);\n\t\t\t\tcurrNode = nextNode;\n\n\t\t\t\treturn;\n\n\t\t\tcase 'EXTRA_REQUEST':\n\t\t\t\tstate = 'NO_REQUEST';\n\t\t\t\treturn;\n\t\t}\n\t}\n\n\treturn function stepper(model)\n\t{\n\t\tif (state === 'NO_REQUEST')\n\t\t{\n\t\t\trAF(updateIfNeeded);\n\t\t}\n\t\tstate = 'PENDING_REQUEST';\n\t\tnextModel = model;\n\t};\n}\n\n\n// DEBUG SETUP\n\nfunction debugSetup(impl, object, moduleName, flagChecker)\n{\n\tobject['fullscreen'] = function fullscreen(flags)\n\t{\n\t\tvar popoutRef = { doc: undefined };\n\t\treturn _elm_lang$core$Native_Platform.initialize(\n\t\t\tflagChecker(impl.init, flags, document.body),\n\t\t\timpl.update(scrollTask(popoutRef)),\n\t\t\timpl.subscriptions,\n\t\t\tdebugRenderer(moduleName, document.body, popoutRef, impl.view, impl.viewIn, impl.viewOut)\n\t\t);\n\t};\n\n\tobject['embed'] = function fullscreen(node, flags)\n\t{\n\t\tvar popoutRef = { doc: undefined };\n\t\treturn _elm_lang$core$Native_Platform.initialize(\n\t\t\tflagChecker(impl.init, flags, node),\n\t\t\timpl.update(scrollTask(popoutRef)),\n\t\t\timpl.subscriptions,\n\t\t\tdebugRenderer(moduleName, node, popoutRef, impl.view, impl.viewIn, impl.viewOut)\n\t\t);\n\t};\n}\n\nfunction scrollTask(popoutRef)\n{\n\treturn _elm_lang$core$Native_Scheduler.nativeBinding(function(callback)\n\t{\n\t\tvar doc = popoutRef.doc;\n\t\tif (doc)\n\t\t{\n\t\t\tvar msgs = doc.getElementsByClassName('debugger-sidebar-messages')[0];\n\t\t\tif (msgs)\n\t\t\t{\n\t\t\t\tmsgs.scrollTop = msgs.scrollHeight;\n\t\t\t}\n\t\t}\n\t\tcallback(_elm_lang$core$Native_Scheduler.succeed(_elm_lang$core$Native_Utils.Tuple0));\n\t});\n}\n\n\nfunction debugRenderer(moduleName, parentNode, popoutRef, view, viewIn, viewOut)\n{\n\treturn function(tagger, initialModel)\n\t{\n\t\tvar appEventNode = { tagger: tagger, parent: undefined };\n\t\tvar eventNode = { tagger: tagger, parent: undefined };\n\n\t\t// make normal stepper\n\t\tvar appVirtualNode = view(initialModel);\n\t\tvar appNode = render(appVirtualNode, appEventNode);\n\t\tparentNode.appendChild(appNode);\n\t\tvar appStepper = makeStepper(appNode, view, appVirtualNode, appEventNode);\n\n\t\t// make overlay stepper\n\t\tvar overVirtualNode = viewIn(initialModel)._1;\n\t\tvar overNode = render(overVirtualNode, eventNode);\n\t\tparentNode.appendChild(overNode);\n\t\tvar wrappedViewIn = wrapViewIn(appEventNode, overNode, viewIn);\n\t\tvar overStepper = makeStepper(overNode, wrappedViewIn, overVirtualNode, eventNode);\n\n\t\t// make debugger stepper\n\t\tvar debugStepper = makeDebugStepper(initialModel, viewOut, eventNode, parentNode, moduleName, popoutRef);\n\n\t\treturn function stepper(model)\n\t\t{\n\t\t\tappStepper(model);\n\t\t\toverStepper(model);\n\t\t\tdebugStepper(model);\n\t\t}\n\t};\n}\n\nfunction makeDebugStepper(initialModel, view, eventNode, parentNode, moduleName, popoutRef)\n{\n\tvar curr;\n\tvar domNode;\n\n\treturn function stepper(model)\n\t{\n\t\tif (!model.isDebuggerOpen)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tif (!popoutRef.doc)\n\t\t{\n\t\t\tcurr = view(model);\n\t\t\tdomNode = openDebugWindow(moduleName, popoutRef, curr, eventNode);\n\t\t\treturn;\n\t\t}\n\n\t\t// switch to document of popout\n\t\tlocalDoc = popoutRef.doc;\n\n\t\tvar next = view(model);\n\t\tvar patches = diff(curr, next);\n\t\tdomNode = applyPatches(domNode, curr, patches, eventNode);\n\t\tcurr = next;\n\n\t\t// switch back to normal document\n\t\tlocalDoc = document;\n\t};\n}\n\nfunction openDebugWindow(moduleName, popoutRef, virtualNode, eventNode)\n{\n\tvar w = 900;\n\tvar h = 360;\n\tvar x = screen.width - w;\n\tvar y = screen.height - h;\n\tvar debugWindow = window.open('', '', 'width=' + w + ',height=' + h + ',left=' + x + ',top=' + y);\n\n\t// switch to window document\n\tlocalDoc = debugWindow.document;\n\n\tpopoutRef.doc = localDoc;\n\tlocalDoc.title = 'Debugger - ' + moduleName;\n\tlocalDoc.body.style.margin = '0';\n\tlocalDoc.body.style.padding = '0';\n\tvar domNode = render(virtualNode, eventNode);\n\tlocalDoc.body.appendChild(domNode);\n\n\tlocalDoc.addEventListener('keydown', function(event) {\n\t\tif (event.metaKey && event.which === 82)\n\t\t{\n\t\t\twindow.location.reload();\n\t\t}\n\t\tif (event.which === 38)\n\t\t{\n\t\t\teventNode.tagger({ ctor: 'Up' });\n\t\t\tevent.preventDefault();\n\t\t}\n\t\tif (event.which === 40)\n\t\t{\n\t\t\teventNode.tagger({ ctor: 'Down' });\n\t\t\tevent.preventDefault();\n\t\t}\n\t});\n\n\tfunction close()\n\t{\n\t\tpopoutRef.doc = undefined;\n\t\tdebugWindow.close();\n\t}\n\twindow.addEventListener('unload', close);\n\tdebugWindow.addEventListener('unload', function() {\n\t\tpopoutRef.doc = undefined;\n\t\twindow.removeEventListener('unload', close);\n\t\teventNode.tagger({ ctor: 'Close' });\n\t});\n\n\t// switch back to the normal document\n\tlocalDoc = document;\n\n\treturn domNode;\n}\n\n\n// BLOCK EVENTS\n\nfunction wrapViewIn(appEventNode, overlayNode, viewIn)\n{\n\tvar ignorer = makeIgnorer(overlayNode);\n\tvar blocking = 'Normal';\n\tvar overflow;\n\n\tvar normalTagger = appEventNode.tagger;\n\tvar blockTagger = function() {};\n\n\treturn function(model)\n\t{\n\t\tvar tuple = viewIn(model);\n\t\tvar newBlocking = tuple._0.ctor;\n\t\tappEventNode.tagger = newBlocking === 'Normal' ? normalTagger : blockTagger;\n\t\tif (blocking !== newBlocking)\n\t\t{\n\t\t\ttraverse('removeEventListener', ignorer, blocking);\n\t\t\ttraverse('addEventListener', ignorer, newBlocking);\n\n\t\t\tif (blocking === 'Normal')\n\t\t\t{\n\t\t\t\toverflow = document.body.style.overflow;\n\t\t\t\tdocument.body.style.overflow = 'hidden';\n\t\t\t}\n\n\t\t\tif (newBlocking === 'Normal')\n\t\t\t{\n\t\t\t\tdocument.body.style.overflow = overflow;\n\t\t\t}\n\n\t\t\tblocking = newBlocking;\n\t\t}\n\t\treturn tuple._1;\n\t}\n}\n\nfunction traverse(verbEventListener, ignorer, blocking)\n{\n\tswitch(blocking)\n\t{\n\t\tcase 'Normal':\n\t\t\treturn;\n\n\t\tcase 'Pause':\n\t\t\treturn traverseHelp(verbEventListener, ignorer, mostEvents);\n\n\t\tcase 'Message':\n\t\t\treturn traverseHelp(verbEventListener, ignorer, allEvents);\n\t}\n}\n\nfunction traverseHelp(verbEventListener, handler, eventNames)\n{\n\tfor (var i = 0; i < eventNames.length; i++)\n\t{\n\t\tdocument.body[verbEventListener](eventNames[i], handler, true);\n\t}\n}\n\nfunction makeIgnorer(overlayNode)\n{\n\treturn function(event)\n\t{\n\t\tif (event.type === 'keydown' && event.metaKey && event.which === 82)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tvar isScroll = event.type === 'scroll' || event.type === 'wheel';\n\n\t\tvar node = event.target;\n\t\twhile (node !== null)\n\t\t{\n\t\t\tif (node.className === 'elm-overlay-message-details' && isScroll)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (node === overlayNode && !isScroll)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tnode = node.parentNode;\n\t\t}\n\n\t\tevent.stopPropagation();\n\t\tevent.preventDefault();\n\t}\n}\n\nvar mostEvents = [\n\t'click', 'dblclick', 'mousemove',\n\t'mouseup', 'mousedown', 'mouseenter', 'mouseleave',\n\t'touchstart', 'touchend', 'touchcancel', 'touchmove',\n\t'pointerdown', 'pointerup', 'pointerover', 'pointerout',\n\t'pointerenter', 'pointerleave', 'pointermove', 'pointercancel',\n\t'dragstart', 'drag', 'dragend', 'dragenter', 'dragover', 'dragleave', 'drop',\n\t'keyup', 'keydown', 'keypress',\n\t'input', 'change',\n\t'focus', 'blur'\n];\n\nvar allEvents = mostEvents.concat('wheel', 'scroll');\n\n\nreturn {\n\tnode: node,\n\ttext: text,\n\tcustom: custom,\n\tmap: F2(map),\n\n\ton: F3(on),\n\tstyle: style,\n\tproperty: F2(property),\n\tattribute: F2(attribute),\n\tattributeNS: F3(attributeNS),\n\tmapProperty: F2(mapProperty),\n\n\tlazy: F2(lazy),\n\tlazy2: F3(lazy2),\n\tlazy3: F4(lazy3),\n\tkeyedNode: F3(keyedNode),\n\n\tprogram: program,\n\tprogramWithFlags: programWithFlags,\n\tstaticProgram: staticProgram\n};\n\n}();\n\nvar _elm_lang$virtual_dom$VirtualDom$programWithFlags = function (impl) {\n\treturn A2(_elm_lang$virtual_dom$Native_VirtualDom.programWithFlags, _elm_lang$virtual_dom$VirtualDom_Debug$wrapWithFlags, impl);\n};\nvar _elm_lang$virtual_dom$VirtualDom$program = function (impl) {\n\treturn A2(_elm_lang$virtual_dom$Native_VirtualDom.program, _elm_lang$virtual_dom$VirtualDom_Debug$wrap, impl);\n};\nvar _elm_lang$virtual_dom$VirtualDom$keyedNode = _elm_lang$virtual_dom$Native_VirtualDom.keyedNode;\nvar _elm_lang$virtual_dom$VirtualDom$lazy3 = _elm_lang$virtual_dom$Native_VirtualDom.lazy3;\nvar _elm_lang$virtual_dom$VirtualDom$lazy2 = _elm_lang$virtual_dom$Native_VirtualDom.lazy2;\nvar _elm_lang$virtual_dom$VirtualDom$lazy = _elm_lang$virtual_dom$Native_VirtualDom.lazy;\nvar _elm_lang$virtual_dom$VirtualDom$defaultOptions = {stopPropagation: false, preventDefault: false};\nvar _elm_lang$virtual_dom$VirtualDom$onWithOptions = _elm_lang$virtual_dom$Native_VirtualDom.on;\nvar _elm_lang$virtual_dom$VirtualDom$on = F2(\n\tfunction (eventName, decoder) {\n\t\treturn A3(_elm_lang$virtual_dom$VirtualDom$onWithOptions, eventName, _elm_lang$virtual_dom$VirtualDom$defaultOptions, decoder);\n\t});\nvar _elm_lang$virtual_dom$VirtualDom$style = _elm_lang$virtual_dom$Native_VirtualDom.style;\nvar _elm_lang$virtual_dom$VirtualDom$mapProperty = _elm_lang$virtual_dom$Native_VirtualDom.mapProperty;\nvar _elm_lang$virtual_dom$VirtualDom$attributeNS = _elm_lang$virtual_dom$Native_VirtualDom.attributeNS;\nvar _elm_lang$virtual_dom$VirtualDom$attribute = _elm_lang$virtual_dom$Native_VirtualDom.attribute;\nvar _elm_lang$virtual_dom$VirtualDom$property = _elm_lang$virtual_dom$Native_VirtualDom.property;\nvar _elm_lang$virtual_dom$VirtualDom$map = _elm_lang$virtual_dom$Native_VirtualDom.map;\nvar _elm_lang$virtual_dom$VirtualDom$text = _elm_lang$virtual_dom$Native_VirtualDom.text;\nvar _elm_lang$virtual_dom$VirtualDom$node = _elm_lang$virtual_dom$Native_VirtualDom.node;\nvar _elm_lang$virtual_dom$VirtualDom$Options = F2(\n\tfunction (a, b) {\n\t\treturn {stopPropagation: a, preventDefault: b};\n\t});\nvar _elm_lang$virtual_dom$VirtualDom$Node = {ctor: 'Node'};\nvar _elm_lang$virtual_dom$VirtualDom$Property = {ctor: 'Property'};\n\nvar _elm_lang$html$Html$programWithFlags = _elm_lang$virtual_dom$VirtualDom$programWithFlags;\nvar _elm_lang$html$Html$program = _elm_lang$virtual_dom$VirtualDom$program;\nvar _elm_lang$html$Html$beginnerProgram = function (_p0) {\n\tvar _p1 = _p0;\n\treturn _elm_lang$html$Html$program(\n\t\t{\n\t\t\tinit: A2(\n\t\t\t\t_elm_lang$core$Platform_Cmd_ops['!'],\n\t\t\t\t_p1.model,\n\t\t\t\t{ctor: '[]'}),\n\t\t\tupdate: F2(\n\t\t\t\tfunction (msg, model) {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\t_elm_lang$core$Platform_Cmd_ops['!'],\n\t\t\t\t\t\tA2(_p1.update, msg, model),\n\t\t\t\t\t\t{ctor: '[]'});\n\t\t\t\t}),\n\t\t\tview: _p1.view,\n\t\t\tsubscriptions: function (_p2) {\n\t\t\t\treturn _elm_lang$core$Platform_Sub$none;\n\t\t\t}\n\t\t});\n};\nvar _elm_lang$html$Html$map = _elm_lang$virtual_dom$VirtualDom$map;\nvar _elm_lang$html$Html$text = _elm_lang$virtual_dom$VirtualDom$text;\nvar _elm_lang$html$Html$node = _elm_lang$virtual_dom$VirtualDom$node;\nvar _elm_lang$html$Html$body = _elm_lang$html$Html$node('body');\nvar _elm_lang$html$Html$section = _elm_lang$html$Html$node('section');\nvar _elm_lang$html$Html$nav = _elm_lang$html$Html$node('nav');\nvar _elm_lang$html$Html$article = _elm_lang$html$Html$node('article');\nvar _elm_lang$html$Html$aside = _elm_lang$html$Html$node('aside');\nvar _elm_lang$html$Html$h1 = _elm_lang$html$Html$node('h1');\nvar _elm_lang$html$Html$h2 = _elm_lang$html$Html$node('h2');\nvar _elm_lang$html$Html$h3 = _elm_lang$html$Html$node('h3');\nvar _elm_lang$html$Html$h4 = _elm_lang$html$Html$node('h4');\nvar _elm_lang$html$Html$h5 = _elm_lang$html$Html$node('h5');\nvar _elm_lang$html$Html$h6 = _elm_lang$html$Html$node('h6');\nvar _elm_lang$html$Html$header = _elm_lang$html$Html$node('header');\nvar _elm_lang$html$Html$footer = _elm_lang$html$Html$node('footer');\nvar _elm_lang$html$Html$address = _elm_lang$html$Html$node('address');\nvar _elm_lang$html$Html$main_ = _elm_lang$html$Html$node('main');\nvar _elm_lang$html$Html$p = _elm_lang$html$Html$node('p');\nvar _elm_lang$html$Html$hr = _elm_lang$html$Html$node('hr');\nvar _elm_lang$html$Html$pre = _elm_lang$html$Html$node('pre');\nvar _elm_lang$html$Html$blockquote = _elm_lang$html$Html$node('blockquote');\nvar _elm_lang$html$Html$ol = _elm_lang$html$Html$node('ol');\nvar _elm_lang$html$Html$ul = _elm_lang$html$Html$node('ul');\nvar _elm_lang$html$Html$li = _elm_lang$html$Html$node('li');\nvar _elm_lang$html$Html$dl = _elm_lang$html$Html$node('dl');\nvar _elm_lang$html$Html$dt = _elm_lang$html$Html$node('dt');\nvar _elm_lang$html$Html$dd = _elm_lang$html$Html$node('dd');\nvar _elm_lang$html$Html$figure = _elm_lang$html$Html$node('figure');\nvar _elm_lang$html$Html$figcaption = _elm_lang$html$Html$node('figcaption');\nvar _elm_lang$html$Html$div = _elm_lang$html$Html$node('div');\nvar _elm_lang$html$Html$a = _elm_lang$html$Html$node('a');\nvar _elm_lang$html$Html$em = _elm_lang$html$Html$node('em');\nvar _elm_lang$html$Html$strong = _elm_lang$html$Html$node('strong');\nvar _elm_lang$html$Html$small = _elm_lang$html$Html$node('small');\nvar _elm_lang$html$Html$s = _elm_lang$html$Html$node('s');\nvar _elm_lang$html$Html$cite = _elm_lang$html$Html$node('cite');\nvar _elm_lang$html$Html$q = _elm_lang$html$Html$node('q');\nvar _elm_lang$html$Html$dfn = _elm_lang$html$Html$node('dfn');\nvar _elm_lang$html$Html$abbr = _elm_lang$html$Html$node('abbr');\nvar _elm_lang$html$Html$time = _elm_lang$html$Html$node('time');\nvar _elm_lang$html$Html$code = _elm_lang$html$Html$node('code');\nvar _elm_lang$html$Html$var = _elm_lang$html$Html$node('var');\nvar _elm_lang$html$Html$samp = _elm_lang$html$Html$node('samp');\nvar _elm_lang$html$Html$kbd = _elm_lang$html$Html$node('kbd');\nvar _elm_lang$html$Html$sub = _elm_lang$html$Html$node('sub');\nvar _elm_lang$html$Html$sup = _elm_lang$html$Html$node('sup');\nvar _elm_lang$html$Html$i = _elm_lang$html$Html$node('i');\nvar _elm_lang$html$Html$b = _elm_lang$html$Html$node('b');\nvar _elm_lang$html$Html$u = _elm_lang$html$Html$node('u');\nvar _elm_lang$html$Html$mark = _elm_lang$html$Html$node('mark');\nvar _elm_lang$html$Html$ruby = _elm_lang$html$Html$node('ruby');\nvar _elm_lang$html$Html$rt = _elm_lang$html$Html$node('rt');\nvar _elm_lang$html$Html$rp = _elm_lang$html$Html$node('rp');\nvar _elm_lang$html$Html$bdi = _elm_lang$html$Html$node('bdi');\nvar _elm_lang$html$Html$bdo = _elm_lang$html$Html$node('bdo');\nvar _elm_lang$html$Html$span = _elm_lang$html$Html$node('span');\nvar _elm_lang$html$Html$br = _elm_lang$html$Html$node('br');\nvar _elm_lang$html$Html$wbr = _elm_lang$html$Html$node('wbr');\nvar _elm_lang$html$Html$ins = _elm_lang$html$Html$node('ins');\nvar _elm_lang$html$Html$del = _elm_lang$html$Html$node('del');\nvar _elm_lang$html$Html$img = _elm_lang$html$Html$node('img');\nvar _elm_lang$html$Html$iframe = _elm_lang$html$Html$node('iframe');\nvar _elm_lang$html$Html$embed = _elm_lang$html$Html$node('embed');\nvar _elm_lang$html$Html$object = _elm_lang$html$Html$node('object');\nvar _elm_lang$html$Html$param = _elm_lang$html$Html$node('param');\nvar _elm_lang$html$Html$video = _elm_lang$html$Html$node('video');\nvar _elm_lang$html$Html$audio = _elm_lang$html$Html$node('audio');\nvar _elm_lang$html$Html$source = _elm_lang$html$Html$node('source');\nvar _elm_lang$html$Html$track = _elm_lang$html$Html$node('track');\nvar _elm_lang$html$Html$canvas = _elm_lang$html$Html$node('canvas');\nvar _elm_lang$html$Html$math = _elm_lang$html$Html$node('math');\nvar _elm_lang$html$Html$table = _elm_lang$html$Html$node('table');\nvar _elm_lang$html$Html$caption = _elm_lang$html$Html$node('caption');\nvar _elm_lang$html$Html$colgroup = _elm_lang$html$Html$node('colgroup');\nvar _elm_lang$html$Html$col = _elm_lang$html$Html$node('col');\nvar _elm_lang$html$Html$tbody = _elm_lang$html$Html$node('tbody');\nvar _elm_lang$html$Html$thead = _elm_lang$html$Html$node('thead');\nvar _elm_lang$html$Html$tfoot = _elm_lang$html$Html$node('tfoot');\nvar _elm_lang$html$Html$tr = _elm_lang$html$Html$node('tr');\nvar _elm_lang$html$Html$td = _elm_lang$html$Html$node('td');\nvar _elm_lang$html$Html$th = _elm_lang$html$Html$node('th');\nvar _elm_lang$html$Html$form = _elm_lang$html$Html$node('form');\nvar _elm_lang$html$Html$fieldset = _elm_lang$html$Html$node('fieldset');\nvar _elm_lang$html$Html$legend = _elm_lang$html$Html$node('legend');\nvar _elm_lang$html$Html$label = _elm_lang$html$Html$node('label');\nvar _elm_lang$html$Html$input = _elm_lang$html$Html$node('input');\nvar _elm_lang$html$Html$button = _elm_lang$html$Html$node('button');\nvar _elm_lang$html$Html$select = _elm_lang$html$Html$node('select');\nvar _elm_lang$html$Html$datalist = _elm_lang$html$Html$node('datalist');\nvar _elm_lang$html$Html$optgroup = _elm_lang$html$Html$node('optgroup');\nvar _elm_lang$html$Html$option = _elm_lang$html$Html$node('option');\nvar _elm_lang$html$Html$textarea = _elm_lang$html$Html$node('textarea');\nvar _elm_lang$html$Html$keygen = _elm_lang$html$Html$node('keygen');\nvar _elm_lang$html$Html$output = _elm_lang$html$Html$node('output');\nvar _elm_lang$html$Html$progress = _elm_lang$html$Html$node('progress');\nvar _elm_lang$html$Html$meter = _elm_lang$html$Html$node('meter');\nvar _elm_lang$html$Html$details = _elm_lang$html$Html$node('details');\nvar _elm_lang$html$Html$summary = _elm_lang$html$Html$node('summary');\nvar _elm_lang$html$Html$menuitem = _elm_lang$html$Html$node('menuitem');\nvar _elm_lang$html$Html$menu = _elm_lang$html$Html$node('menu');\n\nvar _elm_lang$html$Html_Attributes$map = _elm_lang$virtual_dom$VirtualDom$mapProperty;\nvar _elm_lang$html$Html_Attributes$attribute = _elm_lang$virtual_dom$VirtualDom$attribute;\nvar _elm_lang$html$Html_Attributes$contextmenu = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$attribute, 'contextmenu', value);\n};\nvar _elm_lang$html$Html_Attributes$draggable = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$attribute, 'draggable', value);\n};\nvar _elm_lang$html$Html_Attributes$itemprop = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$attribute, 'itemprop', value);\n};\nvar _elm_lang$html$Html_Attributes$tabindex = function (n) {\n\treturn A2(\n\t\t_elm_lang$html$Html_Attributes$attribute,\n\t\t'tabIndex',\n\t\t_elm_lang$core$Basics$toString(n));\n};\nvar _elm_lang$html$Html_Attributes$charset = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$attribute, 'charset', value);\n};\nvar _elm_lang$html$Html_Attributes$height = function (value) {\n\treturn A2(\n\t\t_elm_lang$html$Html_Attributes$attribute,\n\t\t'height',\n\t\t_elm_lang$core$Basics$toString(value));\n};\nvar _elm_lang$html$Html_Attributes$width = function (value) {\n\treturn A2(\n\t\t_elm_lang$html$Html_Attributes$attribute,\n\t\t'width',\n\t\t_elm_lang$core$Basics$toString(value));\n};\nvar _elm_lang$html$Html_Attributes$formaction = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$attribute, 'formAction', value);\n};\nvar _elm_lang$html$Html_Attributes$list = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$attribute, 'list', value);\n};\nvar _elm_lang$html$Html_Attributes$minlength = function (n) {\n\treturn A2(\n\t\t_elm_lang$html$Html_Attributes$attribute,\n\t\t'minLength',\n\t\t_elm_lang$core$Basics$toString(n));\n};\nvar _elm_lang$html$Html_Attributes$maxlength = function (n) {\n\treturn A2(\n\t\t_elm_lang$html$Html_Attributes$attribute,\n\t\t'maxlength',\n\t\t_elm_lang$core$Basics$toString(n));\n};\nvar _elm_lang$html$Html_Attributes$size = function (n) {\n\treturn A2(\n\t\t_elm_lang$html$Html_Attributes$attribute,\n\t\t'size',\n\t\t_elm_lang$core$Basics$toString(n));\n};\nvar _elm_lang$html$Html_Attributes$form = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$attribute, 'form', value);\n};\nvar _elm_lang$html$Html_Attributes$cols = function (n) {\n\treturn A2(\n\t\t_elm_lang$html$Html_Attributes$attribute,\n\t\t'cols',\n\t\t_elm_lang$core$Basics$toString(n));\n};\nvar _elm_lang$html$Html_Attributes$rows = function (n) {\n\treturn A2(\n\t\t_elm_lang$html$Html_Attributes$attribute,\n\t\t'rows',\n\t\t_elm_lang$core$Basics$toString(n));\n};\nvar _elm_lang$html$Html_Attributes$challenge = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$attribute, 'challenge', value);\n};\nvar _elm_lang$html$Html_Attributes$media = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$attribute, 'media', value);\n};\nvar _elm_lang$html$Html_Attributes$rel = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$attribute, 'rel', value);\n};\nvar _elm_lang$html$Html_Attributes$datetime = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$attribute, 'datetime', value);\n};\nvar _elm_lang$html$Html_Attributes$pubdate = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$attribute, 'pubdate', value);\n};\nvar _elm_lang$html$Html_Attributes$colspan = function (n) {\n\treturn A2(\n\t\t_elm_lang$html$Html_Attributes$attribute,\n\t\t'colspan',\n\t\t_elm_lang$core$Basics$toString(n));\n};\nvar _elm_lang$html$Html_Attributes$rowspan = function (n) {\n\treturn A2(\n\t\t_elm_lang$html$Html_Attributes$attribute,\n\t\t'rowspan',\n\t\t_elm_lang$core$Basics$toString(n));\n};\nvar _elm_lang$html$Html_Attributes$manifest = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$attribute, 'manifest', value);\n};\nvar _elm_lang$html$Html_Attributes$property = _elm_lang$virtual_dom$VirtualDom$property;\nvar _elm_lang$html$Html_Attributes$stringProperty = F2(\n\tfunction (name, string) {\n\t\treturn A2(\n\t\t\t_elm_lang$html$Html_Attributes$property,\n\t\t\tname,\n\t\t\t_elm_lang$core$Json_Encode$string(string));\n\t});\nvar _elm_lang$html$Html_Attributes$class = function (name) {\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'className', name);\n};\nvar _elm_lang$html$Html_Attributes$id = function (name) {\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'id', name);\n};\nvar _elm_lang$html$Html_Attributes$title = function (name) {\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'title', name);\n};\nvar _elm_lang$html$Html_Attributes$accesskey = function ($char) {\n\treturn A2(\n\t\t_elm_lang$html$Html_Attributes$stringProperty,\n\t\t'accessKey',\n\t\t_elm_lang$core$String$fromChar($char));\n};\nvar _elm_lang$html$Html_Attributes$dir = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'dir', value);\n};\nvar _elm_lang$html$Html_Attributes$dropzone = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'dropzone', value);\n};\nvar _elm_lang$html$Html_Attributes$lang = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'lang', value);\n};\nvar _elm_lang$html$Html_Attributes$content = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'content', value);\n};\nvar _elm_lang$html$Html_Attributes$httpEquiv = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'httpEquiv', value);\n};\nvar _elm_lang$html$Html_Attributes$language = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'language', value);\n};\nvar _elm_lang$html$Html_Attributes$src = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'src', value);\n};\nvar _elm_lang$html$Html_Attributes$alt = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'alt', value);\n};\nvar _elm_lang$html$Html_Attributes$preload = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'preload', value);\n};\nvar _elm_lang$html$Html_Attributes$poster = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'poster', value);\n};\nvar _elm_lang$html$Html_Attributes$kind = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'kind', value);\n};\nvar _elm_lang$html$Html_Attributes$srclang = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'srclang', value);\n};\nvar _elm_lang$html$Html_Attributes$sandbox = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'sandbox', value);\n};\nvar _elm_lang$html$Html_Attributes$srcdoc = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'srcdoc', value);\n};\nvar _elm_lang$html$Html_Attributes$type_ = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'type', value);\n};\nvar _elm_lang$html$Html_Attributes$value = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'value', value);\n};\nvar _elm_lang$html$Html_Attributes$defaultValue = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'defaultValue', value);\n};\nvar _elm_lang$html$Html_Attributes$placeholder = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'placeholder', value);\n};\nvar _elm_lang$html$Html_Attributes$accept = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'accept', value);\n};\nvar _elm_lang$html$Html_Attributes$acceptCharset = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'acceptCharset', value);\n};\nvar _elm_lang$html$Html_Attributes$action = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'action', value);\n};\nvar _elm_lang$html$Html_Attributes$autocomplete = function (bool) {\n\treturn A2(\n\t\t_elm_lang$html$Html_Attributes$stringProperty,\n\t\t'autocomplete',\n\t\tbool ? 'on' : 'off');\n};\nvar _elm_lang$html$Html_Attributes$enctype = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'enctype', value);\n};\nvar _elm_lang$html$Html_Attributes$method = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'method', value);\n};\nvar _elm_lang$html$Html_Attributes$name = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'name', value);\n};\nvar _elm_lang$html$Html_Attributes$pattern = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'pattern', value);\n};\nvar _elm_lang$html$Html_Attributes$for = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'htmlFor', value);\n};\nvar _elm_lang$html$Html_Attributes$max = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'max', value);\n};\nvar _elm_lang$html$Html_Attributes$min = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'min', value);\n};\nvar _elm_lang$html$Html_Attributes$step = function (n) {\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'step', n);\n};\nvar _elm_lang$html$Html_Attributes$wrap = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'wrap', value);\n};\nvar _elm_lang$html$Html_Attributes$usemap = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'useMap', value);\n};\nvar _elm_lang$html$Html_Attributes$shape = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'shape', value);\n};\nvar _elm_lang$html$Html_Attributes$coords = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'coords', value);\n};\nvar _elm_lang$html$Html_Attributes$keytype = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'keytype', value);\n};\nvar _elm_lang$html$Html_Attributes$align = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'align', value);\n};\nvar _elm_lang$html$Html_Attributes$cite = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'cite', value);\n};\nvar _elm_lang$html$Html_Attributes$href = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'href', value);\n};\nvar _elm_lang$html$Html_Attributes$target = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'target', value);\n};\nvar _elm_lang$html$Html_Attributes$downloadAs = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'download', value);\n};\nvar _elm_lang$html$Html_Attributes$hreflang = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'hreflang', value);\n};\nvar _elm_lang$html$Html_Attributes$ping = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'ping', value);\n};\nvar _elm_lang$html$Html_Attributes$start = function (n) {\n\treturn A2(\n\t\t_elm_lang$html$Html_Attributes$stringProperty,\n\t\t'start',\n\t\t_elm_lang$core$Basics$toString(n));\n};\nvar _elm_lang$html$Html_Attributes$headers = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'headers', value);\n};\nvar _elm_lang$html$Html_Attributes$scope = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$stringProperty, 'scope', value);\n};\nvar _elm_lang$html$Html_Attributes$boolProperty = F2(\n\tfunction (name, bool) {\n\t\treturn A2(\n\t\t\t_elm_lang$html$Html_Attributes$property,\n\t\t\tname,\n\t\t\t_elm_lang$core$Json_Encode$bool(bool));\n\t});\nvar _elm_lang$html$Html_Attributes$hidden = function (bool) {\n\treturn A2(_elm_lang$html$Html_Attributes$boolProperty, 'hidden', bool);\n};\nvar _elm_lang$html$Html_Attributes$contenteditable = function (bool) {\n\treturn A2(_elm_lang$html$Html_Attributes$boolProperty, 'contentEditable', bool);\n};\nvar _elm_lang$html$Html_Attributes$spellcheck = function (bool) {\n\treturn A2(_elm_lang$html$Html_Attributes$boolProperty, 'spellcheck', bool);\n};\nvar _elm_lang$html$Html_Attributes$async = function (bool) {\n\treturn A2(_elm_lang$html$Html_Attributes$boolProperty, 'async', bool);\n};\nvar _elm_lang$html$Html_Attributes$defer = function (bool) {\n\treturn A2(_elm_lang$html$Html_Attributes$boolProperty, 'defer', bool);\n};\nvar _elm_lang$html$Html_Attributes$scoped = function (bool) {\n\treturn A2(_elm_lang$html$Html_Attributes$boolProperty, 'scoped', bool);\n};\nvar _elm_lang$html$Html_Attributes$autoplay = function (bool) {\n\treturn A2(_elm_lang$html$Html_Attributes$boolProperty, 'autoplay', bool);\n};\nvar _elm_lang$html$Html_Attributes$controls = function (bool) {\n\treturn A2(_elm_lang$html$Html_Attributes$boolProperty, 'controls', bool);\n};\nvar _elm_lang$html$Html_Attributes$loop = function (bool) {\n\treturn A2(_elm_lang$html$Html_Attributes$boolProperty, 'loop', bool);\n};\nvar _elm_lang$html$Html_Attributes$default = function (bool) {\n\treturn A2(_elm_lang$html$Html_Attributes$boolProperty, 'default', bool);\n};\nvar _elm_lang$html$Html_Attributes$seamless = function (bool) {\n\treturn A2(_elm_lang$html$Html_Attributes$boolProperty, 'seamless', bool);\n};\nvar _elm_lang$html$Html_Attributes$checked = function (bool) {\n\treturn A2(_elm_lang$html$Html_Attributes$boolProperty, 'checked', bool);\n};\nvar _elm_lang$html$Html_Attributes$selected = function (bool) {\n\treturn A2(_elm_lang$html$Html_Attributes$boolProperty, 'selected', bool);\n};\nvar _elm_lang$html$Html_Attributes$autofocus = function (bool) {\n\treturn A2(_elm_lang$html$Html_Attributes$boolProperty, 'autofocus', bool);\n};\nvar _elm_lang$html$Html_Attributes$disabled = function (bool) {\n\treturn A2(_elm_lang$html$Html_Attributes$boolProperty, 'disabled', bool);\n};\nvar _elm_lang$html$Html_Attributes$multiple = function (bool) {\n\treturn A2(_elm_lang$html$Html_Attributes$boolProperty, 'multiple', bool);\n};\nvar _elm_lang$html$Html_Attributes$novalidate = function (bool) {\n\treturn A2(_elm_lang$html$Html_Attributes$boolProperty, 'noValidate', bool);\n};\nvar _elm_lang$html$Html_Attributes$readonly = function (bool) {\n\treturn A2(_elm_lang$html$Html_Attributes$boolProperty, 'readOnly', bool);\n};\nvar _elm_lang$html$Html_Attributes$required = function (bool) {\n\treturn A2(_elm_lang$html$Html_Attributes$boolProperty, 'required', bool);\n};\nvar _elm_lang$html$Html_Attributes$ismap = function (value) {\n\treturn A2(_elm_lang$html$Html_Attributes$boolProperty, 'isMap', value);\n};\nvar _elm_lang$html$Html_Attributes$download = function (bool) {\n\treturn A2(_elm_lang$html$Html_Attributes$boolProperty, 'download', bool);\n};\nvar _elm_lang$html$Html_Attributes$reversed = function (bool) {\n\treturn A2(_elm_lang$html$Html_Attributes$boolProperty, 'reversed', bool);\n};\nvar _elm_lang$html$Html_Attributes$classList = function (list) {\n\treturn _elm_lang$html$Html_Attributes$class(\n\t\tA2(\n\t\t\t_elm_lang$core$String$join,\n\t\t\t' ',\n\t\t\tA2(\n\t\t\t\t_elm_lang$core$List$map,\n\t\t\t\t_elm_lang$core$Tuple$first,\n\t\t\t\tA2(_elm_lang$core$List$filter, _elm_lang$core$Tuple$second, list))));\n};\nvar _elm_lang$html$Html_Attributes$style = _elm_lang$virtual_dom$VirtualDom$style;\n\n\n/*\n * Copyright (c) 2010 Mozilla Corporation\n * Copyright (c) 2010 Vladimir Vukicevic\n * Copyright (c) 2013 John Mayer\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/*\n * File: mjs\n *\n * Vector and Matrix math utilities for JavaScript, optimized for WebGL.\n * Edited to work with the Elm Programming Language\n */\n\nvar _elm_community$linear_algebra$Native_MJS = function() {\n\n\n    /*\n     * Constant: MJS_VERSION\n     *\n     * mjs version number aa.bb.cc, encoded as an integer of the form:\n     * 0xaabbcc.\n     */\n    var MJS_VERSION = 0x000000;\n\n    /*\n     * Constant: MJS_DO_ASSERT\n     *\n     * Enables or disables runtime assertions.\n     *\n     * For potentially more performance, the assert methods can be\n     * commented out in each place where they are called.\n     */\n    // var MJS_DO_ASSERT = false;\n\n    /*\n     * Constant: MJS_FLOAT_ARRAY_TYPE\n     *\n     * The base float array type.  By default, WebGLFloatArray.\n     *\n     * mjs can work with any array-like elements, but if an array\n     * creation is requested, it will create an array of the type\n     * MJS_FLOAT_ARRAY_TYPE.  Also, the builtin constants such as (M4x4.I)\n     * will be of this type.\n     */\n    //MJS_FLOAT_ARRAY_TYPE = WebGLFloatArray;\n    //MJS_FLOAT_ARRAY_TYPE = Float32Array;\n    var MJS_FLOAT_ARRAY_TYPE = Float64Array;\n    //MJS_FLOAT_ARRAY_TYPE = Array;\n\n    /*\n    if (MJS_DO_ASSERT) {\n        function MathUtils_assert(cond, msg) {\n            if (!cond) {\n                throw \"Assertion failed: \" + msg;\n            }\n        }\n    } else {\n    */\n        function MathUtils_assert() { }\n    //}\n\n    /*\n     * Class: V3\n     *\n     * Methods for working with 3-element vectors.  A vector is represented by a 3-element array.\n     * Any valid JavaScript array type may be used, but if new\n     * vectors are created they are created using the configured MJS_FLOAT_ARRAY_TYPE.\n     */\n\n    var V3 = { };\n\n    V3._temp1 = new MJS_FLOAT_ARRAY_TYPE(3);\n    V3._temp2 = new MJS_FLOAT_ARRAY_TYPE(3);\n    V3._temp3 = new MJS_FLOAT_ARRAY_TYPE(3);\n\n    if (MJS_FLOAT_ARRAY_TYPE == Array) {\n        V3.x = [1.0, 0.0, 0.0];\n        V3.y = [0.0, 1.0, 0.0];\n        V3.z = [0.0, 0.0, 1.0];\n\n        V3.$ = function V3_$(x, y, z) {\n            return [x, y, z];\n        };\n    } else {\n        V3.x = new MJS_FLOAT_ARRAY_TYPE([1.0, 0.0, 0.0]);\n        V3.y = new MJS_FLOAT_ARRAY_TYPE([0.0, 1.0, 0.0]);\n        V3.z = new MJS_FLOAT_ARRAY_TYPE([0.0, 0.0, 1.0]);\n\n        /*\n         * Function: V3.$\n         *\n         * Creates a new 3-element vector with the given values.\n         *\n         * Parameters:\n         *\n         *   x,y,z - the 3 elements of the new vector.\n         *\n         * Returns:\n         *\n         * A new vector containing with the given argument values.\n         */\n\n        V3.$ = function V3_$(x, y, z) {\n            return new MJS_FLOAT_ARRAY_TYPE([x, y, z]);\n        };\n    }\n\n    V3.u = V3.x;\n    V3.v = V3.y;\n\n    V3.getX = function V3_getX(a) {\n        return a[0];\n    }\n    V3.getY = function V3_getY(a) {\n        return a[1];\n    }\n    V3.getZ = function V3_getZ(a) {\n        return a[2];\n    }\n    V3.setX = function V3_setX(x, a) {\n        return new MJS_FLOAT_ARRAY_TYPE([x, a[1], a[2]]);\n    }\n    V3.setY = function V3_setY(y, a) {\n        return new MJS_FLOAT_ARRAY_TYPE([a[0], y, a[2]]);\n    }\n    V3.setZ = function V3_setZ(z, a) {\n        return new MJS_FLOAT_ARRAY_TYPE([a[0], a[1], z]);\n    }\n\n    V3.toTuple3 = function V3_toTuple3(a) {\n      return {\n        ctor:\"_Tuple3\",\n        _0:a[0],\n        _1:a[1],\n        _2:a[2]\n      };\n    };\n    V3.fromTuple3 = function V3_fromTuple3(t) {\n      return new MJS_FLOAT_ARRAY_TYPE([t._0, t._1, t._2]);\n    };\n\n    V3.toRecord3 = function V3_toRecord3(a) {\n      return {\n        _:{},\n        x:a[0],\n        y:a[1],\n        z:a[2]\n      };\n    };\n    V3.fromRecord3 = function V3_fromRecord3(r) {\n      return new MJS_FLOAT_ARRAY_TYPE([r.x, r.y, r.z]);\n    };\n\n    /*\n     * Function: V3.add\n     *\n     * Perform r = a + b.\n     *\n     * Parameters:\n     *\n     *   a - the first vector operand\n     *   b - the second vector operand\n     *   r - optional vector to store the result in\n     *\n     * Returns:\n     *\n     *   If r is specified, returns r after performing the operation.\n     *   Otherwise, returns a new 3-element vector with the result.\n     */\n    V3.add = function V3_add(a, b, r) {\n        //MathUtils_assert(a.length == 3, \"a.length == 3\");\n        //MathUtils_assert(b.length == 3, \"b.length == 3\");\n        //MathUtils_assert(r == undefined || r.length == 3, \"r == undefined || r.length == 3\");\n\n        if (r == undefined)\n            r = new MJS_FLOAT_ARRAY_TYPE(3);\n        r[0] = a[0] + b[0];\n        r[1] = a[1] + b[1];\n        r[2] = a[2] + b[2];\n        return r;\n    };\n\n    /*\n     * Function: V3.sub\n     *\n     * Perform\n     * r = a - b.\n     *\n     * Parameters:\n     *\n     *   a - the first vector operand\n     *   b - the second vector operand\n     *   r - optional vector to store the result in\n     *\n     * Returns:\n     *\n     *   If r is specified, returns r after performing the operation.\n     *   Otherwise, returns a new 3-element vector with the result.\n     */\n    V3.sub = function V3_sub(a, b, r) {\n        //MathUtils_assert(a.length == 3, \"a.length == 3\");\n        //MathUtils_assert(b.length == 3, \"b.length == 3\");\n        //MathUtils_assert(r == undefined || r.length == 3, \"r == undefined || r.length == 3\");\n\n        if (r == undefined)\n            r = new MJS_FLOAT_ARRAY_TYPE(3);\n        r[0] = a[0] - b[0];\n        r[1] = a[1] - b[1];\n        r[2] = a[2] - b[2];\n        return r;\n    };\n\n    /*\n     * Function: V3.neg\n     *\n     * Perform\n     * r = - a.\n     *\n     * Parameters:\n     *\n     *   a - the vector operand\n     *   r - optional vector to store the result in\n     *\n     * Returns:\n     *\n     *   If r is specified, returns r after performing the operation.\n     *   Otherwise, returns a new 3-element vector with the result.\n     */\n    V3.neg = function V3_neg(a, r) {\n        //MathUtils_assert(a.length == 3, \"a.length == 3\");\n        //MathUtils_assert(r == undefined || r.length == 3, \"r == undefined || r.length == 3\");\n\n        if (r == undefined)\n            r = new MJS_FLOAT_ARRAY_TYPE(3);\n        r[0] = - a[0];\n        r[1] = - a[1];\n        r[2] = - a[2];\n        return r;\n    };\n\n    /*\n     * Function: V3.direction\n     *\n     * Perform\n     * r = (a - b) / |a - b|.  The result is the normalized\n     * direction from a to b.\n     *\n     * Parameters:\n     *\n     *   a - the first vector operand\n     *   b - the second vector operand\n     *   r - optional vector to store the result in\n     *\n     * Returns:\n     *\n     *   If r is specified, returns r after performing the operation.\n     *   Otherwise, returns a new 3-element vector with the result.\n     */\n    V3.direction = function V3_direction(a, b, r) {\n        //MathUtils_assert(a.length == 3, \"a.length == 3\");\n        //MathUtils_assert(b.length == 3, \"b.length == 3\");\n        //MathUtils_assert(r == undefined || r.length == 3, \"r == undefined || r.length == 3\");\n\n        if (r == undefined)\n            r = new MJS_FLOAT_ARRAY_TYPE(3);\n        return V3.normalize(V3.sub(a, b, r), r);\n    };\n\n    /*\n     * Function: V3.length\n     *\n     * Perform r = |a|.\n     *\n     * Parameters:\n     *\n     *   a - the vector operand\n     *\n     * Returns:\n     *\n     *   The length of the given vector.\n     */\n    V3.length = function V3_length(a) {\n        //MathUtils_assert(a.length == 3, \"a.length == 3\");\n\n        return Math.sqrt(a[0]*a[0] + a[1]*a[1] + a[2]*a[2]);\n    };\n\n    /*\n     * Function: V3.lengthSquard\n     *\n     * Perform r = |a|*|a|.\n     *\n     * Parameters:\n     *\n     *   a - the vector operand\n     *\n     * Returns:\n     *\n     *   The square of the length of the given vector.\n     */\n    V3.lengthSquared = function V3_lengthSquared(a) {\n        //MathUtils_assert(a.length == 3, \"a.length == 3\");\n\n        return a[0]*a[0] + a[1]*a[1] + a[2]*a[2];\n    };\n\n    V3.distance = function V3_distance(a, b) {\n        var dx = a[0] - b[0];\n        var dy = a[1] - b[1];\n        var dz = a[2] - b[2];\n        return Math.sqrt(dx * dx + dy * dy + dz * dz);\n    };\n\n    V3.distanceSquared = function V3_distanceSquared(a, b) {\n        var dx = a[0] - b[0];\n        var dy = a[1] - b[1];\n        var dz = a[2] - b[2];\n        return dx * dx + dy * dy + dz * dz;\n    };\n\n    /*\n     * Function: V3.normalize\n     *\n     * Perform r = a / |a|.\n     *\n     * Parameters:\n     *\n     *   a - the vector operand\n     *   r - optional vector to store the result in\n     *\n     * Returns:\n     *\n     *   If r is specified, returns r after performing the operation.\n     *   Otherwise, returns a new 3-element vector with the result.\n     */\n    V3.normalize = function V3_normalize(a, r) {\n        //MathUtils_assert(a.length == 3, \"a.length == 3\");\n        //MathUtils_assert(r == undefined || r.length == 3, \"r == undefined || r.length == 3\");\n\n        if (r == undefined)\n            r = new MJS_FLOAT_ARRAY_TYPE(3);\n        var im = 1.0 / V3.length(a);\n        r[0] = a[0] * im;\n        r[1] = a[1] * im;\n        r[2] = a[2] * im;\n        return r;\n    };\n\n    /*\n     * Function: V3.scale\n     *\n     * Perform r = k * a.\n     *\n     * Parameters:\n     *\n     *   a - the vector operand\n     *   k - a scalar value\n     *   r - optional vector to store the result in\n     *\n     * Returns:\n     *\n     *   If r is specified, returns r after performing the operation.\n     *   Otherwise, returns a new 3-element vector with the result.\n     */\n    V3.scale = function V3_scale(k, a, r) {\n        //MathUtils_assert(a.length == 3, \"a.length == 3\");\n        //MathUtils_assert(r == undefined || r.length == 3, \"r == undefined || r.length == 3\");\n\n        if (r == undefined)\n            r = new MJS_FLOAT_ARRAY_TYPE(3);\n        r[0] = a[0] * k;\n        r[1] = a[1] * k;\n        r[2] = a[2] * k;\n        return r;\n    };\n\n    /*\n     * Function: V3.dot\n     *\n     * Perform\n     * r = dot(a, b).\n     *\n     * Parameters:\n     *\n     *   a - the first vector operand\n     *   b - the second vector operand\n     *\n     * Returns:\n     *\n     *   The dot product of a and b.\n     */\n    V3.dot = function V3_dot(a, b) {\n        //MathUtils_assert(a.length == 3, \"a.length == 3\");\n        //MathUtils_assert(b.length == 3, \"b.length == 3\");\n\n        return a[0] * b[0] +\n            a[1] * b[1] +\n            a[2] * b[2];\n    };\n\n    /*\n     * Function: V3.cross\n     *\n     * Perform r = a x b.\n     *\n     * Parameters:\n     *\n     *   a - the first vector operand\n     *   b - the second vector operand\n     *   r - optional vector to store the result in\n     *\n     * Returns:\n     *\n     *   If r is specified, returns r after performing the operation.\n     *   Otherwise, returns a new 3-element vector with the result.\n     */\n    V3.cross = function V3_cross(a, b, r) {\n        //MathUtils_assert(a.length == 3, \"a.length == 3\");\n        //MathUtils_assert(b.length == 3, \"b.length == 3\");\n        //MathUtils_assert(r == undefined || r.length == 3, \"r == undefined || r.length == 3\");\n\n        if (r == undefined)\n            r = new MJS_FLOAT_ARRAY_TYPE(3);\n        r[0] = a[1]*b[2] - a[2]*b[1];\n        r[1] = a[2]*b[0] - a[0]*b[2];\n        r[2] = a[0]*b[1] - a[1]*b[0];\n        return r;\n    };\n\n    /*\n     * Function: V3.mul4x4\n     *\n     * Perform\n     * r = m * v.\n     *\n     * Parameters:\n     *\n     *   m - the 4x4 matrix operand\n     *   v - the 3-element vector operand\n     *   r - optional vector to store the result in\n     *\n     * Returns:\n     *\n     *   If r is specified, returns r after performing the operation.\n     *   Otherwise, returns a new 3-element vector with the result.\n     *   The 4-element result vector is divided by the w component\n     *   and returned as a 3-element vector.\n     */\n    V3.mul4x4 = function V3_mul4x4(m, v, r) {\n        //MathUtils_assert(m.length == 16, \"m.length == 16\");\n        //MathUtils_assert(v.length == 3, \"v.length == 3\");\n        //MathUtils_assert(r == undefined || r.length == 3, \"r == undefined || r.length == 3\");\n\n        var w;\n        var tmp = V3._temp1;\n        if (r == undefined)\n            r = new MJS_FLOAT_ARRAY_TYPE(3);\n        tmp[0] = m[ 3];\n        tmp[1] = m[ 7];\n        tmp[2] = m[11];\n        w    =  V3.dot(v, tmp) + m[15];\n        tmp[0] = m[ 0];\n        tmp[1] = m[ 4];\n        tmp[2] = m[ 8];\n        r[0] = (V3.dot(v, tmp) + m[12])/w;\n        tmp[0] = m[ 1];\n        tmp[1] = m[ 5];\n        tmp[2] = m[ 9];\n        r[1] = (V3.dot(v, tmp) + m[13])/w;\n        tmp[0] = m[ 2];\n        tmp[1] = m[ 6];\n        tmp[2] = m[10];\n        r[2] = (V3.dot(v, tmp) + m[14])/w;\n        return r;\n    };\n\n    /*\n     * Class: M4x4\n     *\n     * Methods for working with 4x4 matrices.  A matrix is represented by a 16-element array\n     * in column-major order.  Any valid JavaScript array type may be used, but if new\n     * matrices are created they are created using the configured MJS_FLOAT_ARRAY_TYPE.\n     */\n\n    var M4x4 = { };\n\n    M4x4._temp1 = new MJS_FLOAT_ARRAY_TYPE(16);\n    M4x4._temp2 = new MJS_FLOAT_ARRAY_TYPE(16);\n\n    if (MJS_FLOAT_ARRAY_TYPE == Array) {\n        M4x4.I = [1.0, 0.0, 0.0, 0.0,\n            0.0, 1.0, 0.0, 0.0,\n                0.0, 0.0, 1.0, 0.0,\n                0.0, 0.0, 0.0, 1.0];\n\n        M4x4.$ = function M4x4_$(m00, m01, m02, m03,\n                m04, m05, m06, m07,\n                m08, m09, m10, m11,\n                m12, m13, m14, m15)\n        {\n            return [m00, m01, m02, m03,\n            m04, m05, m06, m07,\n            m08, m09, m10, m11,\n            m12, m13, m14, m15];\n        };\n    } else {\n        M4x4.I = new MJS_FLOAT_ARRAY_TYPE([1.0, 0.0, 0.0, 0.0,\n                0.0, 1.0, 0.0, 0.0,\n                0.0, 0.0, 1.0, 0.0,\n                0.0, 0.0, 0.0, 1.0]);\n\n        /*\n         * Function: M4x4.$\n         *\n         * Creates a new 4x4 matrix with the given values.\n         *\n         * Parameters:\n         *\n         *   m00..m15 - the 16 elements of the new matrix.\n         *\n         * Returns:\n         *\n         * A new matrix filled with the given argument values.\n         */\n        M4x4.$ = function M4x4_$(m00, m01, m02, m03,\n                m04, m05, m06, m07,\n                m08, m09, m10, m11,\n                m12, m13, m14, m15)\n        {\n            return new MJS_FLOAT_ARRAY_TYPE([m00, m01, m02, m03,\n                    m04, m05, m06, m07,\n                    m08, m09, m10, m11,\n                    m12, m13, m14, m15]);\n        };\n    }\n\n    M4x4.identity = M4x4.I;\n\n    /*\n     * Function: M4x4.fromList\n     *\n     * Creates a new 4x4 matrix with the given values.\n     *\n     * Parameters:\n     *\n     *   list - A list of the 16 elements of the new matrix.\n     *\n     * Returns:\n     *\n     * Just a new matrix filled with the given argument values.\n     * Nothing, if the length of the list is not exactly 16.\n     */\n    M4x4.fromList = function(list) {\n        var m = _elm_lang$core$Native_List.toArray(list);\n        if (m.length === 16) {\n            return _elm_lang$core$Maybe$Just(M4x4.$(m[0], m[1], m[2], m[3], m[4], m[5], m[6], m[7], m[8], m[9], m[10], m[11], m[12], m[13], m[14], m[15]));\n        } else {\n            return _elm_lang$core$Maybe$Nothing;\n        }\n    }\n\n    /*\n     * Function: M4x4.fromRecord\n     *\n     * Creates a new 4x4 matrix from the given record.\n     *\n     * Parameters:\n     *\n     * A record with m11..m44 attributes - the 16 elements of the new matrix\n     *\n     * Returns:\n     *\n     * A new matrix filled with the values from the given record.\n     */\n    M4x4.fromRecord = function(r) {\n        return new MJS_FLOAT_ARRAY_TYPE([\n            r.m11, r.m21, r.m31, r.m41,\n            r.m12, r.m22, r.m32, r.m42,\n            r.m13, r.m23, r.m33, r.m43,\n            r.m14, r.m24, r.m34, r.m44\n        ]);\n    }\n\n    /*\n     * Function: M4x4.toRecord\n     *\n     * Creates a record from the given matrix\n     *\n     * Parameters:\n     *\n     * A 4x4 matrix\n     *\n     * Returns:\n     *\n     * A new record with m11..m44 attributes - the 16 elements of the given matrix\n     */\n    M4x4.toRecord = function(m) {\n        return {\n            m11: m[0], m21: m[1], m31: m[2], m41: m[3],\n            m12: m[4], m22: m[5], m32: m[6], m42: m[7],\n            m13: m[8], m23: m[9], m33: m[10], m43: m[11],\n            m14: m[12], m24: m[13], m34: m[14], m44: m[15]\n        };\n    }\n\n    /*\n     * Function: M4x4.topLeft3x3\n     *\n     * Return the top left 3x3 matrix from the given 4x4 matrix m.\n     *\n     * Parameters:\n     *\n     *   m - the matrix\n     *   r - optional 3x3 matrix to store the result in\n     *\n     * Returns:\n     *\n     *   If r is specified, returns r after performing the operation.\n     *   Otherwise, returns a new 3x3 matrix with the result.\n     */\n    M4x4.topLeft3x3 = function M4x4_topLeft3x3(m, r) {\n        //MathUtils_assert(m.length == 16, \"m.length == 16\");\n        //MathUtils_assert(r == undefined || r.length == 9, \"r == undefined || r.length == 9\");\n\n        if (r == undefined)\n            r = new MJS_FLOAT_ARRAY_TYPE(9);\n        r[0] = m[0]; r[1] = m[1]; r[2] = m[2];\n        r[3] = m[4]; r[4] = m[5]; r[5] = m[6];\n        r[6] = m[8]; r[7] = m[9]; r[8] = m[10];\n        return r;\n    };\n\n    /*\n     * Function: M4x4.inverse\n     *\n     * Computes the inverse of the given matrix m.\n     *\n     * Parameters:\n     *\n     *   m - the matrix\n     *   r - optional 4x4 matrix to store the result in\n     *\n     * Returns:\n     *\n     *   If r is specified, returns r after performing the operation.\n     *   Otherwise, returns a new 4x4 matrix with the result.\n     */\n    M4x4.inverse = function M4x4_inverse(m, r) {\n        if (r == undefined) {\n            r = new MJS_FLOAT_ARRAY_TYPE(16);\n        }\n\n        r[0] = m[5] * m[10] * m[15] - m[5] * m[11] * m[14] - m[9] * m[6] * m[15] +\n            m[9] * m[7] * m[14] + m[13] * m[6] * m[11] - m[13] * m[7] * m[10];\n        r[4] = -m[4] * m[10] * m[15] + m[4] * m[11] * m[14] + m[8] * m[6] * m[15] -\n            m[8] * m[7] * m[14] - m[12] * m[6] * m[11] + m[12] * m[7] * m[10];\n        r[8] = m[4] * m[9] * m[15] - m[4] * m[11] * m[13] - m[8] * m[5] * m[15] +\n            m[8] * m[7] * m[13] + m[12] * m[5] * m[11] - m[12] * m[7] * m[9];\n        r[12] = -m[4] * m[9] * m[14] + m[4] * m[10] * m[13] + m[8] * m[5] * m[14] -\n            m[8] * m[6] * m[13] - m[12] * m[5] * m[10] + m[12] * m[6] * m[9];\n        r[1] = -m[1] * m[10] * m[15] + m[1] * m[11] * m[14] + m[9] * m[2] * m[15] -\n            m[9] * m[3] * m[14] - m[13] * m[2] * m[11] + m[13] * m[3] * m[10];\n        r[5] = m[0] * m[10] * m[15] - m[0] * m[11] * m[14] - m[8] * m[2] * m[15] +\n            m[8] * m[3] * m[14] + m[12] * m[2] * m[11] - m[12] * m[3] * m[10];\n        r[9] = -m[0] * m[9] * m[15] + m[0] * m[11] * m[13] + m[8] * m[1] * m[15] -\n            m[8] * m[3] * m[13] - m[12] * m[1] * m[11] + m[12] * m[3] * m[9];\n        r[13] = m[0] * m[9] * m[14] - m[0] * m[10] * m[13] - m[8] * m[1] * m[14] +\n            m[8] * m[2] * m[13] + m[12] * m[1] * m[10] - m[12] * m[2] * m[9];\n        r[2] = m[1] * m[6] * m[15] - m[1] * m[7] * m[14] - m[5] * m[2] * m[15] +\n            m[5] * m[3] * m[14] + m[13] * m[2] * m[7] - m[13] * m[3] * m[6];\n        r[6] = -m[0] * m[6] * m[15] + m[0] * m[7] * m[14] + m[4] * m[2] * m[15] -\n            m[4] * m[3] * m[14] - m[12] * m[2] * m[7] + m[12] * m[3] * m[6];\n        r[10] = m[0] * m[5] * m[15] - m[0] * m[7] * m[13] - m[4] * m[1] * m[15] +\n            m[4] * m[3] * m[13] + m[12] * m[1] * m[7] - m[12] * m[3] * m[5];\n        r[14] = -m[0] * m[5] * m[14] + m[0] * m[6] * m[13] + m[4] * m[1] * m[14] -\n            m[4] * m[2] * m[13] - m[12] * m[1] * m[6] + m[12] * m[2] * m[5];\n        r[3] = -m[1] * m[6] * m[11] + m[1] * m[7] * m[10] + m[5] * m[2] * m[11] -\n            m[5] * m[3] * m[10] - m[9] * m[2] * m[7] + m[9] * m[3] * m[6];\n        r[7] = m[0] * m[6] * m[11] - m[0] * m[7] * m[10] - m[4] * m[2] * m[11] +\n            m[4] * m[3] * m[10] + m[8] * m[2] * m[7] - m[8] * m[3] * m[6];\n        r[11] = -m[0] * m[5] * m[11] + m[0] * m[7] * m[9] + m[4] * m[1] * m[11] -\n            m[4] * m[3] * m[9] - m[8] * m[1] * m[7] + m[8] * m[3] * m[5];\n        r[15] = m[0] * m[5] * m[10] - m[0] * m[6] * m[9] - m[4] * m[1] * m[10] +\n            m[4] * m[2] * m[9] + m[8] * m[1] * m[6] - m[8] * m[2] * m[5];\n\n        var det = m[0] * r[0] + m[1] * r[4] + m[2] * r[8] + m[3] * r[12];\n\n        if (det === 0) {\n            return _elm_lang$core$Maybe$Nothing;\n        }\n\n        det = 1.0 / det;\n\n        for (var i = 0; i < 16; i = i + 1) {\n            r[i] = r[i] * det;\n        }\n\n        return _elm_lang$core$Maybe$Just(r);\n    };\n\n    /*\n     * Function: M4x4.inverseOrthonormal\n     *\n     * Computes the inverse of the given matrix m, assuming that\n     * the matrix is orthonormal.\n     *\n     * Parameters:\n     *\n     *   m - the matrix\n     *   r - optional 4x4 matrix to store the result in\n     *\n     * Returns:\n     *\n     *   If r is specified, returns r after performing the operation.\n     *   Otherwise, returns a new 4x4 matrix with the result.\n     */\n    M4x4.inverseOrthonormal = function M4x4_inverseOrthonormal(m, r) {\n        //MathUtils_assert(m.length == 16, \"m.length == 16\");\n        //MathUtils_assert(r == undefined || r.length == 16, \"r == undefined || r.length == 16\");\n        //MathUtils_assert(m != r, \"m != r\");\n\n        if (r == undefined)\n            r = new MJS_FLOAT_ARRAY_TYPE(16);\n        M4x4.transpose(m, r);\n        var t = [m[12], m[13], m[14]];\n        r[3] = r[7] = r[11] = 0;\n        r[12] = -V3.dot([r[0], r[4], r[8]], t);\n        r[13] = -V3.dot([r[1], r[5], r[9]], t);\n        r[14] = -V3.dot([r[2], r[6], r[10]], t);\n        return r;\n    };\n\n    /*\n     * Function: M4x4.inverseTo3x3\n     *\n     * Computes the inverse of the given matrix m, but calculates\n     * only the top left 3x3 values of the result.\n     *\n     * Parameters:\n     *\n     *   m - the matrix\n     *   r - optional 3x3 matrix to store the result in\n     *\n     * Returns:\n     *\n     *   If r is specified, returns r after performing the operation.\n     *   Otherwise, returns a new 3x3 matrix with the result.\n     */\n    M4x4.inverseTo3x3 = function M4x4_inverseTo3x3(m, r) {\n        //MathUtils_assert(m.length == 16, \"m.length == 16\");\n        //MathUtils_assert(r == undefined || r.length == 9, \"r == undefined || r.length == 9\");\n\n        if (r == undefined)\n            r = new MJS_FLOAT_ARRAY_TYPE(9);\n\n        var a11 = m[10]*m[5]-m[6]*m[9],\n            a21 = -m[10]*m[1]+m[2]*m[9],\n            a31 = m[6]*m[1]-m[2]*m[5],\n            a12 = -m[10]*m[4]+m[6]*m[8],\n            a22 = m[10]*m[0]-m[2]*m[8],\n            a32 = -m[6]*m[0]+m[2]*m[4],\n            a13 = m[9]*m[4]-m[5]*m[8],\n            a23 = -m[9]*m[0]+m[1]*m[8],\n            a33 = m[5]*m[0]-m[1]*m[4];\n        var det = m[0]*(a11) + m[1]*(a12) + m[2]*(a13);\n        if (det == 0) // no inverse\n            throw \"matrix not invertible\";\n        var idet = 1.0 / det;\n\n        r[0] = idet*a11;\n        r[1] = idet*a21;\n        r[2] = idet*a31;\n        r[3] = idet*a12;\n        r[4] = idet*a22;\n        r[5] = idet*a32;\n        r[6] = idet*a13;\n        r[7] = idet*a23;\n        r[8] = idet*a33;\n\n        return r;\n    };\n\n    /*\n     * Function: M4x4.makeFrustum\n     *\n     * Creates a matrix for a projection frustum with the given parameters.\n     *\n     * Parameters:\n     *\n     *   left - the left coordinate of the frustum\n     *   right- the right coordinate of the frustum\n     *   bottom - the bottom coordinate of the frustum\n     *   top - the top coordinate of the frustum\n     *   znear - the near z distance of the frustum\n     *   zfar - the far z distance of the frustum\n     *   r - optional 4x4 matrix to store the result in\n     *\n     * Returns:\n     *\n     *   If r is specified, returns r after creating the projection matrix.\n     *   Otherwise, returns a new 4x4 matrix.\n     */\n    M4x4.makeFrustum = function M4x4_makeFrustum(left, right, bottom, top, znear, zfar, r) {\n        //MathUtils_assert(r == undefined || r.length == 16, \"r == undefined || r.length == 16\");\n\n        if (r == undefined)\n            r = new MJS_FLOAT_ARRAY_TYPE(16);\n\n        var X = 2*znear/(right-left);\n        var Y = 2*znear/(top-bottom);\n        var A = (right+left)/(right-left);\n        var B = (top+bottom)/(top-bottom);\n        var C = -(zfar+znear)/(zfar-znear);\n        var D = -2*zfar*znear/(zfar-znear);\n\n        r[0] = 2*znear/(right-left);\n        r[1] = 0;\n        r[2] = 0;\n        r[3] = 0;\n        r[4] = 0;\n        r[5] = 2*znear/(top-bottom);\n        r[6] = 0;\n        r[7] = 0;\n        r[8] = (right+left)/(right-left);\n        r[9] = (top+bottom)/(top-bottom);\n        r[10] = -(zfar+znear)/(zfar-znear);\n        r[11] = -1;\n        r[12] = 0;\n        r[13] = 0;\n        r[14] = -2*zfar*znear/(zfar-znear);\n        r[15] = 0;\n\n        return r;\n    };\n\n    /*\n     * Function: M4x4.makePerspective\n     *\n     * Creates a matrix for a perspective projection with the given parameters.\n     *\n     * Parameters:\n     *\n     *   fovy - field of view in the y axis, in degrees\n     *   aspect - aspect ratio\n     *   znear - the near z distance of the projection\n     *   zfar - the far z distance of the projection\n     *   r - optional 4x4 matrix to store the result in\n     *\n     * Returns:\n     *\n     *   If r is specified, returns r after creating the projection matrix.\n     *   Otherwise, returns a new 4x4 matrix.\n     */\n    M4x4.makePerspective = function M4x4_makePerspective (fovy, aspect, znear, zfar, r) {\n        //MathUtils_assert(r == undefined || r.length == 16, \"r == undefined || r.length == 16\");\n\n        var ymax = znear * Math.tan(fovy * Math.PI / 360.0);\n        var ymin = -ymax;\n        var xmin = ymin * aspect;\n        var xmax = ymax * aspect;\n\n        return M4x4.makeFrustum(xmin, xmax, ymin, ymax, znear, zfar, r);\n    };\n\n    /*\n     * Function: M4x4.makeOrtho\n     *\n     * Creates a matrix for an orthogonal frustum projection with the given parameters.\n     *\n     * Parameters:\n     *\n     *   left - the left coordinate of the frustum\n     *   right- the right coordinate of the frustum\n     *   bottom - the bottom coordinate of the frustum\n     *   top - the top coordinate of the frustum\n     *   znear - the near z distance of the frustum\n     *   zfar - the far z distance of the frustum\n     *   r - optional 4x4 matrix to store the result in\n     *\n     * Returns:\n     *\n     *   If r is specified, returns r after creating the projection matrix.\n     *   Otherwise, returns a new 4x4 matrix.\n     */\n    M4x4.makeOrtho = function M4x4_makeOrtho (left, right, bottom, top, znear, zfar, r) {\n        //MathUtils_assert(r == undefined || r.length == 16, \"r == undefined || r.length == 16\");\n\n        if (r == undefined)\n            r = new MJS_FLOAT_ARRAY_TYPE(16);\n\n        var tX = -(right+left)/(right-left);\n        var tY = -(top+bottom)/(top-bottom);\n        var tZ = -(zfar+znear)/(zfar-znear);\n        var X = 2 / (right-left);\n        var Y = 2 / (top-bottom);\n        var Z = -2 / (zfar-znear);\n\n        r[0] = 2 / (right-left);\n        r[1] = 0;\n        r[2] = 0;\n        r[3] = 0;\n        r[4] = 0;\n        r[5] = 2 / (top-bottom);\n        r[6] = 0;\n        r[7] = 0;\n        r[8] = 0;\n        r[9] = 0;\n        r[10] = -2 / (zfar-znear);\n        r[11] = 0;\n        r[12] = -(right+left)/(right-left);\n        r[13] = -(top+bottom)/(top-bottom);\n        r[14] = -(zfar+znear)/(zfar-znear);\n        r[15] = 1;\n\n        return r;\n    };\n\n    /*\n     * Function: M4x4.makeOrtho2D\n     *\n     * Creates a matrix for a 2D orthogonal frustum projection with the given parameters.\n     * znear and zfar are assumed to be -1 and 1, respectively.\n     *\n     * Parameters:\n     *\n     *   left - the left coordinate of the frustum\n     *   right- the right coordinate of the frustum\n     *   bottom - the bottom coordinate of the frustum\n     *   top - the top coordinate of the frustum\n     *   r - optional 4x4 matrix to store the result in\n     *\n     * Returns:\n     *\n     *   If r is specified, returns r after creating the projection matrix.\n     *   Otherwise, returns a new 4x4 matrix.\n     */\n    M4x4.makeOrtho2D = function M4x4_makeOrtho2D (left, right, bottom, top, r) {\n        //MathUtils_assert(r == undefined || r.length == 16, \"r == undefined || r.length == 16\");\n\n        return M4x4.makeOrtho(left, right, bottom, top, -1, 1, r);\n    };\n\n    /*\n     * Function: M4x4.mul\n     *\n     * Performs r = a * b.\n     *\n     * Parameters:\n     *\n     *   a - the first matrix operand\n     *   b - the second matrix operand\n     *   r - optional 4x4 matrix to store the result in\n     *\n     * Returns:\n     *\n     *   If r is specified, returns r after performing the operation.\n     *   Otherwise, returns a new 4x4 matrix with the result.\n     */\n    M4x4.mul = function M4x4_mul(a, b, r) {\n        //MathUtils_assert(a.length == 16, \"a.length == 16\");\n        //MathUtils_assert(b.length == 16, \"b.length == 16\");\n        //MathUtils_assert(r == undefined || r.length == 16, \"r == undefined || r.length == 16\");\n        //MathUtils_assert(a != r && b != r, \"a != r && b != r\");\n\n        if (r == undefined)\n            r = new MJS_FLOAT_ARRAY_TYPE(16);\n\n        var a11 = a[0];\n        var a21 = a[1];\n        var a31 = a[2];\n        var a41 = a[3];\n        var a12 = a[4];\n        var a22 = a[5];\n        var a32 = a[6];\n        var a42 = a[7];\n        var a13 = a[8];\n        var a23 = a[9];\n        var a33 = a[10];\n        var a43 = a[11];\n        var a14 = a[12];\n        var a24 = a[13];\n        var a34 = a[14];\n        var a44 = a[15];\n\n        var b11 = b[0];\n        var b21 = b[1];\n        var b31 = b[2];\n        var b41 = b[3];\n        var b12 = b[4];\n        var b22 = b[5];\n        var b32 = b[6];\n        var b42 = b[7];\n        var b13 = b[8];\n        var b23 = b[9];\n        var b33 = b[10];\n        var b43 = b[11];\n        var b14 = b[12];\n        var b24 = b[13];\n        var b34 = b[14];\n        var b44 = b[15];\n\n        r[0] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n        r[1] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n        r[2] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n        r[3] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n        r[4] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n        r[5] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n        r[6] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n        r[7] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n        r[8] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n        r[9] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n        r[10] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n        r[11] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n        r[12] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n        r[13] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n        r[14] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n        r[15] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n        return r;\n    };\n\n    /*\n     * Function: M4x4.mulAffine\n     *\n     * Performs r = a * b, assuming a and b are affine (elements 3,7,11,15 = 0,0,0,1)\n     *\n     * Parameters:\n     *\n     *   a - the first matrix operand\n     *   b - the second matrix operand\n     *   r - optional 4x4 matrix to store the result in\n     *\n     * Returns:\n     *\n     *   If r is specified, returns r after performing the operation.\n     *   Otherwise, returns a new 4x4 matrix with the result.\n     */\n    M4x4.mulAffine = function M4x4_mulAffine(a, b, r) {\n        //MathUtils_assert(a.length == 16, \"a.length == 16\");\n        //MathUtils_assert(b.length == 16, \"b.length == 16\");\n        //MathUtils_assert(r == undefined || r.length == 16, \"r == undefined || r.length == 16\");\n        //MathUtils_assert(a != r && b != r, \"a != r && b != r\");\n\n        if (r == undefined)\n            r = new MJS_FLOAT_ARRAY_TYPE(16);\n        var a11 = a[0];\n        var a21 = a[1];\n        var a31 = a[2];\n        var a12 = a[4];\n        var a22 = a[5];\n        var a32 = a[6];\n        var a13 = a[8];\n        var a23 = a[9];\n        var a33 = a[10];\n        var a14 = a[12];\n        var a24 = a[13];\n        var a34 = a[14];\n\n        var b11 = b[0];\n        var b21 = b[1];\n        var b31 = b[2];\n        var b12 = b[4];\n        var b22 = b[5];\n        var b32 = b[6];\n        var b13 = b[8];\n        var b23 = b[9];\n        var b33 = b[10];\n        var b14 = b[12];\n        var b24 = b[13];\n        var b34 = b[14];\n\n        r[0] = a11 * b11 + a12 * b21 + a13 * b31;\n        r[1] = a21 * b11 + a22 * b21 + a23 * b31;\n        r[2] = a31 * b11 + a32 * b21 + a33 * b31;\n        r[3] = 0;\n        r[4] = a11 * b12 + a12 * b22 + a13 * b32;\n        r[5] = a21 * b12 + a22 * b22 + a23 * b32;\n        r[6] = a31 * b12 + a32 * b22 + a33 * b32;\n        r[7] = 0;\n        r[8] = a11 * b13 + a12 * b23 + a13 * b33;\n        r[9] = a21 * b13 + a22 * b23 + a23 * b33;\n        r[10] = a31 * b13 + a32 * b23 + a33 * b33;\n        r[11] = 0;\n        r[12] = a11 * b14 + a12 * b24 + a13 * b34 + a14;\n        r[13] = a21 * b14 + a22 * b24 + a23 * b34 + a24;\n        r[14] = a31 * b14 + a32 * b24 + a33 * b34 + a34;\n        r[15] = 1;\n\n        return r;\n    };\n\n    /*\n     * Function: M4x4.makeRotate\n     *\n     * Creates a transformation matrix for rotation by angle radians about the 3-element vector axis.\n     *\n     * Parameters:\n     *\n     *   angle - the angle of rotation, in radians\n     *   axis - the axis around which the rotation is performed, a 3-element vector\n     *   r - optional 4x4 matrix to store the result in\n     *\n     * Returns:\n     *\n     *   If r is specified, returns r after creating the matrix.\n     *   Otherwise, returns a new 4x4 matrix with the result.\n     */\n    M4x4.makeRotate = function M4x4_makeRotate(angle, axis, r) {\n        //MathUtils_assert(angle.length == 3, \"angle.length == 3\");\n        //MathUtils_assert(axis.length == 3, \"axis.length == 3\");\n        //MathUtils_assert(r == undefined || r.length == 16, \"r == undefined || r.length == 16\");\n\n        if (r == undefined)\n            r = new MJS_FLOAT_ARRAY_TYPE(16);\n\n        axis = V3.normalize(axis, V3._temp1);\n        var x = axis[0], y = axis[1], z = axis[2];\n        var c = Math.cos(angle);\n        var c1 = 1-c;\n        var s = Math.sin(angle);\n\n        r[0] = x*x*c1+c;\n        r[1] = y*x*c1+z*s;\n        r[2] = z*x*c1-y*s;\n        r[3] = 0;\n        r[4] = x*y*c1-z*s;\n        r[5] = y*y*c1+c;\n        r[6] = y*z*c1+x*s;\n        r[7] = 0;\n        r[8] = x*z*c1+y*s;\n        r[9] = y*z*c1-x*s;\n        r[10] = z*z*c1+c;\n        r[11] = 0;\n        r[12] = 0;\n        r[13] = 0;\n        r[14] = 0;\n        r[15] = 1;\n\n        return r;\n    };\n\n    /*\n     * Function: M4x4.rotate\n     *\n     * Concatenates a rotation of angle radians about the axis to the give matrix m.\n     *\n     * Parameters:\n     *\n     *   angle - the angle of rotation, in radians\n     *   axis - the axis around which the rotation is performed, a 3-element vector\n     *   m - the matrix to concatenate the rotation to\n     *   r - optional 4x4 matrix to store the result in\n     *\n     * Returns:\n     *\n     *   If r is specified, returns r after performing the operation.\n     *   Otherwise, returns a new 4x4 matrix with the result.\n     */\n    M4x4.rotate = function M4x4_rotate(angle, axis, m, r) {\n        //MathUtils_assert(angle.length == 3, \"angle.length == 3\");\n        //MathUtils_assert(axis.length == 3, \"axis.length == 3\");\n        //MathUtils_assert(m.length == 16, \"m.length == 16\");\n        //MathUtils_assert(r == undefined || r.length == 16, \"r == undefined || r.length == 16\");\n\n        if (r == undefined)\n            r = new MJS_FLOAT_ARRAY_TYPE(16);\n        var a0=axis [0], a1=axis [1], a2=axis [2];\n        var l = Math.sqrt(a0*a0 + a1*a1 + a2*a2);\n        var x = a0, y = a1, z = a2;\n        if (l != 1.0) {\n            var im = 1.0 / l;\n            x *= im;\n            y *= im;\n            z *= im;\n        }\n        var c = Math.cos(angle);\n        var c1 = 1-c;\n        var s = Math.sin(angle);\n        var xs = x*s;\n        var ys = y*s;\n        var zs = z*s;\n        var xyc1 = x * y * c1;\n        var xzc1 = x * z * c1;\n        var yzc1 = y * z * c1;\n\n        var m11 = m[0];\n        var m21 = m[1];\n        var m31 = m[2];\n        var m41 = m[3];\n        var m12 = m[4];\n        var m22 = m[5];\n        var m32 = m[6];\n        var m42 = m[7];\n        var m13 = m[8];\n        var m23 = m[9];\n        var m33 = m[10];\n        var m43 = m[11];\n\n        var t11 = x * x * c1 + c;\n        var t21 = xyc1 + zs;\n        var t31 = xzc1 - ys;\n        var t12 = xyc1 - zs;\n        var t22 = y * y * c1 + c;\n        var t32 = yzc1 + xs;\n        var t13 = xzc1 + ys;\n        var t23 = yzc1 - xs;\n        var t33 = z * z * c1 + c;\n\n        r[0] = m11 * t11 + m12 * t21 + m13 * t31;\n        r[1] = m21 * t11 + m22 * t21 + m23 * t31;\n        r[2] = m31 * t11 + m32 * t21 + m33 * t31;\n        r[3] = m41 * t11 + m42 * t21 + m43 * t31;\n        r[4] = m11 * t12 + m12 * t22 + m13 * t32;\n        r[5] = m21 * t12 + m22 * t22 + m23 * t32;\n        r[6] = m31 * t12 + m32 * t22 + m33 * t32;\n        r[7] = m41 * t12 + m42 * t22 + m43 * t32;\n        r[8] = m11 * t13 + m12 * t23 + m13 * t33;\n        r[9] = m21 * t13 + m22 * t23 + m23 * t33;\n        r[10] = m31 * t13 + m32 * t23 + m33 * t33;\n        r[11] = m41 * t13 + m42 * t23 + m43 * t33;\n        if (r != m) {\n            r[12] = m[12];\n            r[13] = m[13];\n            r[14] = m[14];\n            r[15] = m[15];\n        }\n        return r;\n    };\n\n    /*\n     * Function: M4x4.makeScale3\n     *\n     * Creates a transformation matrix for scaling by 3 scalar values, one for\n     * each of the x, y, and z directions.\n     *\n     * Parameters:\n     *\n     *   x - the scale for the x axis\n     *   y - the scale for the y axis\n     *   z - the scale for the z axis\n     *   r - optional 4x4 matrix to store the result in\n     *\n     * Returns:\n     *\n     *   If r is specified, returns r after creating the matrix.\n     *   Otherwise, returns a new 4x4 matrix with the result.\n     */\n    M4x4.makeScale3 = function M4x4_makeScale3(x, y, z, r) {\n        //MathUtils_assert(r == undefined || r.length == 16, \"r == undefined || r.length == 16\");\n\n        if (r == undefined)\n            r = new MJS_FLOAT_ARRAY_TYPE(16);\n\n        r[0] = x;\n        r[1] = 0;\n        r[2] = 0;\n        r[3] = 0;\n        r[4] = 0;\n        r[5] = y;\n        r[6] = 0;\n        r[7] = 0;\n        r[8] = 0;\n        r[9] = 0;\n        r[10] = z;\n        r[11] = 0;\n        r[12] = 0;\n        r[13] = 0;\n        r[14] = 0;\n        r[15] = 1;\n\n        return r;\n    };\n\n    /*\n     * Function: M4x4.makeScale1\n     *\n     * Creates a transformation matrix for a uniform scale by a single scalar value.\n     *\n     * Parameters:\n     *\n     *   k - the scale factor\n     *   r - optional 4x4 matrix to store the result in\n     *\n     * Returns:\n     *\n     *   If r is specified, returns r after creating the matrix.\n     *   Otherwise, returns a new 4x4 matrix with the result.\n     */\n    M4x4.makeScale1 = function M4x4_makeScale1(k, r) {\n        //MathUtils_assert(r == undefined || r.length == 16, \"r == undefined || r.length == 16\");\n\n        return M4x4.makeScale3(k, k, k, r);\n    };\n\n    /*\n     * Function: M4x4.makeScale\n     *\n     * Creates a transformation matrix for scaling each of the x, y, and z axes by the amount\n     * given in the corresponding element of the 3-element vector.\n     *\n     * Parameters:\n     *\n     *   v - the 3-element vector containing the scale factors\n     *   r - optional 4x4 matrix to store the result in\n     *\n     * Returns:\n     *\n     *   If r is specified, returns r after creating the matrix.\n     *   Otherwise, returns a new 4x4 matrix with the result.\n     */\n    M4x4.makeScale = function M4x4_makeScale(v, r) {\n        //MathUtils_assert(v.length == 3, \"v.length == 3\");\n        //MathUtils_assert(r == undefined || r.length == 16, \"r == undefined || r.length == 16\");\n\n        return M4x4.makeScale3(v[0], v[1], v[2], r);\n    };\n\n    /*\n     * Function: M4x4.scale3\n     */\n    M4x4.scale3 = function M4x4_scale3(x, y, z, m, r) {\n        //MathUtils_assert(m.length == 16, \"m.length == 16\");\n        //MathUtils_assert(r == undefined || r.length == 16, \"r == undefined || r.length == 16\");\n\n        if (r == m) {\n            m[0] *= x;\n            m[1] *= x;\n            m[2] *= x;\n            m[3] *= x;\n            m[4] *= y;\n            m[5] *= y;\n            m[6] *= y;\n            m[7] *= y;\n            m[8] *= z;\n            m[9] *= z;\n            m[10] *= z;\n            m[11] *= z;\n            return m;\n        }\n\n        if (r == undefined)\n            r = new MJS_FLOAT_ARRAY_TYPE(16);\n\n        r[0] = m[0] * x;\n        r[1] = m[1] * x;\n        r[2] = m[2] * x;\n        r[3] = m[3] * x;\n        r[4] = m[4] * y;\n        r[5] = m[5] * y;\n        r[6] = m[6] * y;\n        r[7] = m[7] * y;\n        r[8] = m[8] * z;\n        r[9] = m[9] * z;\n        r[10] = m[10] * z;\n        r[11] = m[11] * z;\n        r[12] = m[12];\n        r[13] = m[13];\n        r[14] = m[14];\n        r[15] = m[15];\n\n        return r;\n    };\n\n    /*\n     * Function: M4x4.scale1\n     */\n    M4x4.scale1 = function M4x4_scale1(k, m, r) {\n        //MathUtils_assert(m.length == 16, \"m.length == 16\");\n        //MathUtils_assert(r == undefined || r.length == 16, \"r == undefined || r.length == 16\");\n        if (r == m) {\n            m[0] *= k;\n            m[1] *= k;\n            m[2] *= k;\n            m[3] *= k;\n            m[4] *= k;\n            m[5] *= k;\n            m[6] *= k;\n            m[7] *= k;\n            m[8] *= k;\n            m[9] *= k;\n            m[10] *= k;\n            m[11] *= k;\n            return m;\n        }\n\n\n        if (r == undefined)\n            r = new MJS_FLOAT_ARRAY_TYPE(16);\n\n        r[0] = m[0] * k;\n        r[1] = m[1] * k;\n        r[2] = m[2] * k;\n        r[3] = m[3] * k;\n        r[4] = m[4] * k;\n        r[5] = m[5] * k;\n        r[6] = m[6] * k;\n        r[7] = m[7] * k;\n        r[8] = m[8] * k;\n        r[9] = m[9] * k;\n        r[10] = m[10] * k;\n        r[11] = m[11] * k;\n        r[12] = m[12];\n        r[13] = m[13];\n        r[14] = m[14];\n        r[15] = m[15];\n\n        return r;\n    };\n\n    /*\n     * Function: M4x4.scale1\n     */\n    M4x4.scale = function M4x4_scale(v, m, r) {\n        //MathUtils_assert(v.length == 3, \"v.length == 3\");\n        //MathUtils_assert(m.length == 16, \"m.length == 16\");\n        //MathUtils_assert(r == undefined || r.length == 16, \"r == undefined || r.length == 16\");\n        var x = v[0], y = v[1], z = v[2];\n\n        if (r == m) {\n            m[0] *= x;\n            m[1] *= x;\n            m[2] *= x;\n            m[3] *= x;\n            m[4] *= y;\n            m[5] *= y;\n            m[6] *= y;\n            m[7] *= y;\n            m[8] *= z;\n            m[9] *= z;\n            m[10] *= z;\n            m[11] *= z;\n            return m;\n        }\n\n        if (r == undefined)\n            r = new MJS_FLOAT_ARRAY_TYPE(16);\n\n\n        r[0] = m[0] * x;\n        r[1] = m[1] * x;\n        r[2] = m[2] * x;\n        r[3] = m[3] * x;\n        r[4] = m[4] * y;\n        r[5] = m[5] * y;\n        r[6] = m[6] * y;\n        r[7] = m[7] * y;\n        r[8] = m[8] * z;\n        r[9] = m[9] * z;\n        r[10] = m[10] * z;\n        r[11] = m[11] * z;\n        r[12] = m[12];\n        r[13] = m[13];\n        r[14] = m[14];\n        r[15] = m[15];\n\n        return r;\n    };\n\n    /*\n     * Function: M4x4.makeTranslate3\n     */\n    M4x4.makeTranslate3 = function M4x4_makeTranslate3(x, y, z, r) {\n        //MathUtils_assert(r == undefined || r.length == 16, \"r == undefined || r.length == 16\");\n\n        if (r == undefined)\n            r = new MJS_FLOAT_ARRAY_TYPE(16);\n\n        r[0] = 1;\n        r[1] = 0;\n        r[2] = 0;\n        r[3] = 0;\n        r[4] = 0;\n        r[5] = 1;\n        r[6] = 0;\n        r[7] = 0;\n        r[8] = 0;\n        r[9] = 0;\n        r[10] = 1;\n        r[11] = 0;\n        r[12] = x;\n        r[13] = y;\n        r[14] = z;\n        r[15] = 1;\n\n        return r;\n    };\n\n    /*\n     * Function: M4x4.makeTranslate1\n     */\n    M4x4.makeTranslate1 = function M4x4_makeTranslate1 (k, r) {\n        //MathUtils_assert(r == undefined || r.length == 16, \"r == undefined || r.length == 16\");\n\n        return M4x4.makeTranslate3(k, k, k, r);\n    };\n\n    /*\n     * Function: M4x4.makeTranslate\n     */\n    M4x4.makeTranslate = function M4x4_makeTranslate (v, r) {\n        //MathUtils_assert(v.length == 3, \"v.length == 3\");\n        //MathUtils_assert(r == undefined || r.length == 16, \"r == undefined || r.length == 16\");\n\n        return M4x4.makeTranslate3(v[0], v[1], v[2], r);\n    };\n\n    /*\n     * Function: M4x4.translate3Self\n     */\n    M4x4.translate3Self = function M4x4_translate3Self (x, y, z, m) {\n        //MathUtils_assert(m.length == 16, \"m.length == 16\");\n        //MathUtils_assert(r == undefined || r.length == 16, \"r == undefined || r.length == 16\");\n        m[12] += m[0] * x + m[4] * y + m[8] * z;\n        m[13] += m[1] * x + m[5] * y + m[9] * z;\n        m[14] += m[2] * x + m[6] * y + m[10] * z;\n        m[15] += m[3] * x + m[7] * y + m[11] * z;\n        return m;\n    };\n\n    /*\n     * Function: M4x4.translate3\n     */\n    M4x4.translate3 = function M4x4_translate3 (x, y, z, m, r) {\n        //MathUtils_assert(m.length == 16, \"m.length == 16\");\n        //MathUtils_assert(r == undefined || r.length == 16, \"r == undefined || r.length == 16\");\n\n        if (r == m) {\n            m[12] += m[0] * x + m[4] * y + m[8] * z;\n            m[13] += m[1] * x + m[5] * y + m[9] * z;\n            m[14] += m[2] * x + m[6] * y + m[10] * z;\n            m[15] += m[3] * x + m[7] * y + m[11] * z;\n            return m;\n        }\n\n        if (r == undefined)\n            r = new MJS_FLOAT_ARRAY_TYPE(16);\n\n        var m11 = m[0];\n        var m21 = m[1];\n        var m31 = m[2];\n        var m41 = m[3];\n        var m12 = m[4];\n        var m22 = m[5];\n        var m32 = m[6];\n        var m42 = m[7];\n        var m13 = m[8];\n        var m23 = m[9];\n        var m33 = m[10];\n        var m43 = m[11];\n\n\n        r[0] = m11;\n        r[1] = m21;\n        r[2] = m31;\n        r[3] = m41;\n        r[4] = m12;\n        r[5] = m22;\n        r[6] = m32;\n        r[7] = m42;\n        r[8] = m13;\n        r[9] = m23;\n        r[10] = m33;\n        r[11] = m43;\n        r[12] = m11 * x + m12 * y + m13 * z + m[12];\n        r[13] = m21 * x + m22 * y + m23 * z + m[13];\n        r[14] = m31 * x + m32 * y + m33 * z + m[14];\n        r[15] = m41 * x + m42 * y + m43 * z + m[15];\n\n        return r;\n    };\n\n    /*\n     * Function: M4x4.translate1\n     */\n    M4x4.translate1 = function M4x4_translate1 (k, m, r) {\n        //MathUtils_assert(m.length == 16, \"m.length == 16\");\n        //MathUtils_assert(r == undefined || r.length == 16, \"r == undefined || r.length == 16\");\n\n        return M4x4.translate3(k, k, k, m, r);\n    };\n    /*\n     * Function: M4x4.translateSelf\n     */\n    M4x4.translateSelf = function M4x4_translateSelf (v, m) {\n        //MathUtils_assert(v.length == 3, \"v.length == 3\");\n        //MathUtils_assert(m.length == 16, \"m.length == 16\");\n        var x=v[0], y=v[1], z=v[2];\n        m[12] += m[0] * x + m[4] * y + m[8] * z;\n        m[13] += m[1] * x + m[5] * y + m[9] * z;\n        m[14] += m[2] * x + m[6] * y + m[10] * z;\n        m[15] += m[3] * x + m[7] * y + m[11] * z;\n        return m;\n    };\n    /*\n     * Function: M4x4.translate\n     */\n    M4x4.translate = function M4x4_translate (v, m, r) {\n        //MathUtils_assert(v.length == 3, \"v.length == 3\");\n        //MathUtils_assert(m.length == 16, \"m.length == 16\");\n        //MathUtils_assert(r == undefined || r.length == 16, \"r == undefined || r.length == 16\");\n        var x=v[0], y=v[1], z=v[2];\n        if (r == m) {\n            m[12] += m[0] * x + m[4] * y + m[8] * z;\n            m[13] += m[1] * x + m[5] * y + m[9] * z;\n            m[14] += m[2] * x + m[6] * y + m[10] * z;\n            m[15] += m[3] * x + m[7] * y + m[11] * z;\n            return m;\n        }\n\n        if (r == undefined)\n            r = new MJS_FLOAT_ARRAY_TYPE(16);\n\n        var m11 = m[0];\n        var m21 = m[1];\n        var m31 = m[2];\n        var m41 = m[3];\n        var m12 = m[4];\n        var m22 = m[5];\n        var m32 = m[6];\n        var m42 = m[7];\n        var m13 = m[8];\n        var m23 = m[9];\n        var m33 = m[10];\n        var m43 = m[11];\n\n        r[0] = m11;\n        r[1] = m21;\n        r[2] = m31;\n        r[3] = m41;\n        r[4] = m12;\n        r[5] = m22;\n        r[6] = m32;\n        r[7] = m42;\n        r[8] = m13;\n        r[9] = m23;\n        r[10] = m33;\n        r[11] = m43;\n        r[12] = m11 * x + m12 * y + m13 * z + m[12];\n        r[13] = m21 * x + m22 * y + m23 * z + m[13];\n        r[14] = m31 * x + m32 * y + m33 * z + m[14];\n        r[15] = m41 * x + m42 * y + m43 * z + m[15];\n\n        return r;\n    };\n\n    /*\n     * Function: M4x4.makeLookAt\n     */\n    M4x4.makeLookAt = function M4x4_makeLookAt (eye, center, up, r) {\n        //MathUtils_assert(eye.length == 3, \"eye.length == 3\");\n        //MathUtils_assert(center.length == 3, \"center.length == 3\");\n        //MathUtils_assert(up.length == 3, \"up.length == 3\");\n        //MathUtils_assert(r == undefined || r.length == 16, \"r == undefined || r.length == 16\");\n\n        var z = V3.direction(eye, center, V3._temp1);\n        var x = V3.normalize(V3.cross(up, z, V3._temp2), V3._temp2);\n        var y = V3.normalize(V3.cross(z, x, V3._temp3), V3._temp3);\n\n        var tm1 = M4x4._temp1;\n        var tm2 = M4x4._temp2;\n\n        tm1[0] = x[0];\n        tm1[1] = y[0];\n        tm1[2] = z[0];\n        tm1[3] = 0;\n        tm1[4] = x[1];\n        tm1[5] = y[1];\n        tm1[6] = z[1];\n        tm1[7] = 0;\n        tm1[8] = x[2];\n        tm1[9] = y[2];\n        tm1[10] = z[2];\n        tm1[11] = 0;\n        tm1[12] = 0;\n        tm1[13] = 0;\n        tm1[14] = 0;\n        tm1[15] = 1;\n\n        tm2[0] = 1; tm2[1] = 0; tm2[2] = 0; tm2[3] = 0;\n        tm2[4] = 0; tm2[5] = 1; tm2[6] = 0; tm2[7] = 0;\n        tm2[8] = 0; tm2[9] = 0; tm2[10] = 1; tm2[11] = 0;\n        tm2[12] = -eye[0]; tm2[13] = -eye[1]; tm2[14] = -eye[2]; tm2[15] = 1;\n\n        if (r == undefined)\n            r = new MJS_FLOAT_ARRAY_TYPE(16);\n        return M4x4.mul(tm1, tm2, r);\n    };\n\n    /*\n     * Function: M4x4.transposeSelf\n     */\n    M4x4.transposeSelf = function M4x4_transposeSelf (m) {\n        //MathUtils_assert(m.length == 16, \"m.length == 16\");\n        var tmp = m[1]; m[1] = m[4]; m[4] = tmp;\n        tmp = m[2]; m[2] = m[8]; m[8] = tmp;\n        tmp = m[3]; m[3] = m[12]; m[12] = tmp;\n        tmp = m[6]; m[6] = m[9]; m[9] = tmp;\n        tmp = m[7]; m[7] = m[13]; m[13] = tmp;\n        tmp = m[11]; m[11] = m[14]; m[14] = tmp;\n        return m;\n    };\n    /*\n     * Function: M4x4.transpose\n     */\n    M4x4.transpose = function M4x4_transpose (m, r) {\n        //MathUtils_assert(m.length == 16, \"m.length == 16\");\n        //MathUtils_assert(r == undefined || r.length == 16, \"r == undefined || r.length == 16\");\n\n        if (m == r) {\n            var tmp = 0.0;\n            tmp = m[1]; m[1] = m[4]; m[4] = tmp;\n            tmp = m[2]; m[2] = m[8]; m[8] = tmp;\n            tmp = m[3]; m[3] = m[12]; m[12] = tmp;\n            tmp = m[6]; m[6] = m[9]; m[9] = tmp;\n            tmp = m[7]; m[7] = m[13]; m[13] = tmp;\n            tmp = m[11]; m[11] = m[14]; m[14] = tmp;\n            return m;\n        }\n\n        if (r == undefined)\n            r = new MJS_FLOAT_ARRAY_TYPE(16);\n\n        r[0] = m[0]; r[1] = m[4]; r[2] = m[8]; r[3] = m[12];\n        r[4] = m[1]; r[5] = m[5]; r[6] = m[9]; r[7] = m[13];\n        r[8] = m[2]; r[9] = m[6]; r[10] = m[10]; r[11] = m[14];\n        r[12] = m[3]; r[13] = m[7]; r[14] = m[11]; r[15] = m[15];\n\n        return r;\n    };\n\n\n    /*\n     * Function: M4x4.transformPoint\n     */\n    M4x4.transformPoint = function M4x4_transformPoint (m, v, r) {\n        //MathUtils_assert(m.length == 16, \"m.length == 16\");\n        //MathUtils_assert(v.length == 3, \"v.length == 3\");\n        //MathUtils_assert(r == undefined || r.length == 3, \"r == undefined || r.length == 3\");\n        if (r == undefined)\n            r = new MJS_FLOAT_ARRAY_TYPE(3);\n\n        var v0 = v[0], v1 = v[1], v2 = v[2];\n\n        r[0] = m[0] * v0 + m[4] * v1 + m[8] * v2 + m[12];\n        r[1] = m[1] * v0 + m[5] * v1 + m[9] * v2 + m[13];\n        r[2] = m[2] * v0 + m[6] * v1 + m[10] * v2 + m[14];\n        var w = m[3] * v0 + m[7] * v1 + m[11] * v2 + m[15];\n\n        if (w != 1.0) {\n            r[0] /= w;\n            r[1] /= w;\n            r[2] /= w;\n        }\n\n        return r;\n    };\n\n    /*\n     * Function: M4x4.transformLine\n     */\n    M4x4.transformLine = function M4x4_transformLine(m, v, r) {\n        //MathUtils_assert(m.length == 16, \"m.length == 16\");\n        //MathUtils_assert(v.length == 3, \"v.length == 3\");\n        //MathUtils_assert(r == undefined || r.length == 3, \"r == undefined || r.length == 3\");\n        if (r == undefined)\n            r = new MJS_FLOAT_ARRAY_TYPE(3);\n\n        var v0 = v[0], v1 = v[1], v2 = v[2];\n        r[0] = m[0] * v0 + m[4] * v1 + m[8] * v2;\n        r[1] = m[1] * v0 + m[5] * v1 + m[9] * v2;\n        r[2] = m[2] * v0 + m[6] * v1 + m[10] * v2;\n        var w = m[3] * v0 + m[7] * v1 + m[11] * v2;\n\n        if (w != 1.0) {\n            r[0] /= w;\n            r[1] /= w;\n            r[2] /= w;\n        }\n\n        return r;\n    };\n\n\n    /*\n     * Function: M4x4.transformPointAffine\n     */\n    M4x4.transformPointAffine = function M4x4_transformPointAffine (m, v, r) {\n        //MathUtils_assert(m.length == 16, \"m.length == 16\");\n        //MathUtils_assert(v.length == 3, \"v.length == 3\");\n        //MathUtils_assert(r == undefined || r.length == 3, \"r == undefined || r.length == 3\");\n        if (r == undefined)\n            r = new MJS_FLOAT_ARRAY_TYPE(3);\n\n        var v0 = v[0], v1 = v[1], v2 = v[2];\n\n        r[0] = m[0] * v0 + m[4] * v1 + m[8] * v2 + m[12];\n        r[1] = m[1] * v0 + m[5] * v1 + m[9] * v2 + m[13];\n        r[2] = m[2] * v0 + m[6] * v1 + m[10] * v2 + m[14];\n\n        return r;\n    };\n\n    /*\n     * Function: M4x4.transformLineAffine\n     */\n    M4x4.transformLineAffine = function M4x4_transformLineAffine(m, v, r) {\n        //MathUtils_assert(m.length == 16, \"m.length == 16\");\n        //MathUtils_assert(v.length == 3, \"v.length == 3\");\n        //MathUtils_assert(r == undefined || r.length == 3, \"r == undefined || r.length == 3\");\n        if (r == undefined)\n            r = new MJS_FLOAT_ARRAY_TYPE(3);\n\n        var v0 = v[0], v1 = v[1], v2 = v[2];\n        r[0] = m[0] * v0 + m[4] * v1 + m[8] * v2;\n        r[1] = m[1] * v0 + m[5] * v1 + m[9] * v2;\n        r[2] = m[2] * v0 + m[6] * v1 + m[10] * v2;\n\n        return r;\n    };\n\n    M4x4.makeBasis = function M4x4_makeBasis(vx,vy,vz) {\n\n        var r = new MJS_FLOAT_ARRAY_TYPE(16);\n\n        r[0] = vx[0];\n        r[1] = vx[1];\n        r[2] = vx[2];\n        r[3] = 0;\n        r[4] = vy[0];\n        r[5] = vy[1];\n        r[6] = vy[2];\n        r[7] = 0;\n        r[8] = vz[0];\n        r[9] = vz[1];\n        r[10] = vz[2];\n        r[11] = 0;\n        r[12] = 0;\n        r[13] = 0;\n        r[14] = 0;\n        r[15] = 1;\n\n        return r;\n\n    };\n\n    return {\n        vec3: F3(V3.$),\n        v3getX: V3.getX,\n        v3getY: V3.getY,\n        v3getZ: V3.getZ,\n        v3setX: F2(V3.setX),\n        v3setY: F2(V3.setY),\n        v3setZ: F2(V3.setZ),\n        toTuple3: V3.toTuple3,\n        toRecord3: V3.toRecord3,\n        fromTuple3: V3.fromTuple3,\n        fromRecord3: V3.fromRecord3,\n        v3add: F2(V3.add),\n        v3sub: F2(V3.sub),\n        v3neg: V3.neg,\n        v3direction: F2(V3.direction),\n        v3length: V3.length,\n        v3lengthSquared: V3.lengthSquared,\n        v3distance: F2(V3.distance),\n        v3distanceSquared: F2(V3.distanceSquared),\n        v3normalize: V3.normalize,\n        v3scale: F2(V3.scale),\n        v3dot: F2(V3.dot),\n        v3cross: F2(V3.cross),\n        v3mul4x4: F2(V3.mul4x4),\n        m4x4fromList: M4x4.fromList,\n        m4x4fromRecord: M4x4.fromRecord,\n        m4x4toRecord: M4x4.toRecord,\n        m4x4identity: M4x4.identity,\n        m4x4topLeft3x3: M4x4.topLeft3x3,\n        m4x4inverse: M4x4.inverse,\n        m4x4inverseOrthonormal: M4x4.inverseOrthonormal,\n        m4x4inverseTo3x3: M4x4.inverseTo3x3,\n        m4x4makeFrustum: F6(M4x4.makeFrustum),\n        m4x4makePerspective: F4(M4x4.makePerspective),\n        m4x4makeOrtho: F6(M4x4.makeOrtho),\n        m4x4makeOrtho2D: F4(M4x4.makeOrtho2D),\n        m4x4mul: F2(M4x4.mul),\n        m4x4Affine: F2(M4x4.mulAffine),\n        m4x4makeRotate: F2(M4x4.makeRotate),\n        m4x4rotate: F3(M4x4.rotate),\n        m4x4makeScale3: F3(M4x4.makeScale3),\n        m4x4makeScale1: M4x4.makeScale1,\n        m4x4makeScale: M4x4.makeScale,\n        m4x4scale3: F4(M4x4.scale3),\n        m4x4scale: F2(M4x4.scale),\n        m4x4makeTranslate3: F3(M4x4.makeTranslate3),\n        m4x4makeTranslate: M4x4.makeTranslate,\n        m4x4translate3: F4(M4x4.translate3),\n        m4x4translate: F2(M4x4.translate),\n        m4x4makeLookAt: F3(M4x4.makeLookAt),\n        m4x4transpose: M4x4.transpose,\n        m4x4transformPoint: F2(M4x4.transformPoint),\n        m4x4makeBasis: F3(M4x4.makeBasis)\n    };\n\n}();\n\nvar _elm_community$linear_algebra$Math_Vector3$cross = _elm_community$linear_algebra$Native_MJS.v3cross;\nvar _elm_community$linear_algebra$Math_Vector3$dot = _elm_community$linear_algebra$Native_MJS.v3dot;\nvar _elm_community$linear_algebra$Math_Vector3$scale = _elm_community$linear_algebra$Native_MJS.v3scale;\nvar _elm_community$linear_algebra$Math_Vector3$normalize = _elm_community$linear_algebra$Native_MJS.v3normalize;\nvar _elm_community$linear_algebra$Math_Vector3$distanceSquared = _elm_community$linear_algebra$Native_MJS.v3distanceSquared;\nvar _elm_community$linear_algebra$Math_Vector3$distance = _elm_community$linear_algebra$Native_MJS.v3distance;\nvar _elm_community$linear_algebra$Math_Vector3$lengthSquared = _elm_community$linear_algebra$Native_MJS.v3lengthSquared;\nvar _elm_community$linear_algebra$Math_Vector3$length = _elm_community$linear_algebra$Native_MJS.v3length;\nvar _elm_community$linear_algebra$Math_Vector3$direction = _elm_community$linear_algebra$Native_MJS.v3direction;\nvar _elm_community$linear_algebra$Math_Vector3$negate = _elm_community$linear_algebra$Native_MJS.v3neg;\nvar _elm_community$linear_algebra$Math_Vector3$sub = _elm_community$linear_algebra$Native_MJS.v3sub;\nvar _elm_community$linear_algebra$Math_Vector3$add = _elm_community$linear_algebra$Native_MJS.v3add;\nvar _elm_community$linear_algebra$Math_Vector3$fromRecord = _elm_community$linear_algebra$Native_MJS.fromRecord3;\nvar _elm_community$linear_algebra$Math_Vector3$fromTuple = _elm_community$linear_algebra$Native_MJS.fromTuple3;\nvar _elm_community$linear_algebra$Math_Vector3$toRecord = _elm_community$linear_algebra$Native_MJS.toRecord3;\nvar _elm_community$linear_algebra$Math_Vector3$toTuple = _elm_community$linear_algebra$Native_MJS.toTuple3;\nvar _elm_community$linear_algebra$Math_Vector3$setZ = _elm_community$linear_algebra$Native_MJS.v3setZ;\nvar _elm_community$linear_algebra$Math_Vector3$setY = _elm_community$linear_algebra$Native_MJS.v3setY;\nvar _elm_community$linear_algebra$Math_Vector3$setX = _elm_community$linear_algebra$Native_MJS.v3setX;\nvar _elm_community$linear_algebra$Math_Vector3$getZ = _elm_community$linear_algebra$Native_MJS.v3getZ;\nvar _elm_community$linear_algebra$Math_Vector3$getY = _elm_community$linear_algebra$Native_MJS.v3getY;\nvar _elm_community$linear_algebra$Math_Vector3$getX = _elm_community$linear_algebra$Native_MJS.v3getX;\nvar _elm_community$linear_algebra$Math_Vector3$k = A3(_elm_community$linear_algebra$Native_MJS.vec3, 0, 0, 1);\nvar _elm_community$linear_algebra$Math_Vector3$j = A3(_elm_community$linear_algebra$Native_MJS.vec3, 0, 1, 0);\nvar _elm_community$linear_algebra$Math_Vector3$i = A3(_elm_community$linear_algebra$Native_MJS.vec3, 1, 0, 0);\nvar _elm_community$linear_algebra$Math_Vector3$vec3 = _elm_community$linear_algebra$Native_MJS.vec3;\nvar _elm_community$linear_algebra$Math_Vector3$Vec3 = {ctor: 'Vec3'};\n\nvar _elm_community$linear_algebra$Math_Matrix4$fromRecord = _elm_community$linear_algebra$Native_MJS.m4x4fromRecord;\nvar _elm_community$linear_algebra$Math_Matrix4$toRecord = _elm_community$linear_algebra$Native_MJS.m4x4toRecord;\nvar _elm_community$linear_algebra$Math_Matrix4$makeFromList = _elm_community$linear_algebra$Native_MJS.m4x4fromList;\nvar _elm_community$linear_algebra$Math_Matrix4$makeBasis = _elm_community$linear_algebra$Native_MJS.m4x4makeBasis;\nvar _elm_community$linear_algebra$Math_Matrix4$transpose = _elm_community$linear_algebra$Native_MJS.m4x4transpose;\nvar _elm_community$linear_algebra$Math_Matrix4$makeLookAt = _elm_community$linear_algebra$Native_MJS.m4x4makeLookAt;\nvar _elm_community$linear_algebra$Math_Matrix4$translate = _elm_community$linear_algebra$Native_MJS.m4x4translate;\nvar _elm_community$linear_algebra$Math_Matrix4$translate3 = _elm_community$linear_algebra$Native_MJS.m4x4translate3;\nvar _elm_community$linear_algebra$Math_Matrix4$makeTranslate = _elm_community$linear_algebra$Native_MJS.m4x4makeTranslate;\nvar _elm_community$linear_algebra$Math_Matrix4$makeTranslate3 = _elm_community$linear_algebra$Native_MJS.m4x4makeTranslate3;\nvar _elm_community$linear_algebra$Math_Matrix4$scale = _elm_community$linear_algebra$Native_MJS.m4x4scale;\nvar _elm_community$linear_algebra$Math_Matrix4$scale3 = _elm_community$linear_algebra$Native_MJS.m4x4scale3;\nvar _elm_community$linear_algebra$Math_Matrix4$makeScale = _elm_community$linear_algebra$Native_MJS.m4x4makeScale;\nvar _elm_community$linear_algebra$Math_Matrix4$makeScale3 = _elm_community$linear_algebra$Native_MJS.m4x4makeScale3;\nvar _elm_community$linear_algebra$Math_Matrix4$rotate = _elm_community$linear_algebra$Native_MJS.m4x4rotate;\nvar _elm_community$linear_algebra$Math_Matrix4$makeRotate = _elm_community$linear_algebra$Native_MJS.m4x4makeRotate;\nvar _elm_community$linear_algebra$Math_Matrix4$mulAffine = _elm_community$linear_algebra$Native_MJS.m4x4mulAffine;\nvar _elm_community$linear_algebra$Math_Matrix4$mul = _elm_community$linear_algebra$Native_MJS.m4x4mul;\nvar _elm_community$linear_algebra$Math_Matrix4$makeOrtho2D = _elm_community$linear_algebra$Native_MJS.m4x4makeOrtho2D;\nvar _elm_community$linear_algebra$Math_Matrix4$makeOrtho = _elm_community$linear_algebra$Native_MJS.m4x4makeOrtho;\nvar _elm_community$linear_algebra$Math_Matrix4$makePerspective = _elm_community$linear_algebra$Native_MJS.m4x4makePerspective;\nvar _elm_community$linear_algebra$Math_Matrix4$makeFrustum = _elm_community$linear_algebra$Native_MJS.m4x4makeFrustum;\nvar _elm_community$linear_algebra$Math_Matrix4$inverseOrthonormal = _elm_community$linear_algebra$Native_MJS.m4x4inverseOrthonormal;\nvar _elm_community$linear_algebra$Math_Matrix4$inverse = _elm_community$linear_algebra$Native_MJS.m4x4inverse;\nvar _elm_community$linear_algebra$Math_Matrix4$identity = _elm_community$linear_algebra$Native_MJS.m4x4identity;\nvar _elm_community$linear_algebra$Math_Matrix4$transform = _elm_community$linear_algebra$Native_MJS.v3mul4x4;\nvar _elm_community$linear_algebra$Math_Matrix4$Mat4 = {ctor: 'Mat4'};\n\n\n/*\n * Copyright (c) 2010 Mozilla Corporation\n * Copyright (c) 2010 Vladimir Vukicevic\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/*\n * File: mjs\n *\n * Vector and Matrix math utilities for JavaScript, optimized for WebGL.\n * Edited to work with the Elm Programming Language\n */\n\nvar _elm_community$linear_algebra$Native_Math_Vector4 = function() {\n\n    var MJS_FLOAT_ARRAY_TYPE = Float32Array;\n\n    var V4 = { };\n\n    if (MJS_FLOAT_ARRAY_TYPE == Array) {\n        V4.$ = function V4_$(x, y, z, w) {\n            return [x, y, z, w];\n        };\n    } else {\n        V4.$ = function V4_$(x, y, z, w) {\n            return new MJS_FLOAT_ARRAY_TYPE([x, y, z, w]);\n        };\n    }\n\n    V4.getX = function V4_getX(a) {\n        return a[0];\n    }\n    V4.getY = function V4_getY(a) {\n        return a[1];\n    }\n    V4.getZ = function V4_getZ(a) {\n        return a[2];\n    }\n    V4.getW = function V4_getW(a) {\n        return a[3];\n    }\n    V4.setX = function V4_setX(x, a) {\n        return new MJS_FLOAT_ARRAY_TYPE([x, a[1], a[2], a[3]]);\n    }\n    V4.setY = function V4_setY(y, a) {\n        return new MJS_FLOAT_ARRAY_TYPE([a[0], y, a[2], a[3]]);\n    }\n    V4.setZ = function V4_setZ(z, a) {\n        return new MJS_FLOAT_ARRAY_TYPE([a[0], a[1], z, a[3]]);\n    }\n    V4.setW = function V4_setW(w, a) {\n        return new MJS_FLOAT_ARRAY_TYPE([a[0], a[1], a[2], w]);\n    }\n\n    V4.toTuple = function V4_toTuple(a) {\n        return {\n            ctor:\"_Tuple4\",\n            _0:a[0],\n            _1:a[1],\n            _2:a[2],\n            _3:a[3]\n        };\n    };\n    V4.fromTuple = function V4_fromTuple(t) {\n        return new MJS_FLOAT_ARRAY_TYPE([t._0, t._1, t._2, t._3]);\n    };\n\n    V4.toRecord = function V4_toRecord(a) {\n        return {\n            _:{},\n            x:a[0],\n            y:a[1],\n            z:a[2],\n            w:a[3]\n        };\n    };\n    V4.fromRecord = function V4_fromRecord(r) {\n        return new MJS_FLOAT_ARRAY_TYPE([r.x, r.y, r.z, r.w]);\n    };\n\n    V4.add = function V4_add(a, b) {\n        var r = new MJS_FLOAT_ARRAY_TYPE(4);\n        r[0] = a[0] + b[0];\n        r[1] = a[1] + b[1];\n        r[2] = a[2] + b[2];\n        r[3] = a[3] + b[3];\n        return r;\n    };\n\n    V4.sub = function V4_sub(a, b) {\n        var r = new MJS_FLOAT_ARRAY_TYPE(4);\n        r[0] = a[0] - b[0];\n        r[1] = a[1] - b[1];\n        r[2] = a[2] - b[2];\n        r[3] = a[3] - b[3];\n        return r;\n    };\n\n    V4.neg = function V4_neg(a) {\n        var r = new MJS_FLOAT_ARRAY_TYPE(4);\n        r[0] = - a[0];\n        r[1] = - a[1];\n        r[2] = - a[2];\n        r[3] = - a[3];\n        return r;\n    };\n\n    V4.direction = function V4_direction(a, b) {\n        var r = new MJS_FLOAT_ARRAY_TYPE(4);\n        r[0] = a[0] - b[0];\n        r[1] = a[1] - b[1];\n        r[2] = a[2] - b[2];\n        r[3] = a[3] - b[3];\n        var im = 1.0 / V4.length(r);\n        r[0] = r[0] * im;\n        r[1] = r[1] * im;\n        r[2] = r[2] * im;\n        r[3] = r[3] * im;\n        return r;\n    };\n\n    V4.length = function V4_length(a) {\n        return Math.sqrt(a[0]*a[0] + a[1]*a[1] + a[2]*a[2] + a[3]*a[3]);\n    };\n\n    V4.lengthSquared = function V4_lengthSquared(a) {\n        return a[0]*a[0] + a[1]*a[1] + a[2]*a[2] + a[3]*a[3];\n    };\n\n    V4.distance = function V4_distance(a, b) {\n        var dx = a[0] - b[0];\n        var dy = a[1] - b[1];\n        var dz = a[2] - b[2];\n        var dw = a[3] - b[3];\n        return Math.sqrt(dx * dx + dy * dy + dz * dz + dw * dw);\n    };\n\n    V4.distanceSquared = function V4_distanceSquared(a, b) {\n        var dx = a[0] - b[0];\n        var dy = a[1] - b[1];\n        var dz = a[2] - b[2];\n        var dw = a[3] - b[3];\n        return dx * dx + dy * dy + dz * dz + dw * dw;\n    };\n\n    V4.normalize = function V4_normalize(a) {\n        var r = new MJS_FLOAT_ARRAY_TYPE(4);\n        var im = 1.0 / V4.length(a);\n        r[0] = a[0] * im;\n        r[1] = a[1] * im;\n        r[2] = a[2] * im;\n        r[3] = a[3] * im;\n        return r;\n    };\n\n    V4.scale = function V4_scale(k, a) {\n        var r = new MJS_FLOAT_ARRAY_TYPE(4);\n        r[0] = a[0] * k;\n        r[1] = a[1] * k;\n        r[2] = a[2] * k;\n        r[3] = a[3] * k;\n        return r;\n    };\n\n    V4.dot = function V4_dot(a, b) {\n        return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n    };\n\n    return {\n        vec4: F4(V4.$),\n        getX: V4.getX,\n        getY: V4.getY,\n        getZ: V4.getZ,\n        getW: V4.getW,\n        setX: F2(V4.setX),\n        setY: F2(V4.setY),\n        setZ: F2(V4.setZ),\n        setW: F2(V4.setW),\n        toTuple: V4.toTuple,\n        toRecord: V4.toRecord,\n        fromTuple: V4.fromTuple,\n        fromRecord: V4.fromRecord,\n        add: F2(V4.add),\n        sub: F2(V4.sub),\n        neg: V4.neg,\n        direction: F2(V4.direction),\n        length: V4.length,\n        lengthSquared: V4.lengthSquared,\n        distance: F2(V4.distance),\n        distanceSquared: F2(V4.distanceSquared),\n        normalize: V4.normalize,\n        scale: F2(V4.scale),\n        dot: F2(V4.dot)\n    };\n\n}();\n\nvar _elm_community$linear_algebra$Math_Vector4$dot = _elm_community$linear_algebra$Native_Math_Vector4.dot;\nvar _elm_community$linear_algebra$Math_Vector4$scale = _elm_community$linear_algebra$Native_Math_Vector4.scale;\nvar _elm_community$linear_algebra$Math_Vector4$normalize = _elm_community$linear_algebra$Native_Math_Vector4.normalize;\nvar _elm_community$linear_algebra$Math_Vector4$distanceSquared = _elm_community$linear_algebra$Native_Math_Vector4.distanceSquared;\nvar _elm_community$linear_algebra$Math_Vector4$distance = _elm_community$linear_algebra$Native_Math_Vector4.distance;\nvar _elm_community$linear_algebra$Math_Vector4$lengthSquared = _elm_community$linear_algebra$Native_Math_Vector4.lengthSquared;\nvar _elm_community$linear_algebra$Math_Vector4$length = _elm_community$linear_algebra$Native_Math_Vector4.length;\nvar _elm_community$linear_algebra$Math_Vector4$direction = _elm_community$linear_algebra$Native_Math_Vector4.direction;\nvar _elm_community$linear_algebra$Math_Vector4$negate = _elm_community$linear_algebra$Native_Math_Vector4.neg;\nvar _elm_community$linear_algebra$Math_Vector4$sub = _elm_community$linear_algebra$Native_Math_Vector4.sub;\nvar _elm_community$linear_algebra$Math_Vector4$add = _elm_community$linear_algebra$Native_Math_Vector4.add;\nvar _elm_community$linear_algebra$Math_Vector4$fromRecord = _elm_community$linear_algebra$Native_Math_Vector4.fromRecord;\nvar _elm_community$linear_algebra$Math_Vector4$fromTuple = _elm_community$linear_algebra$Native_Math_Vector4.fromTuple;\nvar _elm_community$linear_algebra$Math_Vector4$toRecord = _elm_community$linear_algebra$Native_Math_Vector4.toRecord;\nvar _elm_community$linear_algebra$Math_Vector4$toTuple = _elm_community$linear_algebra$Native_Math_Vector4.toTuple;\nvar _elm_community$linear_algebra$Math_Vector4$setW = _elm_community$linear_algebra$Native_Math_Vector4.setW;\nvar _elm_community$linear_algebra$Math_Vector4$setZ = _elm_community$linear_algebra$Native_Math_Vector4.setZ;\nvar _elm_community$linear_algebra$Math_Vector4$setY = _elm_community$linear_algebra$Native_Math_Vector4.setY;\nvar _elm_community$linear_algebra$Math_Vector4$setX = _elm_community$linear_algebra$Native_Math_Vector4.setX;\nvar _elm_community$linear_algebra$Math_Vector4$getW = _elm_community$linear_algebra$Native_Math_Vector4.getW;\nvar _elm_community$linear_algebra$Math_Vector4$getZ = _elm_community$linear_algebra$Native_Math_Vector4.getZ;\nvar _elm_community$linear_algebra$Math_Vector4$getY = _elm_community$linear_algebra$Native_Math_Vector4.getY;\nvar _elm_community$linear_algebra$Math_Vector4$getX = _elm_community$linear_algebra$Native_Math_Vector4.getX;\nvar _elm_community$linear_algebra$Math_Vector4$vec4 = _elm_community$linear_algebra$Native_Math_Vector4.vec4;\nvar _elm_community$linear_algebra$Math_Vector4$Vec4 = {ctor: 'Vec4'};\n\nvar _elm_lang$core$Random$onSelfMsg = F3(\n\tfunction (_p1, _p0, seed) {\n\t\treturn _elm_lang$core$Task$succeed(seed);\n\t});\nvar _elm_lang$core$Random$magicNum8 = 2147483562;\nvar _elm_lang$core$Random$range = function (_p2) {\n\treturn {ctor: '_Tuple2', _0: 0, _1: _elm_lang$core$Random$magicNum8};\n};\nvar _elm_lang$core$Random$magicNum7 = 2147483399;\nvar _elm_lang$core$Random$magicNum6 = 2147483563;\nvar _elm_lang$core$Random$magicNum5 = 3791;\nvar _elm_lang$core$Random$magicNum4 = 40692;\nvar _elm_lang$core$Random$magicNum3 = 52774;\nvar _elm_lang$core$Random$magicNum2 = 12211;\nvar _elm_lang$core$Random$magicNum1 = 53668;\nvar _elm_lang$core$Random$magicNum0 = 40014;\nvar _elm_lang$core$Random$step = F2(\n\tfunction (_p3, seed) {\n\t\tvar _p4 = _p3;\n\t\treturn _p4._0(seed);\n\t});\nvar _elm_lang$core$Random$onEffects = F3(\n\tfunction (router, commands, seed) {\n\t\tvar _p5 = commands;\n\t\tif (_p5.ctor === '[]') {\n\t\t\treturn _elm_lang$core$Task$succeed(seed);\n\t\t} else {\n\t\t\tvar _p6 = A2(_elm_lang$core$Random$step, _p5._0._0, seed);\n\t\t\tvar value = _p6._0;\n\t\t\tvar newSeed = _p6._1;\n\t\t\treturn A2(\n\t\t\t\t_elm_lang$core$Task$andThen,\n\t\t\t\tfunction (_p7) {\n\t\t\t\t\treturn A3(_elm_lang$core$Random$onEffects, router, _p5._1, newSeed);\n\t\t\t\t},\n\t\t\t\tA2(_elm_lang$core$Platform$sendToApp, router, value));\n\t\t}\n\t});\nvar _elm_lang$core$Random$listHelp = F4(\n\tfunction (list, n, generate, seed) {\n\t\tlistHelp:\n\t\twhile (true) {\n\t\t\tif (_elm_lang$core$Native_Utils.cmp(n, 1) < 0) {\n\t\t\t\treturn {\n\t\t\t\t\tctor: '_Tuple2',\n\t\t\t\t\t_0: _elm_lang$core$List$reverse(list),\n\t\t\t\t\t_1: seed\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tvar _p8 = generate(seed);\n\t\t\t\tvar value = _p8._0;\n\t\t\t\tvar newSeed = _p8._1;\n\t\t\t\tvar _v2 = {ctor: '::', _0: value, _1: list},\n\t\t\t\t\t_v3 = n - 1,\n\t\t\t\t\t_v4 = generate,\n\t\t\t\t\t_v5 = newSeed;\n\t\t\t\tlist = _v2;\n\t\t\t\tn = _v3;\n\t\t\t\tgenerate = _v4;\n\t\t\t\tseed = _v5;\n\t\t\t\tcontinue listHelp;\n\t\t\t}\n\t\t}\n\t});\nvar _elm_lang$core$Random$minInt = -2147483648;\nvar _elm_lang$core$Random$maxInt = 2147483647;\nvar _elm_lang$core$Random$iLogBase = F2(\n\tfunction (b, i) {\n\t\treturn (_elm_lang$core$Native_Utils.cmp(i, b) < 0) ? 1 : (1 + A2(_elm_lang$core$Random$iLogBase, b, (i / b) | 0));\n\t});\nvar _elm_lang$core$Random$command = _elm_lang$core$Native_Platform.leaf('Random');\nvar _elm_lang$core$Random$Generator = function (a) {\n\treturn {ctor: 'Generator', _0: a};\n};\nvar _elm_lang$core$Random$list = F2(\n\tfunction (n, _p9) {\n\t\tvar _p10 = _p9;\n\t\treturn _elm_lang$core$Random$Generator(\n\t\t\tfunction (seed) {\n\t\t\t\treturn A4(\n\t\t\t\t\t_elm_lang$core$Random$listHelp,\n\t\t\t\t\t{ctor: '[]'},\n\t\t\t\t\tn,\n\t\t\t\t\t_p10._0,\n\t\t\t\t\tseed);\n\t\t\t});\n\t});\nvar _elm_lang$core$Random$map = F2(\n\tfunction (func, _p11) {\n\t\tvar _p12 = _p11;\n\t\treturn _elm_lang$core$Random$Generator(\n\t\t\tfunction (seed0) {\n\t\t\t\tvar _p13 = _p12._0(seed0);\n\t\t\t\tvar a = _p13._0;\n\t\t\t\tvar seed1 = _p13._1;\n\t\t\t\treturn {\n\t\t\t\t\tctor: '_Tuple2',\n\t\t\t\t\t_0: func(a),\n\t\t\t\t\t_1: seed1\n\t\t\t\t};\n\t\t\t});\n\t});\nvar _elm_lang$core$Random$map2 = F3(\n\tfunction (func, _p15, _p14) {\n\t\tvar _p16 = _p15;\n\t\tvar _p17 = _p14;\n\t\treturn _elm_lang$core$Random$Generator(\n\t\t\tfunction (seed0) {\n\t\t\t\tvar _p18 = _p16._0(seed0);\n\t\t\t\tvar a = _p18._0;\n\t\t\t\tvar seed1 = _p18._1;\n\t\t\t\tvar _p19 = _p17._0(seed1);\n\t\t\t\tvar b = _p19._0;\n\t\t\t\tvar seed2 = _p19._1;\n\t\t\t\treturn {\n\t\t\t\t\tctor: '_Tuple2',\n\t\t\t\t\t_0: A2(func, a, b),\n\t\t\t\t\t_1: seed2\n\t\t\t\t};\n\t\t\t});\n\t});\nvar _elm_lang$core$Random$pair = F2(\n\tfunction (genA, genB) {\n\t\treturn A3(\n\t\t\t_elm_lang$core$Random$map2,\n\t\t\tF2(\n\t\t\t\tfunction (v0, v1) {\n\t\t\t\t\treturn {ctor: '_Tuple2', _0: v0, _1: v1};\n\t\t\t\t}),\n\t\t\tgenA,\n\t\t\tgenB);\n\t});\nvar _elm_lang$core$Random$map3 = F4(\n\tfunction (func, _p22, _p21, _p20) {\n\t\tvar _p23 = _p22;\n\t\tvar _p24 = _p21;\n\t\tvar _p25 = _p20;\n\t\treturn _elm_lang$core$Random$Generator(\n\t\t\tfunction (seed0) {\n\t\t\t\tvar _p26 = _p23._0(seed0);\n\t\t\t\tvar a = _p26._0;\n\t\t\t\tvar seed1 = _p26._1;\n\t\t\t\tvar _p27 = _p24._0(seed1);\n\t\t\t\tvar b = _p27._0;\n\t\t\t\tvar seed2 = _p27._1;\n\t\t\t\tvar _p28 = _p25._0(seed2);\n\t\t\t\tvar c = _p28._0;\n\t\t\t\tvar seed3 = _p28._1;\n\t\t\t\treturn {\n\t\t\t\t\tctor: '_Tuple2',\n\t\t\t\t\t_0: A3(func, a, b, c),\n\t\t\t\t\t_1: seed3\n\t\t\t\t};\n\t\t\t});\n\t});\nvar _elm_lang$core$Random$map4 = F5(\n\tfunction (func, _p32, _p31, _p30, _p29) {\n\t\tvar _p33 = _p32;\n\t\tvar _p34 = _p31;\n\t\tvar _p35 = _p30;\n\t\tvar _p36 = _p29;\n\t\treturn _elm_lang$core$Random$Generator(\n\t\t\tfunction (seed0) {\n\t\t\t\tvar _p37 = _p33._0(seed0);\n\t\t\t\tvar a = _p37._0;\n\t\t\t\tvar seed1 = _p37._1;\n\t\t\t\tvar _p38 = _p34._0(seed1);\n\t\t\t\tvar b = _p38._0;\n\t\t\t\tvar seed2 = _p38._1;\n\t\t\t\tvar _p39 = _p35._0(seed2);\n\t\t\t\tvar c = _p39._0;\n\t\t\t\tvar seed3 = _p39._1;\n\t\t\t\tvar _p40 = _p36._0(seed3);\n\t\t\t\tvar d = _p40._0;\n\t\t\t\tvar seed4 = _p40._1;\n\t\t\t\treturn {\n\t\t\t\t\tctor: '_Tuple2',\n\t\t\t\t\t_0: A4(func, a, b, c, d),\n\t\t\t\t\t_1: seed4\n\t\t\t\t};\n\t\t\t});\n\t});\nvar _elm_lang$core$Random$map5 = F6(\n\tfunction (func, _p45, _p44, _p43, _p42, _p41) {\n\t\tvar _p46 = _p45;\n\t\tvar _p47 = _p44;\n\t\tvar _p48 = _p43;\n\t\tvar _p49 = _p42;\n\t\tvar _p50 = _p41;\n\t\treturn _elm_lang$core$Random$Generator(\n\t\t\tfunction (seed0) {\n\t\t\t\tvar _p51 = _p46._0(seed0);\n\t\t\t\tvar a = _p51._0;\n\t\t\t\tvar seed1 = _p51._1;\n\t\t\t\tvar _p52 = _p47._0(seed1);\n\t\t\t\tvar b = _p52._0;\n\t\t\t\tvar seed2 = _p52._1;\n\t\t\t\tvar _p53 = _p48._0(seed2);\n\t\t\t\tvar c = _p53._0;\n\t\t\t\tvar seed3 = _p53._1;\n\t\t\t\tvar _p54 = _p49._0(seed3);\n\t\t\t\tvar d = _p54._0;\n\t\t\t\tvar seed4 = _p54._1;\n\t\t\t\tvar _p55 = _p50._0(seed4);\n\t\t\t\tvar e = _p55._0;\n\t\t\t\tvar seed5 = _p55._1;\n\t\t\t\treturn {\n\t\t\t\t\tctor: '_Tuple2',\n\t\t\t\t\t_0: A5(func, a, b, c, d, e),\n\t\t\t\t\t_1: seed5\n\t\t\t\t};\n\t\t\t});\n\t});\nvar _elm_lang$core$Random$andThen = F2(\n\tfunction (callback, _p56) {\n\t\tvar _p57 = _p56;\n\t\treturn _elm_lang$core$Random$Generator(\n\t\t\tfunction (seed) {\n\t\t\t\tvar _p58 = _p57._0(seed);\n\t\t\t\tvar result = _p58._0;\n\t\t\t\tvar newSeed = _p58._1;\n\t\t\t\tvar _p59 = callback(result);\n\t\t\t\tvar genB = _p59._0;\n\t\t\t\treturn genB(newSeed);\n\t\t\t});\n\t});\nvar _elm_lang$core$Random$State = F2(\n\tfunction (a, b) {\n\t\treturn {ctor: 'State', _0: a, _1: b};\n\t});\nvar _elm_lang$core$Random$initState = function (seed) {\n\tvar s = A2(_elm_lang$core$Basics$max, seed, 0 - seed);\n\tvar q = (s / (_elm_lang$core$Random$magicNum6 - 1)) | 0;\n\tvar s2 = A2(_elm_lang$core$Basics_ops['%'], q, _elm_lang$core$Random$magicNum7 - 1);\n\tvar s1 = A2(_elm_lang$core$Basics_ops['%'], s, _elm_lang$core$Random$magicNum6 - 1);\n\treturn A2(_elm_lang$core$Random$State, s1 + 1, s2 + 1);\n};\nvar _elm_lang$core$Random$next = function (_p60) {\n\tvar _p61 = _p60;\n\tvar _p63 = _p61._1;\n\tvar _p62 = _p61._0;\n\tvar k2 = (_p63 / _elm_lang$core$Random$magicNum3) | 0;\n\tvar rawState2 = (_elm_lang$core$Random$magicNum4 * (_p63 - (k2 * _elm_lang$core$Random$magicNum3))) - (k2 * _elm_lang$core$Random$magicNum5);\n\tvar newState2 = (_elm_lang$core$Native_Utils.cmp(rawState2, 0) < 0) ? (rawState2 + _elm_lang$core$Random$magicNum7) : rawState2;\n\tvar k1 = (_p62 / _elm_lang$core$Random$magicNum1) | 0;\n\tvar rawState1 = (_elm_lang$core$Random$magicNum0 * (_p62 - (k1 * _elm_lang$core$Random$magicNum1))) - (k1 * _elm_lang$core$Random$magicNum2);\n\tvar newState1 = (_elm_lang$core$Native_Utils.cmp(rawState1, 0) < 0) ? (rawState1 + _elm_lang$core$Random$magicNum6) : rawState1;\n\tvar z = newState1 - newState2;\n\tvar newZ = (_elm_lang$core$Native_Utils.cmp(z, 1) < 0) ? (z + _elm_lang$core$Random$magicNum8) : z;\n\treturn {\n\t\tctor: '_Tuple2',\n\t\t_0: newZ,\n\t\t_1: A2(_elm_lang$core$Random$State, newState1, newState2)\n\t};\n};\nvar _elm_lang$core$Random$split = function (_p64) {\n\tvar _p65 = _p64;\n\tvar _p68 = _p65._1;\n\tvar _p67 = _p65._0;\n\tvar _p66 = _elm_lang$core$Tuple$second(\n\t\t_elm_lang$core$Random$next(_p65));\n\tvar t1 = _p66._0;\n\tvar t2 = _p66._1;\n\tvar new_s2 = _elm_lang$core$Native_Utils.eq(_p68, 1) ? (_elm_lang$core$Random$magicNum7 - 1) : (_p68 - 1);\n\tvar new_s1 = _elm_lang$core$Native_Utils.eq(_p67, _elm_lang$core$Random$magicNum6 - 1) ? 1 : (_p67 + 1);\n\treturn {\n\t\tctor: '_Tuple2',\n\t\t_0: A2(_elm_lang$core$Random$State, new_s1, t2),\n\t\t_1: A2(_elm_lang$core$Random$State, t1, new_s2)\n\t};\n};\nvar _elm_lang$core$Random$Seed = function (a) {\n\treturn {ctor: 'Seed', _0: a};\n};\nvar _elm_lang$core$Random$int = F2(\n\tfunction (a, b) {\n\t\treturn _elm_lang$core$Random$Generator(\n\t\t\tfunction (_p69) {\n\t\t\t\tvar _p70 = _p69;\n\t\t\t\tvar _p75 = _p70._0;\n\t\t\t\tvar base = 2147483561;\n\t\t\t\tvar f = F3(\n\t\t\t\t\tfunction (n, acc, state) {\n\t\t\t\t\t\tf:\n\t\t\t\t\t\twhile (true) {\n\t\t\t\t\t\t\tvar _p71 = n;\n\t\t\t\t\t\t\tif (_p71 === 0) {\n\t\t\t\t\t\t\t\treturn {ctor: '_Tuple2', _0: acc, _1: state};\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tvar _p72 = _p75.next(state);\n\t\t\t\t\t\t\t\tvar x = _p72._0;\n\t\t\t\t\t\t\t\tvar nextState = _p72._1;\n\t\t\t\t\t\t\t\tvar _v27 = n - 1,\n\t\t\t\t\t\t\t\t\t_v28 = x + (acc * base),\n\t\t\t\t\t\t\t\t\t_v29 = nextState;\n\t\t\t\t\t\t\t\tn = _v27;\n\t\t\t\t\t\t\t\tacc = _v28;\n\t\t\t\t\t\t\t\tstate = _v29;\n\t\t\t\t\t\t\t\tcontinue f;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\tvar _p73 = (_elm_lang$core$Native_Utils.cmp(a, b) < 0) ? {ctor: '_Tuple2', _0: a, _1: b} : {ctor: '_Tuple2', _0: b, _1: a};\n\t\t\t\tvar lo = _p73._0;\n\t\t\t\tvar hi = _p73._1;\n\t\t\t\tvar k = (hi - lo) + 1;\n\t\t\t\tvar n = A2(_elm_lang$core$Random$iLogBase, base, k);\n\t\t\t\tvar _p74 = A3(f, n, 1, _p75.state);\n\t\t\t\tvar v = _p74._0;\n\t\t\t\tvar nextState = _p74._1;\n\t\t\t\treturn {\n\t\t\t\t\tctor: '_Tuple2',\n\t\t\t\t\t_0: lo + A2(_elm_lang$core$Basics_ops['%'], v, k),\n\t\t\t\t\t_1: _elm_lang$core$Random$Seed(\n\t\t\t\t\t\t_elm_lang$core$Native_Utils.update(\n\t\t\t\t\t\t\t_p75,\n\t\t\t\t\t\t\t{state: nextState}))\n\t\t\t\t};\n\t\t\t});\n\t});\nvar _elm_lang$core$Random$bool = A2(\n\t_elm_lang$core$Random$map,\n\tF2(\n\t\tfunction (x, y) {\n\t\t\treturn _elm_lang$core$Native_Utils.eq(x, y);\n\t\t})(1),\n\tA2(_elm_lang$core$Random$int, 0, 1));\nvar _elm_lang$core$Random$float = F2(\n\tfunction (a, b) {\n\t\treturn _elm_lang$core$Random$Generator(\n\t\t\tfunction (seed) {\n\t\t\t\tvar _p76 = A2(\n\t\t\t\t\t_elm_lang$core$Random$step,\n\t\t\t\t\tA2(_elm_lang$core$Random$int, _elm_lang$core$Random$minInt, _elm_lang$core$Random$maxInt),\n\t\t\t\t\tseed);\n\t\t\t\tvar number = _p76._0;\n\t\t\t\tvar newSeed = _p76._1;\n\t\t\t\tvar negativeOneToOne = _elm_lang$core$Basics$toFloat(number) / _elm_lang$core$Basics$toFloat(_elm_lang$core$Random$maxInt - _elm_lang$core$Random$minInt);\n\t\t\t\tvar _p77 = (_elm_lang$core$Native_Utils.cmp(a, b) < 0) ? {ctor: '_Tuple2', _0: a, _1: b} : {ctor: '_Tuple2', _0: b, _1: a};\n\t\t\t\tvar lo = _p77._0;\n\t\t\t\tvar hi = _p77._1;\n\t\t\t\tvar scaled = ((lo + hi) / 2) + ((hi - lo) * negativeOneToOne);\n\t\t\t\treturn {ctor: '_Tuple2', _0: scaled, _1: newSeed};\n\t\t\t});\n\t});\nvar _elm_lang$core$Random$initialSeed = function (n) {\n\treturn _elm_lang$core$Random$Seed(\n\t\t{\n\t\t\tstate: _elm_lang$core$Random$initState(n),\n\t\t\tnext: _elm_lang$core$Random$next,\n\t\t\tsplit: _elm_lang$core$Random$split,\n\t\t\trange: _elm_lang$core$Random$range\n\t\t});\n};\nvar _elm_lang$core$Random$init = A2(\n\t_elm_lang$core$Task$andThen,\n\tfunction (t) {\n\t\treturn _elm_lang$core$Task$succeed(\n\t\t\t_elm_lang$core$Random$initialSeed(\n\t\t\t\t_elm_lang$core$Basics$round(t)));\n\t},\n\t_elm_lang$core$Time$now);\nvar _elm_lang$core$Random$Generate = function (a) {\n\treturn {ctor: 'Generate', _0: a};\n};\nvar _elm_lang$core$Random$generate = F2(\n\tfunction (tagger, generator) {\n\t\treturn _elm_lang$core$Random$command(\n\t\t\t_elm_lang$core$Random$Generate(\n\t\t\t\tA2(_elm_lang$core$Random$map, tagger, generator)));\n\t});\nvar _elm_lang$core$Random$cmdMap = F2(\n\tfunction (func, _p78) {\n\t\tvar _p79 = _p78;\n\t\treturn _elm_lang$core$Random$Generate(\n\t\t\tA2(_elm_lang$core$Random$map, func, _p79._0));\n\t});\n_elm_lang$core$Native_Platform.effectManagers['Random'] = {pkg: 'elm-lang/core', init: _elm_lang$core$Random$init, onEffects: _elm_lang$core$Random$onEffects, onSelfMsg: _elm_lang$core$Random$onSelfMsg, tag: 'cmd', cmdMap: _elm_lang$core$Random$cmdMap};\n\nvar _elm_community$webgl$WebGL_Settings_Internal$SampleAlphaToCoverage = {ctor: 'SampleAlphaToCoverage'};\nvar _elm_community$webgl$WebGL_Settings_Internal$SampleCoverage = F2(\n\tfunction (a, b) {\n\t\treturn {ctor: 'SampleCoverage', _0: a, _1: b};\n\t});\nvar _elm_community$webgl$WebGL_Settings_Internal$PolygonOffset = F2(\n\tfunction (a, b) {\n\t\treturn {ctor: 'PolygonOffset', _0: a, _1: b};\n\t});\nvar _elm_community$webgl$WebGL_Settings_Internal$CullFace = function (a) {\n\treturn {ctor: 'CullFace', _0: a};\n};\nvar _elm_community$webgl$WebGL_Settings_Internal$ColorMask = F4(\n\tfunction (a, b, c, d) {\n\t\treturn {ctor: 'ColorMask', _0: a, _1: b, _2: c, _3: d};\n\t});\nvar _elm_community$webgl$WebGL_Settings_Internal$Scissor = F4(\n\tfunction (a, b, c, d) {\n\t\treturn {ctor: 'Scissor', _0: a, _1: b, _2: c, _3: d};\n\t});\nvar _elm_community$webgl$WebGL_Settings_Internal$StencilTest = function (a) {\n\treturn function (b) {\n\t\treturn function (c) {\n\t\t\treturn function (d) {\n\t\t\t\treturn function (e) {\n\t\t\t\t\treturn function (f) {\n\t\t\t\t\t\treturn function (g) {\n\t\t\t\t\t\t\treturn function (h) {\n\t\t\t\t\t\t\t\treturn function (i) {\n\t\t\t\t\t\t\t\t\treturn function (j) {\n\t\t\t\t\t\t\t\t\t\treturn function (k) {\n\t\t\t\t\t\t\t\t\t\t\treturn {ctor: 'StencilTest', _0: a, _1: b, _2: c, _3: d, _4: e, _5: f, _6: g, _7: h, _8: i, _9: j, _10: k};\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t};\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t};\n\t\t};\n\t};\n};\nvar _elm_community$webgl$WebGL_Settings_Internal$DepthTest = F4(\n\tfunction (a, b, c, d) {\n\t\treturn {ctor: 'DepthTest', _0: a, _1: b, _2: c, _3: d};\n\t});\nvar _elm_community$webgl$WebGL_Settings_Internal$Blend = function (a) {\n\treturn function (b) {\n\t\treturn function (c) {\n\t\t\treturn function (d) {\n\t\t\t\treturn function (e) {\n\t\t\t\t\treturn function (f) {\n\t\t\t\t\t\treturn function (g) {\n\t\t\t\t\t\t\treturn function (h) {\n\t\t\t\t\t\t\t\treturn function (i) {\n\t\t\t\t\t\t\t\t\treturn function (j) {\n\t\t\t\t\t\t\t\t\t\treturn {ctor: 'Blend', _0: a, _1: b, _2: c, _3: d, _4: e, _5: f, _6: g, _7: h, _8: i, _9: j};\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t};\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t};\n\t\t};\n\t};\n};\n\nvar _elm_community$webgl$WebGL_Settings$cullFace = function (_p0) {\n\tvar _p1 = _p0;\n\treturn _elm_community$webgl$WebGL_Settings_Internal$CullFace(_p1._0);\n};\nvar _elm_community$webgl$WebGL_Settings$sampleCoverage = _elm_community$webgl$WebGL_Settings_Internal$SampleCoverage;\nvar _elm_community$webgl$WebGL_Settings$sampleAlphaToCoverage = _elm_community$webgl$WebGL_Settings_Internal$SampleAlphaToCoverage;\nvar _elm_community$webgl$WebGL_Settings$polygonOffset = _elm_community$webgl$WebGL_Settings_Internal$PolygonOffset;\nvar _elm_community$webgl$WebGL_Settings$colorMask = _elm_community$webgl$WebGL_Settings_Internal$ColorMask;\nvar _elm_community$webgl$WebGL_Settings$scissor = _elm_community$webgl$WebGL_Settings_Internal$Scissor;\nvar _elm_community$webgl$WebGL_Settings$FaceMode = function (a) {\n\treturn {ctor: 'FaceMode', _0: a};\n};\nvar _elm_community$webgl$WebGL_Settings$front = _elm_community$webgl$WebGL_Settings$FaceMode(1028);\nvar _elm_community$webgl$WebGL_Settings$back = _elm_community$webgl$WebGL_Settings$FaceMode(1029);\nvar _elm_community$webgl$WebGL_Settings$frontAndBack = _elm_community$webgl$WebGL_Settings$FaceMode(1032);\n\nvar _elm_community$webgl$WebGL_Settings_DepthTest$greaterOrEqual = function (_p0) {\n\tvar _p1 = _p0;\n\treturn A4(_elm_community$webgl$WebGL_Settings_Internal$DepthTest, 518, _p1.write, _p1.near, _p1.far);\n};\nvar _elm_community$webgl$WebGL_Settings_DepthTest$lessOrEqual = function (_p2) {\n\tvar _p3 = _p2;\n\treturn A4(_elm_community$webgl$WebGL_Settings_Internal$DepthTest, 515, _p3.write, _p3.near, _p3.far);\n};\nvar _elm_community$webgl$WebGL_Settings_DepthTest$notEqual = function (_p4) {\n\tvar _p5 = _p4;\n\treturn A4(_elm_community$webgl$WebGL_Settings_Internal$DepthTest, 517, _p5.write, _p5.near, _p5.far);\n};\nvar _elm_community$webgl$WebGL_Settings_DepthTest$greater = function (_p6) {\n\tvar _p7 = _p6;\n\treturn A4(_elm_community$webgl$WebGL_Settings_Internal$DepthTest, 516, _p7.write, _p7.near, _p7.far);\n};\nvar _elm_community$webgl$WebGL_Settings_DepthTest$equal = function (_p8) {\n\tvar _p9 = _p8;\n\treturn A4(_elm_community$webgl$WebGL_Settings_Internal$DepthTest, 514, _p9.write, _p9.near, _p9.far);\n};\nvar _elm_community$webgl$WebGL_Settings_DepthTest$always = function (_p10) {\n\tvar _p11 = _p10;\n\treturn A4(_elm_community$webgl$WebGL_Settings_Internal$DepthTest, 519, _p11.write, _p11.near, _p11.far);\n};\nvar _elm_community$webgl$WebGL_Settings_DepthTest$never = function (_p12) {\n\tvar _p13 = _p12;\n\treturn A4(_elm_community$webgl$WebGL_Settings_Internal$DepthTest, 512, _p13.write, _p13.near, _p13.far);\n};\nvar _elm_community$webgl$WebGL_Settings_DepthTest$less = function (_p14) {\n\tvar _p15 = _p14;\n\treturn A4(_elm_community$webgl$WebGL_Settings_Internal$DepthTest, 513, _p15.write, _p15.near, _p15.far);\n};\nvar _elm_community$webgl$WebGL_Settings_DepthTest$default = _elm_community$webgl$WebGL_Settings_DepthTest$less(\n\t{write: true, near: 0, far: 1});\nvar _elm_community$webgl$WebGL_Settings_DepthTest$Options = F3(\n\tfunction (a, b, c) {\n\t\treturn {write: a, near: b, far: c};\n\t});\n\n// eslint-disable-next-line no-unused-vars, camelcase\nvar _elm_community$webgl$Native_WebGL = function () {\n\n  // setup logging\n  // eslint-disable-next-line no-unused-vars\n  function LOG(msg) {\n    // console.log(msg);\n  }\n\n  function guid() {\n    // eslint-disable-next-line camelcase\n    return _elm_lang$core$Native_Utils.guid();\n  }\n  function listEach(fn, list) {\n    while (list.ctor !== '[]') {\n      fn(list._0);\n      list = list._1;\n    }\n  }\n  function listLength(list) {\n    var length = 0;\n    while (list.ctor !== '[]') {\n      length++;\n      list = list._1;\n    }\n    return length;\n  }\n\n  var rAF = typeof requestAnimationFrame !== 'undefined' ?\n    requestAnimationFrame :\n    function (cb) { setTimeout(cb, 1000 / 60); };\n\n  function unsafeCoerceGLSL(src) {\n    return { src: src };\n  }\n\n  function entity(settings, vert, frag, buffer, uniforms) {\n\n    if (!buffer.guid) {\n      buffer.guid = guid();\n    }\n\n    return {\n      ctor: 'Entity',\n      vert: vert,\n      frag: frag,\n      buffer: buffer,\n      uniforms: uniforms,\n      settings: settings\n    };\n\n  }\n\n /**\n  *  Apply setting to the gl context\n  *\n  *  @param {WebGLRenderingContext} gl context\n  *  @param {Setting} setting coming in from Elm\n  */\n  function applySetting(gl, setting) {\n    switch (setting.ctor) {\n      case 'Blend':\n        gl.enable(gl.BLEND);\n        // eq1 f11 f12 eq2 f21 f22 r g b a\n        gl.blendEquationSeparate(setting._0, setting._3);\n        gl.blendFuncSeparate(setting._1, setting._2, setting._4, setting._5);\n        gl.blendColor(setting._6, setting._7, setting._8, setting._9);\n        break;\n      case 'DepthTest':\n        gl.enable(gl.DEPTH_TEST);\n        // func mask near far\n        gl.depthFunc(setting._0);\n        gl.depthMask(setting._1);\n        gl.depthRange(setting._2, setting._3);\n        break;\n      case 'StencilTest':\n        gl.enable(gl.STENCIL_TEST);\n        // ref mask writeMask test1 fail1 zfail1 zpass1 test2 fail2 zfail2 zpass2\n        gl.stencilFuncSeparate(gl.FRONT, setting._3, setting._0, setting._1);\n        gl.stencilOpSeparate(gl.FRONT, setting._4, setting._5, setting._6);\n        gl.stencilMaskSeparate(gl.FRONT, setting._2);\n        gl.stencilFuncSeparate(gl.BACK, setting._7, setting._0, setting._1);\n        gl.stencilOpSeparate(gl.BACK, setting._8, setting._9, setting._10);\n        gl.stencilMaskSeparate(gl.BACK, setting._2);\n        break;\n      case 'Scissor':\n        gl.enable(gl.SCISSOR_TEST);\n        gl.scissor(setting._0, setting._1, setting._2, setting._3);\n        break;\n      case 'ColorMask':\n        gl.colorMask(setting._0, setting._1, setting._2, setting._3);\n        break;\n      case 'CullFace':\n        gl.enable(gl.CULL_FACE);\n        gl.cullFace(setting._0);\n        break;\n      case 'PolygonOffset':\n        gl.enable(gl.POLYGON_OFFSET_FILL);\n        gl.polygonOffset(setting._0, setting._1);\n        break;\n      case 'SampleCoverage':\n        gl.enable(gl.SAMPLE_COVERAGE);\n        gl.sampleCoverage(setting._0, setting._1);\n        break;\n      case 'SampleAlphaToCoverage':\n        gl.enable(gl.SAMPLE_ALPHA_TO_COVERAGE);\n        break;\n    }\n  }\n\n /**\n  *  Revert setting that was applied to the gl context\n  *\n  *  @param {WebGLRenderingContext} gl context\n  *  @param {Setting} setting coming in from Elm\n  */\n  function revertSetting(gl, setting) {\n    switch (setting.ctor) {\n      case 'Blend':\n        gl.disable(gl.BLEND);\n        break;\n      case 'DepthTest':\n        gl.disable(gl.DEPTH_TEST);\n        break;\n      case 'StencilTest':\n        gl.disable(gl.STENCIL_TEST);\n        break;\n      case 'Scissor':\n        gl.disable(gl.SCISSOR_TEST);\n        break;\n      case 'ColorMask':\n        gl.colorMask(true, true, true, true);\n        break;\n      case 'CullFace':\n        gl.disable(gl.CULL_FACE);\n        break;\n      case 'PolygonOffset':\n        gl.disable(gl.POLYGON_OFFSET_FILL);\n        break;\n      case 'SampleCoverage':\n        gl.disable(gl.SAMPLE_COVERAGE);\n        break;\n      case 'SampleAlphaToCoverage':\n        gl.disable(gl.SAMPLE_ALPHA_TO_COVERAGE);\n        break;\n    }\n  }\n\n  function doCompile(gl, src, type) {\n\n    var shader = gl.createShader(type);\n    LOG('Created shader');\n\n    gl.shaderSource(shader, src);\n    gl.compileShader(shader);\n    if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n      throw gl.getShaderInfoLog(shader);\n    }\n\n    return shader;\n\n  }\n\n  function doLink(gl, vshader, fshader) {\n\n    var program = gl.createProgram();\n    LOG('Created program');\n\n    gl.attachShader(program, vshader);\n    gl.attachShader(program, fshader);\n    gl.linkProgram(program);\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n      throw gl.getProgramInfoLog(program);\n    }\n\n    return program;\n\n  }\n\n  function getRenderInfo(gl, renderType) {\n    switch (renderType) {\n      case 'Triangles':\n        return { mode: gl.TRIANGLES, elemSize: 3, indexSize: 0 };\n      case 'LineStrip':\n        return { mode: gl.LINE_STRIP, elemSize: 1, indexSize: 0 };\n      case 'LineLoop':\n        return { mode: gl.LINE_LOOP, elemSize: 1, indexSize: 0 };\n      case 'Points':\n        return { mode: gl.POINTS, elemSize: 1, indexSize: 0 };\n      case 'Lines':\n        return { mode: gl.LINES, elemSize: 2, indexSize: 0 };\n      case 'TriangleStrip':\n        return { mode: gl.TRIANGLE_STRIP, elemSize: 1, indexSize: 0 };\n      case 'TriangleFan':\n        return { mode: gl.TRIANGLE_FAN, elemSize: 1, indexSize: 0 };\n      case 'IndexedTriangles':\n        return { mode: gl.TRIANGLES, elemSize: 1, indexSize: 3 };\n    }\n  }\n\n  function getAttributeInfo(gl, type) {\n    switch (type) {\n      case gl.FLOAT:\n        return { size: 1, type: Float32Array, baseType: gl.FLOAT };\n      case gl.FLOAT_VEC2:\n        return { size: 2, type: Float32Array, baseType: gl.FLOAT };\n      case gl.FLOAT_VEC3:\n        return { size: 3, type: Float32Array, baseType: gl.FLOAT };\n      case gl.FLOAT_VEC4:\n        return { size: 4, type: Float32Array, baseType: gl.FLOAT };\n      case gl.INT:\n        return { size: 1, type: Int32Array, baseType: gl.INT };\n      case gl.INT_VEC2:\n        return { size: 2, type: Int32Array, baseType: gl.INT };\n      case gl.INT_VEC3:\n        return { size: 3, type: Int32Array, baseType: gl.INT };\n      case gl.INT_VEC4:\n        return { size: 4, type: Int32Array, baseType: gl.INT };\n    }\n  }\n\n /**\n  *  Form the buffer for a given attribute.\n  *\n  *  @param {WebGLRenderingContext} gl context\n  *  @param {WebGLActiveInfo} attribute the attribute to bind to.\n  *         We use its name to grab the record by name and also to know\n  *         how many elements we need to grab.\n  *  @param {List} bufferElems The list coming in from Elm.\n  *  @param {Number} elemSize The length of the number of vertices that\n  *         complete one 'thing' based on the drawing mode.\n  *         ie, 2 for Lines, 3 for Triangles, etc.\n  *  @return {WebGLBuffer}\n  */\n  function doBindAttribute(gl, attribute, bufferElems, elemSize) {\n    var idxKeys = [];\n    for (var i = 0; i < elemSize; i++) {\n      idxKeys.push('_' + i);\n    }\n\n    function dataFill(data, cnt, fillOffset, elem, key) {\n      if (elemSize === 1) {\n        for (var i = 0; i < cnt; i++) {\n          data[fillOffset++] = cnt === 1 ? elem[key] : elem[key][i];\n        }\n      } else {\n        idxKeys.forEach(function (idx) {\n          for (var i = 0; i < cnt; i++) {\n            data[fillOffset++] = cnt === 1 ? elem[idx][key] : elem[idx][key][i];\n          }\n        });\n      }\n    }\n\n    var attributeInfo = getAttributeInfo(gl, attribute.type);\n\n    if (attributeInfo === undefined) {\n      throw new Error('No info available for: ' + attribute.type);\n    }\n\n    var dataIdx = 0;\n    var array = new attributeInfo.type(listLength(bufferElems) * attributeInfo.size * elemSize);\n\n    listEach(function (elem) {\n      dataFill(array, attributeInfo.size, dataIdx, elem, attribute.name);\n      dataIdx += attributeInfo.size * elemSize;\n    }, bufferElems);\n\n    var buffer = gl.createBuffer();\n    LOG('Created attribute buffer ' + attribute.name);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n    gl.bufferData(gl.ARRAY_BUFFER, array, gl.STATIC_DRAW);\n    return buffer;\n  }\n\n /**\n  *  This sets up the binding caching buffers.\n  *\n  *  We don't actually bind any buffers now except for the indices buffer.\n  *  The problem with filling the buffers here is that it is possible to\n  *  have a buffer shared between two webgl shaders;\n  *  which could have different active attributes. If we bind it here against\n  *  a particular program, we might not bind them all. That final bind is now\n  *  done right before drawing.\n  *\n  *  @param {WebGLRenderingContext} gl context\n  *  @param {Object} renderType\n  *  @param {Number} renderType.indexSize size of the index\n  *  @param {Number} renderType.elemSize size of the element\n  *  @param {Drawable} drawable a drawable object from Elm\n  *         that contains elements and optionally indices\n  *  @return {Object} buffer - an object with the following properties\n  *  @return {Number} buffer.numIndices\n  *  @return {WebGLBuffer} buffer.indexBuffer\n  *  @return {Object} buffer.buffers - will be used to buffer attributes\n  */\n  function doBindSetup(gl, renderType, drawable) {\n    LOG('Created index buffer');\n    var indexBuffer = gl.createBuffer();\n    var indices = (renderType.indexSize === 0)\n      ? makeSequentialBuffer(renderType.elemSize * listLength(drawable._0))\n      : makeIndexedBuffer(drawable._1, renderType.indexSize);\n\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indexBuffer);\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, indices, gl.STATIC_DRAW);\n\n    return {\n      numIndices: indices.length,\n      indexBuffer: indexBuffer,\n      buffers: {}\n    };\n  }\n\n /**\n  *  Create an indices array and fill it with 0..n\n  *\n  *  @param {Number} numIndices The number of indices\n  *  @return {Uint16Array} indices\n  */\n  function makeSequentialBuffer(numIndices) {\n    var indices = new Uint16Array(numIndices);\n    for (var i = 0; i < numIndices; i++) {\n      indices[i] = i;\n    }\n    return indices;\n  }\n\n /**\n  *  Create an indices array and fill it from indices\n  *  based on the size of the index\n  *\n  *  @param {List} indicesList the list of indices\n  *  @param {Number} indexSize the size of the index\n  *  @return {Uint16Array} indices\n  */\n  function makeIndexedBuffer(indicesList, indexSize) {\n    var indices = new Uint16Array(listLength(indicesList) * indexSize);\n    var fillOffset = 0;\n    var i;\n    listEach(function (elem) {\n      if (indexSize === 1) {\n        indices[fillOffset++] = elem;\n      } else {\n        for (i = 0; i < indexSize; i++) {\n          indices[fillOffset++] = elem['_' + i.toString()];\n        }\n      }\n    }, indicesList);\n    return indices;\n  }\n\n  function getProgID(vertID, fragID) {\n    return vertID + '#' + fragID;\n  }\n\n  function drawGL(domNode, data) {\n\n    var model = data.model;\n    var gl = model.cache.gl;\n\n    if (!gl) {\n      return domNode;\n    }\n\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT | gl.STENCIL_BUFFER_BIT);\n    LOG('Drawing');\n\n    function drawEntity(entity) {\n      if (listLength(entity.buffer._0) === 0) {\n        return;\n      }\n\n      var progid;\n      var program;\n      if (entity.vert.id && entity.frag.id) {\n        progid = getProgID(entity.vert.id, entity.frag.id);\n        program = model.cache.programs[progid];\n      }\n\n      if (!program) {\n\n        var vshader;\n        if (entity.vert.id) {\n          vshader = model.cache.shaders[entity.vert.id];\n        } else {\n          entity.vert.id = guid();\n        }\n\n        if (!vshader) {\n          vshader = doCompile(gl, entity.vert.src, gl.VERTEX_SHADER);\n          model.cache.shaders[entity.vert.id] = vshader;\n        }\n\n        var fshader;\n        if (entity.frag.id) {\n          fshader = model.cache.shaders[entity.frag.id];\n        } else {\n          entity.frag.id = guid();\n        }\n\n        if (!fshader) {\n          fshader = doCompile(gl, entity.frag.src, gl.FRAGMENT_SHADER);\n          model.cache.shaders[entity.frag.id] = fshader;\n        }\n\n        program = doLink(gl, vshader, fshader);\n        progid = getProgID(entity.vert.id, entity.frag.id);\n        model.cache.programs[progid] = program;\n\n      }\n\n      gl.useProgram(program);\n\n      progid = progid || getProgID(entity.vert.id, entity.frag.id);\n      var setters = model.cache.uniformSetters[progid];\n      if (!setters) {\n        setters = createUniformSetters(gl, model, program);\n        model.cache.uniformSetters[progid] = setters;\n      }\n\n      setUniforms(setters, entity.uniforms);\n\n      var entityType = getRenderInfo(gl, entity.buffer.ctor);\n      var buffer = model.cache.buffers[entity.buffer.guid];\n\n      if (!buffer) {\n        buffer = doBindSetup(gl, entityType, entity.buffer);\n        model.cache.buffers[entity.buffer.guid] = buffer;\n      }\n\n      gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffer.indexBuffer);\n\n      var numAttributes = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n\n      for (var i = 0; i < numAttributes; i++) {\n        var attribute = gl.getActiveAttrib(program, i);\n\n        var attribLocation = gl.getAttribLocation(program, attribute.name);\n        gl.enableVertexAttribArray(attribLocation);\n\n        if (buffer.buffers[attribute.name] === undefined) {\n          buffer.buffers[attribute.name] = doBindAttribute(gl, attribute, entity.buffer._0, entityType.elemSize);\n        }\n        var attributeBuffer = buffer.buffers[attribute.name];\n        var attributeInfo = getAttributeInfo(gl, attribute.type);\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, attributeBuffer);\n        gl.vertexAttribPointer(attribLocation, attributeInfo.size, attributeInfo.baseType, false, 0, 0);\n      }\n\n      listEach(function (setting) {\n        applySetting(gl, setting);\n      }, entity.settings);\n\n      gl.drawElements(entityType.mode, buffer.numIndices, gl.UNSIGNED_SHORT, 0);\n\n      listEach(function (setting) {\n        revertSetting(gl, setting);\n      }, entity.settings);\n\n    }\n\n    listEach(drawEntity, model.entities);\n    return domNode;\n  }\n\n  function createUniformSetters(gl, model, program) {\n    var textureCounter = 0;\n    function createUniformSetter(program, uniform) {\n      var uniformLocation = gl.getUniformLocation(program, uniform.name);\n      switch (uniform.type) {\n        case gl.INT:\n          return function (value) {\n            gl.uniform1i(uniformLocation, value);\n          };\n        case gl.FLOAT:\n          return function (value) {\n            gl.uniform1f(uniformLocation, value);\n          };\n        case gl.FLOAT_VEC2:\n          return function (value) {\n            gl.uniform2fv(uniformLocation, new Float32Array(value));\n          };\n        case gl.FLOAT_VEC3:\n          return function (value) {\n            gl.uniform3fv(uniformLocation, new Float32Array(value));\n          };\n        case gl.FLOAT_VEC4:\n          return function (value) {\n            gl.uniform4fv(uniformLocation, new Float32Array(value));\n          };\n        case gl.FLOAT_MAT4:\n          return function (value) {\n            gl.uniformMatrix4fv(uniformLocation, false, new Float32Array(value));\n          };\n        case gl.SAMPLER_2D:\n          var currentTexture = textureCounter++;\n          return function (texture) {\n            gl.activeTexture(gl.TEXTURE0 + currentTexture);\n            var tex = model.cache.textures[texture.id];\n            if (!tex) {\n              LOG('Created texture');\n              tex = texture.createTexture(gl);\n              model.cache.textures[texture.id] = tex;\n            }\n            gl.bindTexture(gl.TEXTURE_2D, tex);\n            gl.uniform1i(uniformLocation, currentTexture);\n          };\n        case gl.BOOL:\n          return function (value) {\n            gl.uniform1i(uniformLocation, value);\n          };\n        default:\n          LOG('Unsupported uniform type: ' + uniform.type);\n          return function () {};\n      }\n    }\n\n    var uniformSetters = {};\n    var numUniforms = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n    for (var i = 0; i < numUniforms; i++) {\n      var uniform = gl.getActiveUniform(program, i);\n      uniformSetters[uniform.name] = createUniformSetter(program, uniform);\n    }\n\n    return uniformSetters;\n  }\n\n  function setUniforms(setters, values) {\n    Object.keys(values).forEach(function (name) {\n      var setter = setters[name];\n      if (setter) {\n        setter(values[name]);\n      }\n    });\n  }\n\n  // VIRTUAL-DOM WIDGET\n\n  function toHtml(options, factList, entities) {\n    var model = {\n      entities: entities,\n      cache: {},\n      options: options\n    };\n    // eslint-disable-next-line camelcase\n    return _elm_lang$virtual_dom$Native_VirtualDom.custom(factList, model, implementation);\n  }\n\n  var implementation = {\n    render: render,\n    diff: diff\n  };\n\n  /**\n   *  Creates canvas and schedules initial drawGL\n   *  @param {Object} model\n   *  @param {Object} model.cache that may contain the following properties:\n             gl, shaders, programs, uniformSetters, buffers, textures\n   *  @param {List<Option>} model.options list of options coming from Elm\n   *  @param {List<Entity>} model.entities list of entities coming from Elm\n   *  @return {HTMLElement} <canvas> if WebGL is supported, otherwise a <div>\n   */\n  function render(model) {\n\n    var contextAttributes = {\n      alpha: false,\n      depth: false,\n      stencil: false,\n      antialias: false,\n      premultipliedAlpha: false\n    };\n    var sceneSettings = [];\n\n    listEach(function (option) {\n      var s1 = option._0;\n      switch (option.ctor) {\n        case 'Alpha':\n          contextAttributes.alpha = true;\n          contextAttributes.premultipliedAlpha = s1;\n          break;\n        case 'Antialias':\n          contextAttributes.antialias = true;\n          break;\n        case 'Depth':\n          contextAttributes.depth = true;\n          sceneSettings.push(function (gl) {\n            gl.clearDepth(s1);\n          });\n          break;\n        case 'ClearColor':\n          sceneSettings.push(function (gl) {\n            gl.clearColor(option._0, option._1, option._2, option._3);\n          });\n          break;\n        case 'Stencil':\n          contextAttributes.stencil = true;\n          sceneSettings.push(function (gl) {\n            gl.clearStencil(s1);\n          });\n          break;\n      }\n    }, model.options);\n\n    LOG('Render canvas');\n    var canvas = document.createElement('canvas');\n    var gl = canvas.getContext && (\n      canvas.getContext('webgl', contextAttributes) ||\n      canvas.getContext('experimental-webgl', contextAttributes)\n    );\n\n    if (gl) {\n      sceneSettings.forEach(function (sceneSetting) {\n        sceneSetting(gl);\n      });\n    } else {\n      canvas = document.createElement('div');\n      canvas.innerHTML = '<a href=\"http://get.webgl.org/\">Enable WebGL</a> to see this content!';\n    }\n\n    model.cache.gl = gl;\n    model.cache.shaders = [];\n    model.cache.programs = {};\n    model.cache.uniformSetters = {};\n    model.cache.buffers = [];\n    model.cache.textures = [];\n\n    // Render for the first time.\n    // This has to be done in animation frame,\n    // because the canvas is not in the DOM yet,\n    // when renderCanvas is called by virtual-dom\n    rAF(function () {\n      drawGL(canvas, {model: model});\n    });\n\n    return canvas;\n  }\n\n\n  function diff(oldModel, newModel) {\n    newModel.model.cache = oldModel.model.cache;\n    return {\n      applyPatch: drawGL,\n      data: newModel\n    };\n  }\n\n  return {\n    unsafeCoerceGLSL: unsafeCoerceGLSL,\n    entity: F5(entity),\n    toHtml: F3(toHtml)\n  };\n\n}();\n\nvar _elm_community$webgl$WebGL$toHtmlWith = F3(\n\tfunction (options, attributes, entities) {\n\t\treturn A3(_elm_community$webgl$Native_WebGL.toHtml, options, attributes, entities);\n\t});\nvar _elm_community$webgl$WebGL$entityWith = _elm_community$webgl$Native_WebGL.entity;\nvar _elm_community$webgl$WebGL$entity = _elm_community$webgl$WebGL$entityWith(\n\t{\n\t\tctor: '::',\n\t\t_0: _elm_community$webgl$WebGL_Settings_DepthTest$default,\n\t\t_1: {ctor: '[]'}\n\t});\nvar _elm_community$webgl$WebGL$unsafeShader = _elm_community$webgl$Native_WebGL.unsafeCoerceGLSL;\nvar _elm_community$webgl$WebGL$IndexedTriangles = F2(\n\tfunction (a, b) {\n\t\treturn {ctor: 'IndexedTriangles', _0: a, _1: b};\n\t});\nvar _elm_community$webgl$WebGL$indexedTriangles = _elm_community$webgl$WebGL$IndexedTriangles;\nvar _elm_community$webgl$WebGL$TriangleStrip = function (a) {\n\treturn {ctor: 'TriangleStrip', _0: a};\n};\nvar _elm_community$webgl$WebGL$triangleStrip = _elm_community$webgl$WebGL$TriangleStrip;\nvar _elm_community$webgl$WebGL$TriangleFan = function (a) {\n\treturn {ctor: 'TriangleFan', _0: a};\n};\nvar _elm_community$webgl$WebGL$triangleFan = _elm_community$webgl$WebGL$TriangleFan;\nvar _elm_community$webgl$WebGL$Points = function (a) {\n\treturn {ctor: 'Points', _0: a};\n};\nvar _elm_community$webgl$WebGL$points = _elm_community$webgl$WebGL$Points;\nvar _elm_community$webgl$WebGL$LineLoop = function (a) {\n\treturn {ctor: 'LineLoop', _0: a};\n};\nvar _elm_community$webgl$WebGL$lineLoop = _elm_community$webgl$WebGL$LineLoop;\nvar _elm_community$webgl$WebGL$LineStrip = function (a) {\n\treturn {ctor: 'LineStrip', _0: a};\n};\nvar _elm_community$webgl$WebGL$lineStrip = _elm_community$webgl$WebGL$LineStrip;\nvar _elm_community$webgl$WebGL$Lines = function (a) {\n\treturn {ctor: 'Lines', _0: a};\n};\nvar _elm_community$webgl$WebGL$lines = _elm_community$webgl$WebGL$Lines;\nvar _elm_community$webgl$WebGL$Triangles = function (a) {\n\treturn {ctor: 'Triangles', _0: a};\n};\nvar _elm_community$webgl$WebGL$triangles = _elm_community$webgl$WebGL$Triangles;\nvar _elm_community$webgl$WebGL$Shader = {ctor: 'Shader'};\nvar _elm_community$webgl$WebGL$Texture = {ctor: 'Texture'};\nvar _elm_community$webgl$WebGL$Entity = {ctor: 'Entity'};\nvar _elm_community$webgl$WebGL$ClearColor = F4(\n\tfunction (a, b, c, d) {\n\t\treturn {ctor: 'ClearColor', _0: a, _1: b, _2: c, _3: d};\n\t});\nvar _elm_community$webgl$WebGL$clearColor = _elm_community$webgl$WebGL$ClearColor;\nvar _elm_community$webgl$WebGL$Antialias = {ctor: 'Antialias'};\nvar _elm_community$webgl$WebGL$antialias = _elm_community$webgl$WebGL$Antialias;\nvar _elm_community$webgl$WebGL$Stencil = function (a) {\n\treturn {ctor: 'Stencil', _0: a};\n};\nvar _elm_community$webgl$WebGL$stencil = _elm_community$webgl$WebGL$Stencil;\nvar _elm_community$webgl$WebGL$Depth = function (a) {\n\treturn {ctor: 'Depth', _0: a};\n};\nvar _elm_community$webgl$WebGL$depth = _elm_community$webgl$WebGL$Depth;\nvar _elm_community$webgl$WebGL$Alpha = function (a) {\n\treturn {ctor: 'Alpha', _0: a};\n};\nvar _elm_community$webgl$WebGL$alpha = _elm_community$webgl$WebGL$Alpha;\nvar _elm_community$webgl$WebGL$toHtml = _elm_community$webgl$WebGL$toHtmlWith(\n\t{\n\t\tctor: '::',\n\t\t_0: _elm_community$webgl$WebGL$alpha(true),\n\t\t_1: {\n\t\t\tctor: '::',\n\t\t\t_0: _elm_community$webgl$WebGL$antialias,\n\t\t\t_1: {\n\t\t\t\tctor: '::',\n\t\t\t\t_0: _elm_community$webgl$WebGL$depth(1),\n\t\t\t\t_1: {ctor: '[]'}\n\t\t\t}\n\t\t}\n\t});\n\nvar _elm_lang$dom$Native_Dom = function() {\n\nvar fakeNode = {\n\taddEventListener: function() {},\n\tremoveEventListener: function() {}\n};\n\nvar onDocument = on(typeof document !== 'undefined' ? document : fakeNode);\nvar onWindow = on(typeof window !== 'undefined' ? window : fakeNode);\n\nfunction on(node)\n{\n\treturn function(eventName, decoder, toTask)\n\t{\n\t\treturn _elm_lang$core$Native_Scheduler.nativeBinding(function(callback) {\n\n\t\t\tfunction performTask(event)\n\t\t\t{\n\t\t\t\tvar result = A2(_elm_lang$core$Json_Decode$decodeValue, decoder, event);\n\t\t\t\tif (result.ctor === 'Ok')\n\t\t\t\t{\n\t\t\t\t\t_elm_lang$core$Native_Scheduler.rawSpawn(toTask(result._0));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tnode.addEventListener(eventName, performTask);\n\n\t\t\treturn function()\n\t\t\t{\n\t\t\t\tnode.removeEventListener(eventName, performTask);\n\t\t\t};\n\t\t});\n\t};\n}\n\nvar rAF = typeof requestAnimationFrame !== 'undefined'\n\t? requestAnimationFrame\n\t: function(callback) { callback(); };\n\nfunction withNode(id, doStuff)\n{\n\treturn _elm_lang$core$Native_Scheduler.nativeBinding(function(callback)\n\t{\n\t\trAF(function()\n\t\t{\n\t\t\tvar node = document.getElementById(id);\n\t\t\tif (node === null)\n\t\t\t{\n\t\t\t\tcallback(_elm_lang$core$Native_Scheduler.fail({ ctor: 'NotFound', _0: id }));\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcallback(_elm_lang$core$Native_Scheduler.succeed(doStuff(node)));\n\t\t});\n\t});\n}\n\n\n// FOCUS\n\nfunction focus(id)\n{\n\treturn withNode(id, function(node) {\n\t\tnode.focus();\n\t\treturn _elm_lang$core$Native_Utils.Tuple0;\n\t});\n}\n\nfunction blur(id)\n{\n\treturn withNode(id, function(node) {\n\t\tnode.blur();\n\t\treturn _elm_lang$core$Native_Utils.Tuple0;\n\t});\n}\n\n\n// SCROLLING\n\nfunction getScrollTop(id)\n{\n\treturn withNode(id, function(node) {\n\t\treturn node.scrollTop;\n\t});\n}\n\nfunction setScrollTop(id, desiredScrollTop)\n{\n\treturn withNode(id, function(node) {\n\t\tnode.scrollTop = desiredScrollTop;\n\t\treturn _elm_lang$core$Native_Utils.Tuple0;\n\t});\n}\n\nfunction toBottom(id)\n{\n\treturn withNode(id, function(node) {\n\t\tnode.scrollTop = node.scrollHeight;\n\t\treturn _elm_lang$core$Native_Utils.Tuple0;\n\t});\n}\n\nfunction getScrollLeft(id)\n{\n\treturn withNode(id, function(node) {\n\t\treturn node.scrollLeft;\n\t});\n}\n\nfunction setScrollLeft(id, desiredScrollLeft)\n{\n\treturn withNode(id, function(node) {\n\t\tnode.scrollLeft = desiredScrollLeft;\n\t\treturn _elm_lang$core$Native_Utils.Tuple0;\n\t});\n}\n\nfunction toRight(id)\n{\n\treturn withNode(id, function(node) {\n\t\tnode.scrollLeft = node.scrollWidth;\n\t\treturn _elm_lang$core$Native_Utils.Tuple0;\n\t});\n}\n\n\n// SIZE\n\nfunction width(options, id)\n{\n\treturn withNode(id, function(node) {\n\t\tswitch (options.ctor)\n\t\t{\n\t\t\tcase 'Content':\n\t\t\t\treturn node.scrollWidth;\n\t\t\tcase 'VisibleContent':\n\t\t\t\treturn node.clientWidth;\n\t\t\tcase 'VisibleContentWithBorders':\n\t\t\t\treturn node.offsetWidth;\n\t\t\tcase 'VisibleContentWithBordersAndMargins':\n\t\t\t\tvar rect = node.getBoundingClientRect();\n\t\t\t\treturn rect.right - rect.left;\n\t\t}\n\t});\n}\n\nfunction height(options, id)\n{\n\treturn withNode(id, function(node) {\n\t\tswitch (options.ctor)\n\t\t{\n\t\t\tcase 'Content':\n\t\t\t\treturn node.scrollHeight;\n\t\t\tcase 'VisibleContent':\n\t\t\t\treturn node.clientHeight;\n\t\t\tcase 'VisibleContentWithBorders':\n\t\t\t\treturn node.offsetHeight;\n\t\t\tcase 'VisibleContentWithBordersAndMargins':\n\t\t\t\tvar rect = node.getBoundingClientRect();\n\t\t\t\treturn rect.bottom - rect.top;\n\t\t}\n\t});\n}\n\nreturn {\n\tonDocument: F3(onDocument),\n\tonWindow: F3(onWindow),\n\n\tfocus: focus,\n\tblur: blur,\n\n\tgetScrollTop: getScrollTop,\n\tsetScrollTop: F2(setScrollTop),\n\tgetScrollLeft: getScrollLeft,\n\tsetScrollLeft: F2(setScrollLeft),\n\ttoBottom: toBottom,\n\ttoRight: toRight,\n\n\theight: F2(height),\n\twidth: F2(width)\n};\n\n}();\n\nvar _elm_lang$dom$Dom_LowLevel$onWindow = _elm_lang$dom$Native_Dom.onWindow;\nvar _elm_lang$dom$Dom_LowLevel$onDocument = _elm_lang$dom$Native_Dom.onDocument;\n\nvar _elm_lang$window$Native_Window = function()\n{\n\nvar size = _elm_lang$core$Native_Scheduler.nativeBinding(function(callback)\t{\n\tcallback(_elm_lang$core$Native_Scheduler.succeed({\n\t\twidth: window.innerWidth,\n\t\theight: window.innerHeight\n\t}));\n});\n\nreturn {\n\tsize: size\n};\n\n}();\nvar _elm_lang$window$Window_ops = _elm_lang$window$Window_ops || {};\n_elm_lang$window$Window_ops['&>'] = F2(\n\tfunction (task1, task2) {\n\t\treturn A2(\n\t\t\t_elm_lang$core$Task$andThen,\n\t\t\tfunction (_p0) {\n\t\t\t\treturn task2;\n\t\t\t},\n\t\t\ttask1);\n\t});\nvar _elm_lang$window$Window$onSelfMsg = F3(\n\tfunction (router, dimensions, state) {\n\t\tvar _p1 = state;\n\t\tif (_p1.ctor === 'Nothing') {\n\t\t\treturn _elm_lang$core$Task$succeed(state);\n\t\t} else {\n\t\t\tvar send = function (_p2) {\n\t\t\t\tvar _p3 = _p2;\n\t\t\t\treturn A2(\n\t\t\t\t\t_elm_lang$core$Platform$sendToApp,\n\t\t\t\t\trouter,\n\t\t\t\t\t_p3._0(dimensions));\n\t\t\t};\n\t\t\treturn A2(\n\t\t\t\t_elm_lang$window$Window_ops['&>'],\n\t\t\t\t_elm_lang$core$Task$sequence(\n\t\t\t\t\tA2(_elm_lang$core$List$map, send, _p1._0.subs)),\n\t\t\t\t_elm_lang$core$Task$succeed(state));\n\t\t}\n\t});\nvar _elm_lang$window$Window$init = _elm_lang$core$Task$succeed(_elm_lang$core$Maybe$Nothing);\nvar _elm_lang$window$Window$size = _elm_lang$window$Native_Window.size;\nvar _elm_lang$window$Window$width = A2(\n\t_elm_lang$core$Task$map,\n\tfunction (_) {\n\t\treturn _.width;\n\t},\n\t_elm_lang$window$Window$size);\nvar _elm_lang$window$Window$height = A2(\n\t_elm_lang$core$Task$map,\n\tfunction (_) {\n\t\treturn _.height;\n\t},\n\t_elm_lang$window$Window$size);\nvar _elm_lang$window$Window$onEffects = F3(\n\tfunction (router, newSubs, oldState) {\n\t\tvar _p4 = {ctor: '_Tuple2', _0: oldState, _1: newSubs};\n\t\tif (_p4._0.ctor === 'Nothing') {\n\t\t\tif (_p4._1.ctor === '[]') {\n\t\t\t\treturn _elm_lang$core$Task$succeed(_elm_lang$core$Maybe$Nothing);\n\t\t\t} else {\n\t\t\t\treturn A2(\n\t\t\t\t\t_elm_lang$core$Task$andThen,\n\t\t\t\t\tfunction (pid) {\n\t\t\t\t\t\treturn _elm_lang$core$Task$succeed(\n\t\t\t\t\t\t\t_elm_lang$core$Maybe$Just(\n\t\t\t\t\t\t\t\t{subs: newSubs, pid: pid}));\n\t\t\t\t\t},\n\t\t\t\t\t_elm_lang$core$Process$spawn(\n\t\t\t\t\t\tA3(\n\t\t\t\t\t\t\t_elm_lang$dom$Dom_LowLevel$onWindow,\n\t\t\t\t\t\t\t'resize',\n\t\t\t\t\t\t\t_elm_lang$core$Json_Decode$succeed(\n\t\t\t\t\t\t\t\t{ctor: '_Tuple0'}),\n\t\t\t\t\t\t\tfunction (_p5) {\n\t\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t\t_elm_lang$core$Task$andThen,\n\t\t\t\t\t\t\t\t\t_elm_lang$core$Platform$sendToSelf(router),\n\t\t\t\t\t\t\t\t\t_elm_lang$window$Window$size);\n\t\t\t\t\t\t\t})));\n\t\t\t}\n\t\t} else {\n\t\t\tif (_p4._1.ctor === '[]') {\n\t\t\t\treturn A2(\n\t\t\t\t\t_elm_lang$window$Window_ops['&>'],\n\t\t\t\t\t_elm_lang$core$Process$kill(_p4._0._0.pid),\n\t\t\t\t\t_elm_lang$core$Task$succeed(_elm_lang$core$Maybe$Nothing));\n\t\t\t} else {\n\t\t\t\treturn _elm_lang$core$Task$succeed(\n\t\t\t\t\t_elm_lang$core$Maybe$Just(\n\t\t\t\t\t\t{subs: newSubs, pid: _p4._0._0.pid}));\n\t\t\t}\n\t\t}\n\t});\nvar _elm_lang$window$Window$subscription = _elm_lang$core$Native_Platform.leaf('Window');\nvar _elm_lang$window$Window$Size = F2(\n\tfunction (a, b) {\n\t\treturn {width: a, height: b};\n\t});\nvar _elm_lang$window$Window$MySub = function (a) {\n\treturn {ctor: 'MySub', _0: a};\n};\nvar _elm_lang$window$Window$resizes = function (tagger) {\n\treturn _elm_lang$window$Window$subscription(\n\t\t_elm_lang$window$Window$MySub(tagger));\n};\nvar _elm_lang$window$Window$subMap = F2(\n\tfunction (func, _p6) {\n\t\tvar _p7 = _p6;\n\t\treturn _elm_lang$window$Window$MySub(\n\t\t\tfunction (_p8) {\n\t\t\t\treturn func(\n\t\t\t\t\t_p7._0(_p8));\n\t\t\t});\n\t});\n_elm_lang$core$Native_Platform.effectManagers['Window'] = {pkg: 'elm-lang/window', init: _elm_lang$window$Window$init, onEffects: _elm_lang$window$Window$onEffects, onSelfMsg: _elm_lang$window$Window$onSelfMsg, tag: 'sub', subMap: _elm_lang$window$Window$subMap};\n\nvar _dtcristo$elm_screensaver$Main$fragmentShader = {'src': '\\n\\n        precision mediump float;\\n\\n        varying vec3 vColor;\\n\\n        void main () {\\n            gl_FragColor = vec4(vColor, 1);\\n        }\\n\\n    '};\nvar _dtcristo$elm_screensaver$Main$vertexShader = {'src': '\\n\\n        attribute vec3 position;\\n        attribute vec3 color;\\n\\n        uniform mat4 transformation;\\n\\n        varying vec3 vColor;\\n\\n        void main () {\\n            gl_Position = transformation * vec4(position, 1);\\n            vColor = color;\\n        }\\n\\n    '};\nvar _dtcristo$elm_screensaver$Main$meshScale = 50;\nvar _dtcristo$elm_screensaver$Main$projection = function (size) {\n\treturn A6(\n\t\t_elm_community$linear_algebra$Math_Matrix4$makeOrtho,\n\t\t0,\n\t\t_elm_lang$core$Basics$toFloat(size.width),\n\t\t_elm_lang$core$Basics$toFloat(size.height),\n\t\t0,\n\t\t-2 * _dtcristo$elm_screensaver$Main$meshScale,\n\t\t2 * _dtcristo$elm_screensaver$Main$meshScale);\n};\nvar _dtcristo$elm_screensaver$Main$transformation = function (model) {\n\treturn A2(\n\t\t_elm_community$linear_algebra$Math_Matrix4$scale,\n\t\tA3(_elm_community$linear_algebra$Math_Vector3$vec3, _dtcristo$elm_screensaver$Main$meshScale, _dtcristo$elm_screensaver$Main$meshScale, _dtcristo$elm_screensaver$Main$meshScale),\n\t\tA3(\n\t\t\t_elm_community$linear_algebra$Math_Matrix4$rotate,\n\t\t\t2 * model.theta,\n\t\t\tA3(_elm_community$linear_algebra$Math_Vector3$vec3, 0, 0, 1),\n\t\t\tA3(\n\t\t\t\t_elm_community$linear_algebra$Math_Matrix4$rotate,\n\t\t\t\t2 * model.theta,\n\t\t\t\tA3(_elm_community$linear_algebra$Math_Vector3$vec3, 0, 1, 0),\n\t\t\t\tA3(\n\t\t\t\t\t_elm_community$linear_algebra$Math_Matrix4$rotate,\n\t\t\t\t\t4 * model.theta,\n\t\t\t\t\tA3(_elm_community$linear_algebra$Math_Vector3$vec3, 1, 0, 0),\n\t\t\t\t\tA2(\n\t\t\t\t\t\t_elm_community$linear_algebra$Math_Matrix4$translate,\n\t\t\t\t\t\tA3(_elm_community$linear_algebra$Math_Vector3$vec3, model.position.x, model.position.y, 0),\n\t\t\t\t\t\t_dtcristo$elm_screensaver$Main$projection(model.size))))));\n};\nvar _dtcristo$elm_screensaver$Main$Position = F2(\n\tfunction (a, b) {\n\t\treturn {x: a, y: b};\n\t});\nvar _dtcristo$elm_screensaver$Main$Model = F4(\n\tfunction (a, b, c, d) {\n\t\treturn {position: a, direction: b, theta: c, size: d};\n\t});\nvar _dtcristo$elm_screensaver$Main$Vertex = F2(\n\tfunction (a, b) {\n\t\treturn {color: a, position: b};\n\t});\nvar _dtcristo$elm_screensaver$Main$face = F5(\n\tfunction (rawColor, a, b, c, d) {\n\t\tvar color = function () {\n\t\t\tvar c = _elm_lang$core$Color$toRgb(rawColor);\n\t\t\treturn A3(\n\t\t\t\t_elm_community$linear_algebra$Math_Vector3$vec3,\n\t\t\t\t_elm_lang$core$Basics$toFloat(c.red) / 255,\n\t\t\t\t_elm_lang$core$Basics$toFloat(c.green) / 255,\n\t\t\t\t_elm_lang$core$Basics$toFloat(c.blue) / 255);\n\t\t}();\n\t\tvar vertex = function (position) {\n\t\t\treturn A2(_dtcristo$elm_screensaver$Main$Vertex, color, position);\n\t\t};\n\t\treturn {\n\t\t\tctor: '::',\n\t\t\t_0: {\n\t\t\t\tctor: '_Tuple3',\n\t\t\t\t_0: vertex(a),\n\t\t\t\t_1: vertex(b),\n\t\t\t\t_2: vertex(c)\n\t\t\t},\n\t\t\t_1: {\n\t\t\t\tctor: '::',\n\t\t\t\t_0: {\n\t\t\t\t\tctor: '_Tuple3',\n\t\t\t\t\t_0: vertex(c),\n\t\t\t\t\t_1: vertex(d),\n\t\t\t\t\t_2: vertex(a)\n\t\t\t\t},\n\t\t\t\t_1: {ctor: '[]'}\n\t\t\t}\n\t\t};\n\t});\nvar _dtcristo$elm_screensaver$Main$mesh = function () {\n\tvar lbb = A3(_elm_community$linear_algebra$Math_Vector3$vec3, -1, -1, -1);\n\tvar lfb = A3(_elm_community$linear_algebra$Math_Vector3$vec3, -1, 1, -1);\n\tvar rfb = A3(_elm_community$linear_algebra$Math_Vector3$vec3, 1, 1, -1);\n\tvar rbb = A3(_elm_community$linear_algebra$Math_Vector3$vec3, 1, -1, -1);\n\tvar rbt = A3(_elm_community$linear_algebra$Math_Vector3$vec3, 1, -1, 1);\n\tvar lbt = A3(_elm_community$linear_algebra$Math_Vector3$vec3, -1, -1, 1);\n\tvar lft = A3(_elm_community$linear_algebra$Math_Vector3$vec3, -1, 1, 1);\n\tvar rft = A3(_elm_community$linear_algebra$Math_Vector3$vec3, 1, 1, 1);\n\treturn _elm_community$webgl$WebGL$triangles(\n\t\t_elm_lang$core$List$concat(\n\t\t\t{\n\t\t\t\tctor: '::',\n\t\t\t\t_0: A5(_dtcristo$elm_screensaver$Main$face, _elm_lang$core$Color$green, rft, rfb, rbb, rbt),\n\t\t\t\t_1: {\n\t\t\t\t\tctor: '::',\n\t\t\t\t\t_0: A5(_dtcristo$elm_screensaver$Main$face, _elm_lang$core$Color$blue, rft, rfb, lfb, lft),\n\t\t\t\t\t_1: {\n\t\t\t\t\t\tctor: '::',\n\t\t\t\t\t\t_0: A5(_dtcristo$elm_screensaver$Main$face, _elm_lang$core$Color$yellow, rft, lft, lbt, rbt),\n\t\t\t\t\t\t_1: {\n\t\t\t\t\t\t\tctor: '::',\n\t\t\t\t\t\t\t_0: A5(_dtcristo$elm_screensaver$Main$face, _elm_lang$core$Color$red, rfb, lfb, lbb, rbb),\n\t\t\t\t\t\t\t_1: {\n\t\t\t\t\t\t\t\tctor: '::',\n\t\t\t\t\t\t\t\t_0: A5(_dtcristo$elm_screensaver$Main$face, _elm_lang$core$Color$purple, lft, lfb, lbb, lbt),\n\t\t\t\t\t\t\t\t_1: {\n\t\t\t\t\t\t\t\t\tctor: '::',\n\t\t\t\t\t\t\t\t\t_0: A5(_dtcristo$elm_screensaver$Main$face, _elm_lang$core$Color$orange, rbt, rbb, lbb, lbt),\n\t\t\t\t\t\t\t\t\t_1: {ctor: '[]'}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}));\n}();\nvar _dtcristo$elm_screensaver$Main$view = function (model) {\n\treturn A3(\n\t\t_elm_community$webgl$WebGL$toHtmlWith,\n\t\t{\n\t\t\tctor: '::',\n\t\t\t_0: A4(_elm_community$webgl$WebGL$clearColor, 0, 0, 0, 1),\n\t\t\t_1: {\n\t\t\t\tctor: '::',\n\t\t\t\t_0: _elm_community$webgl$WebGL$depth(1),\n\t\t\t\t_1: {ctor: '[]'}\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tctor: '::',\n\t\t\t_0: _elm_lang$html$Html_Attributes$width(model.size.width),\n\t\t\t_1: {\n\t\t\t\tctor: '::',\n\t\t\t\t_0: _elm_lang$html$Html_Attributes$height(model.size.height),\n\t\t\t\t_1: {\n\t\t\t\t\tctor: '::',\n\t\t\t\t\t_0: _elm_lang$html$Html_Attributes$style(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tctor: '::',\n\t\t\t\t\t\t\t_0: {ctor: '_Tuple2', _0: 'display', _1: 'block'},\n\t\t\t\t\t\t\t_1: {ctor: '[]'}\n\t\t\t\t\t\t}),\n\t\t\t\t\t_1: {ctor: '[]'}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tctor: '::',\n\t\t\t_0: A4(\n\t\t\t\t_elm_community$webgl$WebGL$entity,\n\t\t\t\t_dtcristo$elm_screensaver$Main$vertexShader,\n\t\t\t\t_dtcristo$elm_screensaver$Main$fragmentShader,\n\t\t\t\t_dtcristo$elm_screensaver$Main$mesh,\n\t\t\t\t{\n\t\t\t\t\ttransformation: _dtcristo$elm_screensaver$Main$transformation(model)\n\t\t\t\t}),\n\t\t\t_1: {ctor: '[]'}\n\t\t});\n};\nvar _dtcristo$elm_screensaver$Main$Uniforms = function (a) {\n\treturn {transformation: a};\n};\nvar _dtcristo$elm_screensaver$Main$Varyings = function (a) {\n\treturn {vColor: a};\n};\nvar _dtcristo$elm_screensaver$Main$Negative = {ctor: 'Negative'};\nvar _dtcristo$elm_screensaver$Main$Positive = {ctor: 'Positive'};\nvar _dtcristo$elm_screensaver$Main$stepDirection = F4(\n\tfunction (size, direction, initial, ds) {\n\t\tvar _p0 = direction;\n\t\tif (_p0.ctor === 'Positive') {\n\t\t\tvar $new = initial + ds;\n\t\t\treturn (_elm_lang$core$Native_Utils.cmp(\n\t\t\t\t$new + (2 * _dtcristo$elm_screensaver$Main$meshScale),\n\t\t\t\t_elm_lang$core$Basics$toFloat(size)) > 0) ? {ctor: '_Tuple3', _0: $new, _1: _dtcristo$elm_screensaver$Main$Negative, _2: true} : {ctor: '_Tuple3', _0: $new, _1: _dtcristo$elm_screensaver$Main$Positive, _2: false};\n\t\t} else {\n\t\t\tvar $new = initial - ds;\n\t\t\treturn (_elm_lang$core$Native_Utils.cmp($new - (2 * _dtcristo$elm_screensaver$Main$meshScale), 0) < 0) ? {ctor: '_Tuple3', _0: $new, _1: _dtcristo$elm_screensaver$Main$Positive, _2: true} : {ctor: '_Tuple3', _0: $new, _1: _dtcristo$elm_screensaver$Main$Negative, _2: false};\n\t\t}\n\t});\nvar _dtcristo$elm_screensaver$Main$step = F2(\n\tfunction (model, dt) {\n\t\tvar ds = 1;\n\t\tvar _p1 = A4(_dtcristo$elm_screensaver$Main$stepDirection, model.size.width, model.direction.x, model.position.x, ds);\n\t\tvar xNew = _p1._0;\n\t\tvar xDirectionNew = _p1._1;\n\t\tvar xBounce = _p1._2;\n\t\tvar _p2 = A4(_dtcristo$elm_screensaver$Main$stepDirection, model.size.height, model.direction.y, model.position.y, ds);\n\t\tvar yNew = _p2._0;\n\t\tvar yDirectionNew = _p2._1;\n\t\tvar yBounce = _p2._2;\n\t\tvar cmd = (xBounce || yBounce) ? _elm_lang$core$Platform_Cmd$none : _elm_lang$core$Platform_Cmd$none;\n\t\treturn {\n\t\t\tctor: '_Tuple2',\n\t\t\t_0: _elm_lang$core$Native_Utils.update(\n\t\t\t\tmodel,\n\t\t\t\t{\n\t\t\t\t\tposition: A2(_dtcristo$elm_screensaver$Main$Position, xNew, yNew),\n\t\t\t\t\tdirection: {x: xDirectionNew, y: yDirectionNew},\n\t\t\t\t\ttheta: model.theta + (dt / 5000)\n\t\t\t\t}),\n\t\t\t_1: cmd\n\t\t};\n\t});\nvar _dtcristo$elm_screensaver$Main$update = F2(\n\tfunction (msg, model) {\n\t\tvar _p3 = msg;\n\t\tif (_p3.ctor === 'Resize') {\n\t\t\treturn {\n\t\t\t\tctor: '_Tuple2',\n\t\t\t\t_0: _elm_lang$core$Native_Utils.update(\n\t\t\t\t\tmodel,\n\t\t\t\t\t{size: _p3._0}),\n\t\t\t\t_1: _elm_lang$core$Platform_Cmd$none\n\t\t\t};\n\t\t} else {\n\t\t\treturn A2(_dtcristo$elm_screensaver$Main$step, model, _p3._0);\n\t\t}\n\t});\nvar _dtcristo$elm_screensaver$Main$Frame = function (a) {\n\treturn {ctor: 'Frame', _0: a};\n};\nvar _dtcristo$elm_screensaver$Main$Resize = function (a) {\n\treturn {ctor: 'Resize', _0: a};\n};\nvar _dtcristo$elm_screensaver$Main$init = {\n\tctor: '_Tuple2',\n\t_0: {\n\t\tposition: A2(_dtcristo$elm_screensaver$Main$Position, 100, 100),\n\t\tdirection: {x: _dtcristo$elm_screensaver$Main$Positive, y: _dtcristo$elm_screensaver$Main$Positive},\n\t\ttheta: 0,\n\t\tsize: A2(_elm_lang$window$Window$Size, 0, 0)\n\t},\n\t_1: A2(_elm_lang$core$Task$perform, _dtcristo$elm_screensaver$Main$Resize, _elm_lang$window$Window$size)\n};\nvar _dtcristo$elm_screensaver$Main$subscriptions = function (model) {\n\treturn _elm_lang$core$Platform_Sub$batch(\n\t\t{\n\t\t\tctor: '::',\n\t\t\t_0: _elm_lang$window$Window$resizes(_dtcristo$elm_screensaver$Main$Resize),\n\t\t\t_1: {\n\t\t\t\tctor: '::',\n\t\t\t\t_0: _elm_lang$animation_frame$AnimationFrame$diffs(_dtcristo$elm_screensaver$Main$Frame),\n\t\t\t\t_1: {ctor: '[]'}\n\t\t\t}\n\t\t});\n};\nvar _dtcristo$elm_screensaver$Main$main = _elm_lang$html$Html$program(\n\t{init: _dtcristo$elm_screensaver$Main$init, view: _dtcristo$elm_screensaver$Main$view, subscriptions: _dtcristo$elm_screensaver$Main$subscriptions, update: _dtcristo$elm_screensaver$Main$update})();\n\nvar Elm = {};\nElm['Main'] = Elm['Main'] || {};\nif (typeof _dtcristo$elm_screensaver$Main$main !== 'undefined') {\n    _dtcristo$elm_screensaver$Main$main(Elm['Main'], 'Main', undefined);\n}\n\nif (typeof define === \"function\" && define['amd'])\n{\n  define([], function() { return Elm; });\n  return;\n}\n\nif (typeof module === \"object\")\n{\n  module['exports'] = Elm;\n  return;\n}\n\nvar globalElm = this['Elm'];\nif (typeof globalElm === \"undefined\")\n{\n  this['Elm'] = Elm;\n  return;\n}\n\nfor (var publicModule in Elm)\n{\n  if (publicModule in globalElm)\n  {\n    throw new Error('There are two Elm modules called `' + publicModule + '` on this page! Rename one of them.');\n  }\n  globalElm[publicModule] = Elm[publicModule];\n}\n\n}).call(this);\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Main.elm\n// module id = /xT0\n// module chunks = 0","require('./index.css');\n\nconst Elm = require('./Main.elm');\nconst app = Elm.Main.embed(document.querySelector('#app'));\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js"],"sourceRoot":""}